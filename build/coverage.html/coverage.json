{"/home/travis/build/npmtest/node-npmtest-ipfs/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_ipfs */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/lib.npmtest_ipfs.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/lib.npmtest_ipfs.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":49}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":55}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_ipfs */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_ipfs = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_ipfs = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":48}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":62},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-ipfs && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_ipfs */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_ipfs","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_ipfs.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_ipfs.rollup.js'] =","            local.assetsDict['/assets.npmtest_ipfs.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_ipfs.__dirname + '/lib.npmtest_ipfs.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":1,"63":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":20,"loc":{"start":{"line":20,"column":14},"end":{"line":20,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":50}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":45}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":33}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":37}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":38}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":40}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":37}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":27}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":30}},"10":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}},"11":{"start":{"line":13,"column":0},"end":{"line":13,"column":38}},"12":{"start":{"line":15,"column":0},"end":{"line":15,"column":45}},"13":{"start":{"line":16,"column":0},"end":{"line":16,"column":30}},"14":{"start":{"line":17,"column":0},"end":{"line":17,"column":42}},"15":{"start":{"line":21,"column":4},"end":{"line":21,"column":11}},"16":{"start":{"line":23,"column":4},"end":{"line":27,"column":5}},"17":{"start":{"line":29,"column":4},"end":{"line":29,"column":27}},"18":{"start":{"line":31,"column":4},"end":{"line":31,"column":34}},"19":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"20":{"start":{"line":34,"column":6},"end":{"line":34,"column":32}},"21":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"22":{"start":{"line":38,"column":6},"end":{"line":38,"column":32}},"23":{"start":{"line":41,"column":4},"end":{"line":46,"column":5}},"24":{"start":{"line":43,"column":6},"end":{"line":43,"column":44}},"25":{"start":{"line":45,"column":6},"end":{"line":45,"column":31}},"26":{"start":{"line":49,"column":4},"end":{"line":49,"column":30}},"27":{"start":{"line":50,"column":4},"end":{"line":50,"column":38}},"28":{"start":{"line":52,"column":4},"end":{"line":52,"column":44}},"29":{"start":{"line":52,"column":30},"end":{"line":52,"column":43}},"30":{"start":{"line":55,"column":4},"end":{"line":62,"column":5}},"31":{"start":{"line":66,"column":4},"end":{"line":66,"column":39}},"32":{"start":{"line":67,"column":4},"end":{"line":67,"column":30}},"33":{"start":{"line":68,"column":4},"end":{"line":68,"column":32}},"34":{"start":{"line":69,"column":4},"end":{"line":69,"column":29}},"35":{"start":{"line":70,"column":4},"end":{"line":70,"column":53}},"36":{"start":{"line":71,"column":4},"end":{"line":71,"column":61}},"37":{"start":{"line":72,"column":4},"end":{"line":72,"column":28}},"38":{"start":{"line":76,"column":4},"end":{"line":76,"column":37}},"39":{"start":{"line":77,"column":4},"end":{"line":77,"column":45}},"40":{"start":{"line":78,"column":4},"end":{"line":78,"column":39}},"41":{"start":{"line":79,"column":4},"end":{"line":79,"column":37}},"42":{"start":{"line":80,"column":4},"end":{"line":80,"column":45}},"43":{"start":{"line":82,"column":4},"end":{"line":82,"column":43}},"44":{"start":{"line":83,"column":4},"end":{"line":83,"column":33}},"45":{"start":{"line":84,"column":4},"end":{"line":84,"column":37}},"46":{"start":{"line":85,"column":4},"end":{"line":85,"column":47}},"47":{"start":{"line":86,"column":4},"end":{"line":86,"column":41}},"48":{"start":{"line":87,"column":4},"end":{"line":87,"column":39}},"49":{"start":{"line":88,"column":4},"end":{"line":88,"column":41}},"50":{"start":{"line":89,"column":4},"end":{"line":89,"column":35}},"51":{"start":{"line":90,"column":4},"end":{"line":90,"column":41}},"52":{"start":{"line":91,"column":4},"end":{"line":91,"column":39}},"53":{"start":{"line":92,"column":4},"end":{"line":92,"column":39}},"54":{"start":{"line":93,"column":4},"end":{"line":93,"column":43}},"55":{"start":{"line":94,"column":4},"end":{"line":94,"column":37}},"56":{"start":{"line":95,"column":4},"end":{"line":95,"column":41}},"57":{"start":{"line":97,"column":4},"end":{"line":99,"column":5}},"58":{"start":{"line":98,"column":6},"end":{"line":98,"column":48}},"59":{"start":{"line":100,"column":4},"end":{"line":100,"column":41}},"60":{"start":{"line":102,"column":4},"end":{"line":102,"column":14}},"61":{"start":{"line":106,"column":0},"end":{"line":106,"column":31}},"62":{"start":{"line":108,"column":0},"end":{"line":110,"column":1}},"63":{"start":{"line":109,"column":2},"end":{"line":109,"column":26}}},"branchMap":{"1":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":14},"end":{"line":29,"column":21}},{"start":{"line":29,"column":25},"end":{"line":29,"column":27}}]},"2":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":4}},{"start":{"line":33,"column":4},"end":{"line":33,"column":4}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"4":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":41,"column":4}},{"start":{"line":41,"column":4},"end":{"line":41,"column":4}}]},"5":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":8},"end":{"line":41,"column":40}},{"start":{"line":42,"column":8},"end":{"line":42,"column":34}}]},"6":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":97,"column":4}},{"start":{"line":97,"column":4},"end":{"line":97,"column":4}}]}},"code":["'use strict'","","const BlockService = require('ipfs-block-service')","const IPLDResolver = require('ipld-resolver')","const PeerId = require('peer-id')","const PeerInfo = require('peer-info')","const multiaddr = require('multiaddr')","const multihash = require('multihashes')","const PeerBook = require('peer-book')","const CID = require('cids')","const debug = require('debug')","const extend = require('deep-extend')","const EventEmitter = require('events')","","const defaultRepo = require('./default-repo')","const boot = require('./boot')","const components = require('./components')","","class IPFS extends EventEmitter {","  constructor (options) {","    super()","","    this._options = {","      init: true,","      start: true,","      EXPERIMENTAL: {}","    }","","    options = options || {}","","    extend(this._options, options)","","    if (options.init === false) {","      this._options.init = false","    }","","    if (!(options.start === false)) {","      this._options.start = true","    }","","    if (typeof options.repo === 'string' ||","        options.repo === undefined) {","      this._repo = defaultRepo(options.repo)","    } else {","      this._repo = options.repo","    }","","    // IPFS utils","    this.log = debug('jsipfs')","    this.log.err = debug('jsipfs:err')","","    this.on('error', (err) => this.log(err))","","    // IPFS types","    this.types = {","      Buffer: Buffer,","      PeerId: PeerId,","      PeerInfo: PeerInfo,","      multiaddr: multiaddr,","      multihash: multihash,","      CID: CID","    }","","    // IPFS Core Internals","    // this._repo - assigned above","    this._peerInfoBook = new PeerBook()","    this._peerInfo = undefined","    this._libp2pNode = undefined","    this._bitswap = undefined","    this._blockService = new BlockService(this._repo)","    this._ipldResolver = new IPLDResolver(this._blockService)","    this._pubsub = undefined","","    // IPFS Core exposed components","    //   - for booting up a node","    this.init = components.init(this)","    this.preStart = components.preStart(this)","    this.start = components.start(this)","    this.stop = components.stop(this)","    this.isOnline = components.isOnline(this)","    //   - interface-ipfs-core defined API","    this.version = components.version(this)","    this.id = components.id(this)","    this.repo = components.repo(this)","    this.bootstrap = components.bootstrap(this)","    this.config = components.config(this)","    this.block = components.block(this)","    this.object = components.object(this)","    this.dag = components.dag(this)","    this.libp2p = components.libp2p(this)","    this.swarm = components.swarm(this)","    this.files = components.files(this)","    this.bitswap = components.bitswap(this)","    this.ping = components.ping(this)","    this.pubsub = components.pubsub(this)","","    if (this._options.EXPERIMENTAL.pubsub) {","      this.log('EXPERIMENTAL pubsub is enabled')","    }","    this.state = require('./state')(this)","","    boot(this)","  }","}","","exports = module.exports = IPFS","","exports.createNode = (options) => {","  return new IPFS(options)","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"15":1,"16":1,"17":1,"21":0,"23":0,"29":0,"31":0,"33":0,"34":0,"37":0,"38":0,"41":0,"43":0,"45":0,"49":0,"50":0,"52":0,"55":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"76":0,"77":0,"78":0,"79":0,"80":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"97":0,"98":0,"100":0,"102":0,"106":1,"108":1,"109":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-block-service/src/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-block-service/src/index.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":14},"end":{"line":15,"column":25}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":11},"end":{"line":30,"column":21}}},"3":{"name":"(anonymous_3)","line":39,"loc":{"start":{"line":39,"column":12},"end":{"line":39,"column":15}}},"4":{"name":"(anonymous_4)","line":48,"loc":{"start":{"line":48,"column":11},"end":{"line":48,"column":14}}},"5":{"name":"(anonymous_5)","line":59,"loc":{"start":{"line":59,"column":6},"end":{"line":59,"column":24}}},"6":{"name":"(anonymous_6)","line":74,"loc":{"start":{"line":74,"column":10},"end":{"line":74,"column":29}}},"7":{"name":"(anonymous_7)","line":89,"loc":{"start":{"line":89,"column":6},"end":{"line":89,"column":22}}},"8":{"name":"(anonymous_8)","line":104,"loc":{"start":{"line":104,"column":9},"end":{"line":104,"column":25}}}},"statementMap":{"1":{"start":{"line":16,"column":4},"end":{"line":16,"column":25}},"2":{"start":{"line":17,"column":4},"end":{"line":17,"column":24}},"3":{"start":{"line":31,"column":4},"end":{"line":31,"column":27}},"4":{"start":{"line":40,"column":4},"end":{"line":40,"column":24}},"5":{"start":{"line":49,"column":4},"end":{"line":49,"column":32}},"6":{"start":{"line":60,"column":4},"end":{"line":62,"column":5}},"7":{"start":{"line":61,"column":6},"end":{"line":61,"column":47}},"8":{"start":{"line":64,"column":4},"end":{"line":64,"column":46}},"9":{"start":{"line":75,"column":4},"end":{"line":77,"column":5}},"10":{"start":{"line":76,"column":6},"end":{"line":76,"column":52}},"11":{"start":{"line":79,"column":4},"end":{"line":79,"column":51}},"12":{"start":{"line":90,"column":4},"end":{"line":92,"column":5}},"13":{"start":{"line":91,"column":6},"end":{"line":91,"column":45}},"14":{"start":{"line":94,"column":4},"end":{"line":94,"column":51}},"15":{"start":{"line":105,"column":4},"end":{"line":105,"column":47}},"16":{"start":{"line":109,"column":0},"end":{"line":109,"column":29}}},"branchMap":{"1":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":60,"column":4}},{"start":{"line":60,"column":4},"end":{"line":60,"column":4}}]},"2":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":4},"end":{"line":75,"column":4}},{"start":{"line":75,"column":4},"end":{"line":75,"column":4}}]},"3":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":4},"end":{"line":90,"column":4}},{"start":{"line":90,"column":4},"end":{"line":90,"column":4}}]}},"code":["'use strict'","","/**"," * BlockService is a hybrid block datastore. It stores data in a local"," * datastore and may retrieve data from a remote Exchange."," * It uses an internal `datastore.Datastore` instance to store values."," */","class BlockService {","  /**","   * Create a new BlockService","   *","   * @param {IPFSRepo} ipfsRepo","   * @returns {BlockService}","   */","  constructor (ipfsRepo) {","    this._repo = ipfsRepo","    this._bitswap = null","  }","","  /**","   * Add a bitswap instance that communicates with the","   * network to retreive blocks that are not in the local store.","   *","   * If the node is online all requests for blocks first","   * check locally and afterwards ask the network for the blocks.","   *","   * @param {Bitswap} bitswap","   * @returns {void}","   */","  goOnline (bitswap) {","    this._bitswap = bitswap","  }","","  /**","   * Go offline, i.e. drop the reference to bitswap.","   *","   * @returns {void}","   */","  goOffline () {","    this._bitswap = null","  }","","  /**","   * Is the blockservice online, i.e. is bitswap present.","   *","   * @returns {bool}","   */","  isOnline () {","    return this._bitswap != null","  }","","  /**","   * Put a block to the underlying datastore.","   *","   * @param {Block} block","   * @param {function(Error)} callback","   * @returns {void}","   */","  put (block, callback) {","    if (this.isOnline()) {","      return this._bitswap.put(block, callback)","    }","","    this._repo.blockstore.put(block, callback)","  }","","  /**","   * Put a multiple blocks to the underlying datastore.","   *","   * @param {Array<Block>} blocks","   * @param {function(Error)} callback","   * @returns {void}","   */","  putMany (blocks, callback) {","    if (this.isOnline()) {","      return this._bitswap.putMany(blocks, callback)","    }","","    this._repo.blockstore.putMany(blocks, callback)","  }","","  /**","   * Get a block by cid.","   *","   * @param {CID} cid","   * @param {function(Error, Block)} callback","   * @returns {void}","   */","  get (cid, callback) {","    if (this.isOnline()) {","      return this._bitswap.get(cid, callback)","    }","","    return this._repo.blockstore.get(cid, callback)","  }","","  /**","   * Delete a block from the blockstore.","   *","   * @param {CID} cid","   * @param {function(Error)} callback","   * @return {void}","   */","  delete (cid, callback) {","    this._repo.blockstore.delete(cid, callback)","  }","}","","module.exports = BlockService",""],"l":{"16":0,"17":0,"31":0,"40":0,"49":0,"60":0,"61":0,"64":0,"75":0,"76":0,"79":0,"90":0,"91":0,"94":0,"105":0,"109":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-block/src/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-block/src/index.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":16,"loc":{"start":{"line":16,"column":14},"end":{"line":16,"column":26}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":11},"end":{"line":34,"column":14}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":11},"end":{"line":38,"column":17}}},"4":{"name":"(anonymous_4)","line":47,"loc":{"start":{"line":47,"column":10},"end":{"line":47,"column":13}}},"5":{"name":"(anonymous_5)","line":51,"loc":{"start":{"line":51,"column":10},"end":{"line":51,"column":16}}},"6":{"name":"(anonymous_6)","line":61,"loc":{"start":{"line":61,"column":17},"end":{"line":61,"column":25}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"3":{"start":{"line":18,"column":6},"end":{"line":18,"column":57}},"4":{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},"5":{"start":{"line":22,"column":6},"end":{"line":22,"column":54}},"6":{"start":{"line":25,"column":4},"end":{"line":25,"column":21}},"7":{"start":{"line":26,"column":4},"end":{"line":26,"column":19}},"8":{"start":{"line":35,"column":4},"end":{"line":35,"column":21}},"9":{"start":{"line":39,"column":4},"end":{"line":39,"column":57}},"10":{"start":{"line":48,"column":4},"end":{"line":48,"column":20}},"11":{"start":{"line":52,"column":4},"end":{"line":52,"column":57}},"12":{"start":{"line":62,"column":4},"end":{"line":62,"column":54}},"13":{"start":{"line":66,"column":0},"end":{"line":66,"column":22}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":4}},{"start":{"line":17,"column":4},"end":{"line":17,"column":4}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":8},"end":{"line":17,"column":13}},{"start":{"line":17,"column":17},"end":{"line":17,"column":39}}]},"3":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":4}},{"start":{"line":21,"column":4},"end":{"line":21,"column":4}}]},"4":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":8},"end":{"line":21,"column":12}},{"start":{"line":21,"column":16},"end":{"line":21,"column":31}}]},"5":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":11},"end":{"line":62,"column":16}},{"start":{"line":62,"column":20},"end":{"line":62,"column":54}}]}},"code":["'use strict'","","const CID = require('cids')","","/**"," * Represents an immutable block of data that is uniquely referenced with a cid."," *"," * @constructor"," * @param {Buffer} data - The data to be stored in the block as a buffer."," * @param {CID} cid - The cid of the data"," *"," * @example"," * const block = new Block(new Buffer('a012d83b20f9371...'))"," */","class Block {","  constructor (data, cid) {","    if (!data || !Buffer.isBuffer(data)) {","      throw new Error('first argument  must be a buffer')","    }","","    if (!cid || !CID.isCID(cid)) {","      throw new Error('second argument must be a CID')","    }","","    this._data = data","    this._cid = cid","  }","","  /**","   * The data of this block.","   *","   * @type {Buffer}","   */","  get data () {","    return this._data","  }","","  set data (val) {","    throw new Error('Tried to change an immutable block')","  }","","  /**","   * The cid of the data this block represents.","   *","   * @type {CID}","   */","  get cid () {","    return this._cid","  }","","  set cid (val) {","    throw new Error('Tried to change an immutable block')","  }","","  /**","   * Check if the given value is a Block.","   *","   * @param {any} other","   * @returns {bool}","   */","  static isBlock (other) {","    return other && other.constructor.name === 'Block'","  }","}","","module.exports = Block",""],"l":{"3":1,"17":0,"18":0,"21":0,"22":0,"25":0,"26":0,"35":0,"39":0,"48":0,"52":0,"62":0,"66":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/default-repo.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/default-repo.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0},"b":{"1":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":37}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":28}},"4":{"start":{"line":7,"column":0},"end":{"line":11,"column":1}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":60}},"6":{"start":{"line":10,"column":2},"end":{"line":10,"column":31}}},"branchMap":{"1":{"line":8,"type":"binary-expr","locations":[{"start":{"line":8,"column":19},"end":{"line":8,"column":22}},{"start":{"line":8,"column":26},"end":{"line":8,"column":60}}]}},"code":["'use strict'","","const os = require('os')","const IPFSRepo = require('ipfs-repo')","const path = require('path')","","module.exports = (dir) => {","  const repoPath = dir || path.join(os.homedir(), '.jsipfs')","","  return new IPFSRepo(repoPath)","}",""],"l":{"3":1,"4":1,"5":1,"7":1,"8":0,"10":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-repo/src/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-repo/src/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":43,"loc":{"start":{"line":43,"column":14},"end":{"line":43,"column":34}}},"2":{"name":"(anonymous_2)","line":81,"loc":{"start":{"line":81,"column":7},"end":{"line":81,"column":26}}},"3":{"name":"(anonymous_3)","line":103,"loc":{"start":{"line":103,"column":7},"end":{"line":103,"column":18}}},"4":{"name":"(anonymous_4)","line":169,"loc":{"start":{"line":169,"column":17},"end":{"line":169,"column":28}}},"5":{"name":"(anonymous_5)","line":193,"loc":{"start":{"line":193,"column":8},"end":{"line":193,"column":19}}},"6":{"name":"(anonymous_6)","line":226,"loc":{"start":{"line":226,"column":9},"end":{"line":226,"column":20}}},"7":{"name":"(anonymous_7)","line":237,"loc":{"start":{"line":237,"column":16},"end":{"line":237,"column":33}}},"8":{"name":"(anonymous_8)","line":247,"loc":{"start":{"line":247,"column":13},"end":{"line":247,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":38}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":44}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":46}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":45}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":44}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":38}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":42}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":38}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":44}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":32}},"12":{"start":{"line":15,"column":0},"end":{"line":15,"column":28}},"13":{"start":{"line":16,"column":0},"end":{"line":16,"column":30}},"14":{"start":{"line":18,"column":0},"end":{"line":18,"column":36}},"15":{"start":{"line":19,"column":0},"end":{"line":19,"column":34}},"16":{"start":{"line":20,"column":0},"end":{"line":20,"column":42}},"17":{"start":{"line":22,"column":0},"end":{"line":22,"column":25}},"18":{"start":{"line":24,"column":0},"end":{"line":24,"column":30}},"19":{"start":{"line":25,"column":0},"end":{"line":25,"column":32}},"20":{"start":{"line":26,"column":0},"end":{"line":26,"column":34}},"21":{"start":{"line":27,"column":0},"end":{"line":27,"column":21}},"22":{"start":{"line":44,"column":4},"end":{"line":44,"column":63}},"23":{"start":{"line":46,"column":4},"end":{"line":48,"column":5}},"24":{"start":{"line":47,"column":6},"end":{"line":47,"column":44}},"25":{"start":{"line":50,"column":4},"end":{"line":50,"column":22}},"26":{"start":{"line":51,"column":4},"end":{"line":51,"column":24}},"27":{"start":{"line":52,"column":4},"end":{"line":55,"column":15}},"28":{"start":{"line":56,"column":4},"end":{"line":56,"column":58}},"29":{"start":{"line":57,"column":4},"end":{"line":57,"column":35}},"30":{"start":{"line":58,"column":4},"end":{"line":60,"column":7}},"31":{"start":{"line":62,"column":4},"end":{"line":62,"column":41}},"32":{"start":{"line":63,"column":4},"end":{"line":63,"column":39}},"33":{"start":{"line":65,"column":4},"end":{"line":71,"column":5}},"34":{"start":{"line":66,"column":6},"end":{"line":66,"column":45}},"35":{"start":{"line":67,"column":11},"end":{"line":71,"column":5}},"36":{"start":{"line":68,"column":6},"end":{"line":68,"column":38}},"37":{"start":{"line":70,"column":6},"end":{"line":70,"column":66}},"38":{"start":{"line":82,"column":4},"end":{"line":82,"column":41}},"39":{"start":{"line":84,"column":4},"end":{"line":93,"column":16}},"40":{"start":{"line":85,"column":14},"end":{"line":90,"column":8}},"41":{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},"42":{"start":{"line":87,"column":10},"end":{"line":87,"column":21}},"43":{"start":{"line":89,"column":8},"end":{"line":89,"column":15}},"44":{"start":{"line":91,"column":14},"end":{"line":91,"column":41}},"45":{"start":{"line":92,"column":14},"end":{"line":92,"column":47}},"46":{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},"47":{"start":{"line":105,"column":6},"end":{"line":105,"column":56}},"48":{"start":{"line":107,"column":4},"end":{"line":107,"column":36}},"49":{"start":{"line":110,"column":4},"end":{"line":159,"column":6}},"50":{"start":{"line":111,"column":14},"end":{"line":116,"column":8}},"51":{"start":{"line":112,"column":8},"end":{"line":114,"column":9}},"52":{"start":{"line":113,"column":10},"end":{"line":113,"column":21}},"53":{"start":{"line":115,"column":8},"end":{"line":115,"column":15}},"54":{"start":{"line":117,"column":14},"end":{"line":117,"column":37}},"55":{"start":{"line":118,"column":14},"end":{"line":118,"column":46}},"56":{"start":{"line":120,"column":8},"end":{"line":120,"column":32}},"57":{"start":{"line":121,"column":8},"end":{"line":121,"column":27}},"58":{"start":{"line":123,"column":8},"end":{"line":123,"column":30}},"59":{"start":{"line":124,"column":8},"end":{"line":124,"column":39}},"60":{"start":{"line":125,"column":8},"end":{"line":125,"column":85}},"61":{"start":{"line":127,"column":8},"end":{"line":132,"column":9}},"62":{"start":{"line":128,"column":10},"end":{"line":128,"column":52}},"63":{"start":{"line":129,"column":10},"end":{"line":129,"column":50}},"64":{"start":{"line":131,"column":10},"end":{"line":131,"column":21}},"65":{"start":{"line":135,"column":8},"end":{"line":135,"column":34}},"66":{"start":{"line":136,"column":8},"end":{"line":144,"column":11}},"67":{"start":{"line":146,"column":8},"end":{"line":146,"column":42}},"68":{"start":{"line":147,"column":8},"end":{"line":147,"column":27}},"69":{"start":{"line":148,"column":8},"end":{"line":148,"column":12}},"70":{"start":{"line":151,"column":6},"end":{"line":156,"column":7}},"71":{"start":{"line":152,"column":8},"end":{"line":155,"column":10}},"72":{"start":{"line":153,"column":10},"end":{"line":153,"column":42}},"73":{"start":{"line":154,"column":10},"end":{"line":154,"column":23}},"74":{"start":{"line":158,"column":6},"end":{"line":158,"column":19}},"75":{"start":{"line":170,"column":4},"end":{"line":170,"column":21}},"76":{"start":{"line":171,"column":4},"end":{"line":184,"column":6}},"77":{"start":{"line":172,"column":14},"end":{"line":172,"column":36}},"78":{"start":{"line":173,"column":14},"end":{"line":173,"column":49}},"79":{"start":{"line":175,"column":6},"end":{"line":175,"column":27}},"80":{"start":{"line":176,"column":6},"end":{"line":178,"column":7}},"81":{"start":{"line":177,"column":8},"end":{"line":177,"column":28}},"82":{"start":{"line":180,"column":6},"end":{"line":182,"column":7}},"83":{"start":{"line":181,"column":8},"end":{"line":181,"column":65}},"84":{"start":{"line":183,"column":6},"end":{"line":183,"column":16}},"85":{"start":{"line":194,"column":4},"end":{"line":196,"column":5}},"86":{"start":{"line":195,"column":6},"end":{"line":195,"column":58}},"87":{"start":{"line":198,"column":4},"end":{"line":198,"column":36}},"88":{"start":{"line":199,"column":4},"end":{"line":217,"column":30}},"89":{"start":{"line":200,"column":14},"end":{"line":205,"column":8}},"90":{"start":{"line":201,"column":8},"end":{"line":203,"column":9}},"91":{"start":{"line":202,"column":10},"end":{"line":202,"column":21}},"92":{"start":{"line":204,"column":8},"end":{"line":204,"column":15}},"93":{"start":{"line":206,"column":14},"end":{"line":206,"column":34}},"94":{"start":{"line":207,"column":14},"end":{"line":207,"column":37}},"95":{"start":{"line":209,"column":8},"end":{"line":209,"column":24}},"96":{"start":{"line":210,"column":8},"end":{"line":210,"column":26}},"97":{"start":{"line":211,"column":8},"end":{"line":211,"column":31}},"98":{"start":{"line":214,"column":8},"end":{"line":214,"column":28}},"99":{"start":{"line":215,"column":8},"end":{"line":215,"column":12}},"100":{"start":{"line":217,"column":16},"end":{"line":217,"column":29}},"101":{"start":{"line":227,"column":4},"end":{"line":227,"column":33}},"102":{"start":{"line":238,"column":4},"end":{"line":238,"column":70}},"103":{"start":{"line":248,"column":4},"end":{"line":254,"column":6}},"104":{"start":{"line":249,"column":6},"end":{"line":251,"column":7}},"105":{"start":{"line":250,"column":8},"end":{"line":250,"column":28}},"106":{"start":{"line":253,"column":6},"end":{"line":253,"column":55}},"107":{"start":{"line":258,"column":0},"end":{"line":258,"column":25}}},"branchMap":{"1":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"2":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":65,"column":4}},{"start":{"line":65,"column":4},"end":{"line":65,"column":4}}]},"3":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":11},"end":{"line":67,"column":11}},{"start":{"line":67,"column":11},"end":{"line":67,"column":11}}]},"4":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":8},"end":{"line":86,"column":8}},{"start":{"line":86,"column":8},"end":{"line":86,"column":8}}]},"5":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":12},"end":{"line":86,"column":15}},{"start":{"line":86,"column":19},"end":{"line":86,"column":49}}]},"6":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":104,"column":4}},{"start":{"line":104,"column":4},"end":{"line":104,"column":4}}]},"7":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":8},"end":{"line":112,"column":8}},{"start":{"line":112,"column":8},"end":{"line":112,"column":8}}]},"8":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":12},"end":{"line":112,"column":15}},{"start":{"line":112,"column":19},"end":{"line":112,"column":49}}]},"9":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":8},"end":{"line":127,"column":8}},{"start":{"line":127,"column":8},"end":{"line":127,"column":8}}]},"10":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":6},"end":{"line":151,"column":6}},{"start":{"line":151,"column":6},"end":{"line":151,"column":6}}]},"11":{"line":151,"type":"binary-expr","locations":[{"start":{"line":151,"column":10},"end":{"line":151,"column":13}},{"start":{"line":151,"column":17},"end":{"line":151,"column":30}}]},"12":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":6},"end":{"line":176,"column":6}},{"start":{"line":176,"column":6},"end":{"line":176,"column":6}}]},"13":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":6},"end":{"line":180,"column":6}},{"start":{"line":180,"column":6},"end":{"line":180,"column":6}}]},"14":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":4},"end":{"line":194,"column":4}},{"start":{"line":194,"column":4},"end":{"line":194,"column":4}}]},"15":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":8},"end":{"line":201,"column":8}},{"start":{"line":201,"column":8},"end":{"line":201,"column":8}}]},"16":{"line":201,"type":"binary-expr","locations":[{"start":{"line":201,"column":12},"end":{"line":201,"column":15}},{"start":{"line":201,"column":19},"end":{"line":201,"column":51}}]},"17":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":6},"end":{"line":249,"column":6}},{"start":{"line":249,"column":6},"end":{"line":249,"column":6}}]}},"code":["'use strict'","","const core = require('datastore-core')","const MountStore = core.MountDatastore","const ShardingStore = core.ShardingDatastore","","const Key = require('interface-datastore').Key","const LevelStore = require('datastore-level')","const waterfall = require('async/waterfall')","const series = require('async/series')","const parallel = require('async/parallel')","const Multiaddr = require('multiaddr')","const Buffer = require('safe-buffer').Buffer","const assert = require('assert')","const path = require('path')","const debug = require('debug')","","const version = require('./version')","const config = require('./config')","const blockstore = require('./blockstore')","","const log = debug('repo')","","const apiFile = new Key('api')","const flatfsDirectory = 'blocks'","const levelDirectory = 'datastore'","const repoVersion = 5","","/**"," * IpfsRepo implements all required functionality to read and write to an ipfs repo."," *"," */","class IpfsRepo {","  /**","   * @param {string} repoPath - path where the repo is stored","   * @param {object} options - Configuration","   * @param {Datastore} options.fs","   * @param {Leveldown} options.level","   * @param {object} [options.fsOptions={}]","   * @param {bool} [options.sharding=true] - Enable sharding (flatfs on disk), not needed in the browser.","   * @param {string} [options.lock='fs'] - Either `fs` or `memory`.","   */","  constructor (repoPath, options) {","    assert.equal(typeof repoPath, 'string', 'missing repoPath')","","    if (options == null) {","      options = require('./default-options')","    }","","    this.closed = true","    this.path = repoPath","    this.options = Object.assign({","      sharding: true,","      lock: 'fs'","    }, options)","    this._fsOptions = Object.assign({}, options.fsOptions)","    const FsStore = this.options.fs","    this._fsStore = new FsStore(this.path, Object.assign({}, this._fsOptions, {","      extension: ''","    }))","","    this.version = version(this._fsStore)","    this.config = config(this._fsStore)","","    if (this.options.lock === 'memory') {","      this._locker = require('./lock-memory')","    } else if (this.options.lock === 'fs') {","      this._locker = require('./lock')","    } else {","      throw new Error('Unkown lock options: ' + this.options.lock)","    }","  }","","  /**","   * Initialize a new repo.","   *","   * @param {Object} config - config to write into `config`.","   * @param {function(Error)} callback","   * @returns {void}","   */","  init (config, callback) {","    log('initializing at: %s', this.path)","","    series([","      (cb) => this._fsStore.open((err) => {","        if (err && err.message === 'Already open') {","          return cb()","        }","        cb(err)","      }),","      (cb) => this.config.set(config, cb),","      (cb) => this.version.set(repoVersion, cb)","    ], callback)","  }","","  /**","   * Open the repo. If the repo is already open no action will be taken.","   * If the repo is not initialized it will return an error.","   *","   * @param {function(Error)} callback","   * @returns {void}","   */","  open (callback) {","    if (!this.closed) {","      return callback(new Error('repo is already open'))","    }","    log('opening at: %s', this.path)","","    // check if the repo is already initialized","    waterfall([","      (cb) => this._fsStore.open((err) => {","        if (err && err.message === 'Already open') {","          return cb()","        }","        cb(err)","      }),","      (cb) => this._isInitialized(cb),","      (cb) => this._locker.lock(this.path, cb),","      (lck, cb) => {","        log('aquired repo.lock')","        this.lockfile = lck","","        log('creating flatfs')","        const FsStore = this.options.fs","        const s = new FsStore(path.join(this.path, flatfsDirectory), this._fsOptions)","","        if (this.options.sharding) {","          const shard = new core.shard.NextToLast(2)","          ShardingStore.createOrOpen(s, shard, cb)","        } else {","          cb(null, s)","        }","      },","      (flatfs, cb) => {","        log('Flatfs store opened')","        this.store = new MountStore([{","          prefix: new Key(flatfsDirectory),","          datastore: flatfs","        }, {","          prefix: new Key('/'),","          datastore: new LevelStore(path.join(this.path, levelDirectory), {","            db: this.options.level","          })","        }])","","        this.blockstore = blockstore(this)","        this.closed = false","        cb()","      }","    ], (err) => {","      if (err && this.lockfile) {","        return this.lockfile.close((err2) => {","          log('error removing lock', err2)","          callback(err)","        })","      }","","      callback(err)","    })","  }","","  /**","   * Check if the repo is already initialized.","   *","   * @private","   * @param {function(Error)} callback","   * @returns {void}","   */","  _isInitialized (callback) {","    log('init check')","    parallel([","      (cb) => this.config.exists(cb),","      (cb) => this.version.check(repoVersion, cb)","    ], (err, res) => {","      log('init', err, res)","      if (err) {","        return callback(err)","      }","","      if (!res[0]) {","        return callback(new Error('repo is not initialized yet'))","      }","      callback()","    })","  }","","  /**","   * Close the repo and cleanup.","   *","   * @param {function(Error)} callback","   * @returns {void}","   */","  close (callback) {","    if (this.closed) {","      return callback(new Error('repo is already closed'))","    }","","    log('closing at: %s', this.path)","    series([","      (cb) => this._fsStore.delete(apiFile, (err) => {","        if (err && err.message.startsWith('ENOENT')) {","          return cb()","        }","        cb(err)","      }),","      (cb) => this.store.close(cb),","      (cb) => this._fsStore.close(cb),","      (cb) => {","        log('unlocking')","        this.closed = true","        this.lockfile.close(cb)","      },","      (cb) => {","        this.lockfile = null","        cb()","      }","    ], (err) => callback(err))","  }","","  /**","   * Check if a repo exists.","   *","   * @param {function(Error, bool)} callback","   * @returns {void}","   */","  exists (callback) {","    this.version.exists(callback)","  }","","  /**","   * Set the api address, by writing it to the `/api` file.","   *","   * @param {Multiaddr} addr","   * @param {function(Error)} callback","   * @returns {void}","   */","  setApiAddress (addr, callback) {","    this._fsStore.put(apiFile, Buffer.from(addr.toString()), callback)","  }","","  /**","   * Returns the registered API address, according to the `/api` file in this respo.","   *","   * @param {function(Error, Mulitaddr)} callback","   * @returns {void}","   */","  apiAddress (callback) {","    this._fsStore.get(apiFile, (err, rawAddr) => {","      if (err) {","        return callback(err)","      }","","      callback(null, new Multiaddr(rawAddr.toString()))","    })","  }","}","","module.exports = IpfsRepo",""],"l":{"3":1,"4":1,"5":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"18":1,"19":1,"20":1,"22":1,"24":1,"25":1,"26":1,"27":1,"44":0,"46":0,"47":0,"50":0,"51":0,"52":0,"56":0,"57":0,"58":0,"62":0,"63":0,"65":0,"66":0,"67":0,"68":0,"70":0,"82":0,"84":0,"85":0,"86":0,"87":0,"89":0,"91":0,"92":0,"104":0,"105":0,"107":0,"110":0,"111":0,"112":0,"113":0,"115":0,"117":0,"118":0,"120":0,"121":0,"123":0,"124":0,"125":0,"127":0,"128":0,"129":0,"131":0,"135":0,"136":0,"146":0,"147":0,"148":0,"151":0,"152":0,"153":0,"154":0,"158":0,"170":0,"171":0,"172":0,"173":0,"175":0,"176":0,"177":0,"180":0,"181":0,"183":0,"194":0,"195":0,"198":0,"199":0,"200":0,"201":0,"202":0,"204":0,"206":0,"207":0,"209":0,"210":0,"211":0,"214":0,"215":0,"217":0,"227":0,"238":0,"248":0,"249":0,"250":0,"253":0,"258":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-repo/src/version.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-repo/src/version.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":11},"end":{"line":17,"column":22}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":8},"end":{"line":26,"column":19}}},"3":{"name":"(anonymous_3)","line":41,"loc":{"start":{"line":41,"column":8},"end":{"line":41,"column":28}}},"4":{"name":"(anonymous_4)","line":50,"loc":{"start":{"line":50,"column":10},"end":{"line":50,"column":31}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":46}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":30}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":33}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":37}},"5":{"start":{"line":9,"column":0},"end":{"line":63,"column":1}},"6":{"start":{"line":10,"column":2},"end":{"line":62,"column":3}},"7":{"start":{"line":18,"column":6},"end":{"line":18,"column":37}},"8":{"start":{"line":27,"column":6},"end":{"line":32,"column":8}},"9":{"start":{"line":28,"column":8},"end":{"line":30,"column":9}},"10":{"start":{"line":29,"column":10},"end":{"line":29,"column":30}},"11":{"start":{"line":31,"column":8},"end":{"line":31,"column":59}},"12":{"start":{"line":42,"column":6},"end":{"line":42,"column":66}},"13":{"start":{"line":51,"column":6},"end":{"line":60,"column":8}},"14":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"15":{"start":{"line":53,"column":10},"end":{"line":53,"column":30}},"16":{"start":{"line":55,"column":8},"end":{"line":55,"column":62}},"17":{"start":{"line":56,"column":8},"end":{"line":58,"column":9}},"18":{"start":{"line":57,"column":10},"end":{"line":57,"column":98}},"19":{"start":{"line":59,"column":8},"end":{"line":59,"column":18}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":28,"column":8}},{"start":{"line":28,"column":8},"end":{"line":28,"column":8}}]},"2":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":52,"column":8}},{"start":{"line":52,"column":8},"end":{"line":52,"column":8}}]},"3":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":8},"end":{"line":56,"column":8}},{"start":{"line":56,"column":8},"end":{"line":56,"column":8}}]}},"code":["'use strict'","","const Key = require('interface-datastore').Key","const debug = require('debug')","const log = debug('repo:version')","","const versionKey = new Key('version')","","module.exports = (store) => {","  return {","    /**","     * Check if a version file exists.","     *","     * @param {function(Error, bool)} callback","     * @returns {void}","     */","    exists (callback) {","      store.has(versionKey, callback)","    },","    /**","     * Get the current version.","     *","     * @param {function(Error, number)} callback","     * @returns {void}","     */","    get (callback) {","      store.get(versionKey, (err, buf) => {","        if (err) {","          return callback(err)","        }","        callback(null, parseInt(buf.toString().trim(), 10))","      })","    },","    /**","     * Set the version of the repo, writing it to the underlying store.","     *","     * @param {number} version","     * @param {function(Error)} callback","     * @returns {void}","     */","    set (version, callback) {","      store.put(versionKey, new Buffer(String(version)), callback)","    },","    /**","     * Check the current version, and return an error on missmatch","     * @param {number} expected","     * @param {function(Error)} callback","     * @returns {void}","     */","    check (expected, callback) {","      this.get((err, version) => {","        if (err) {","          return callback(err)","        }","        log('comparing version: %s and %s', version, expected)","        if (version !== expected) {","          return callback(new Error(`version mismatch: expected v${expected}, found v${version}`))","        }","        callback()","      })","    }","  }","}",""],"l":{"3":1,"4":1,"5":1,"7":1,"9":1,"10":0,"18":0,"27":0,"28":0,"29":0,"31":0,"42":0,"51":0,"52":0,"53":0,"55":0,"56":0,"57":0,"59":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-repo/src/config.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-repo/src/config.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":8},"end":{"line":15,"column":19}}},"2":{"name":"(anonymous_2)","line":37,"loc":{"start":{"line":37,"column":8},"end":{"line":37,"column":27}}},"3":{"name":"(anonymous_3)","line":48,"loc":{"start":{"line":48,"column":11},"end":{"line":48,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":46}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"3":{"start":{"line":7,"column":0},"end":{"line":52,"column":1}},"4":{"start":{"line":8,"column":2},"end":{"line":51,"column":3}},"5":{"start":{"line":16,"column":6},"end":{"line":28,"column":8}},"6":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"7":{"start":{"line":18,"column":10},"end":{"line":18,"column":30}},"8":{"start":{"line":21,"column":8},"end":{"line":21,"column":18}},"9":{"start":{"line":22,"column":8},"end":{"line":26,"column":9}},"10":{"start":{"line":23,"column":10},"end":{"line":23,"column":47}},"11":{"start":{"line":25,"column":10},"end":{"line":25,"column":30}},"12":{"start":{"line":27,"column":8},"end":{"line":27,"column":30}},"13":{"start":{"line":38,"column":6},"end":{"line":38,"column":61}},"14":{"start":{"line":40,"column":6},"end":{"line":40,"column":41}},"15":{"start":{"line":49,"column":6},"end":{"line":49,"column":36}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":8},"end":{"line":17,"column":8}},{"start":{"line":17,"column":8},"end":{"line":17,"column":8}}]}},"code":["'use strict'","","const Key = require('interface-datastore').Key","","const configKey = new Key('config')","","module.exports = (store) => {","  return {","    /**","     * Get the current configuration from the repo.","     *","     * @param {function(Error, Object)} callback","     * @returns {void}","     */","    get (callback) {","      store.get(configKey, (err, value) => {","        if (err) {","          return callback(err)","        }","","        let config","        try {","          config = JSON.parse(value.toString())","        } catch (err) {","          return callback(err)","        }","        callback(null, config)","      })","    },","    /**","     * Set the current configuration for this repo.","     *","     * @param {Object} config - the config object to be written","     * @param {function(Error)} callback","     * @returns {void}","     */","    set (config, callback) {","      const buf = new Buffer(JSON.stringify(config, null, 2))","","      store.put(configKey, buf, callback)","    },","    /**","     * Check if a config file exists.","     *","     * @param {function(Error, bool)} callback","     * @returns {void}","     */","    exists (callback) {","      store.has(configKey, callback)","    }","  }","}",""],"l":{"3":1,"5":1,"7":1,"8":0,"16":0,"17":0,"18":0,"21":0,"22":0,"23":0,"25":0,"27":0,"38":0,"40":0,"49":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-repo/src/blockstore.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-repo/src/blockstore.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":1,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":44,"loc":{"start":{"line":44,"column":8},"end":{"line":44,"column":24}}},"2":{"name":"(anonymous_2)","line":60,"loc":{"start":{"line":60,"column":8},"end":{"line":60,"column":26}}},"3":{"name":"(anonymous_3)","line":87,"loc":{"start":{"line":87,"column":12},"end":{"line":87,"column":31}}},"4":{"name":"(anonymous_4)","line":113,"loc":{"start":{"line":113,"column":8},"end":{"line":113,"column":24}}},"5":{"name":"(anonymous_5)","line":129,"loc":{"start":{"line":129,"column":11},"end":{"line":129,"column":27}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":67}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":46}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":35}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":50}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":38}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":27}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}},"9":{"start":{"line":19,"column":0},"end":{"line":22,"column":1}},"10":{"start":{"line":20,"column":2},"end":{"line":20,"column":34}},"11":{"start":{"line":21,"column":2},"end":{"line":21,"column":59}},"12":{"start":{"line":30,"column":0},"end":{"line":32,"column":1}},"13":{"start":{"line":31,"column":2},"end":{"line":31,"column":34}},"14":{"start":{"line":34,"column":0},"end":{"line":139,"column":1}},"15":{"start":{"line":35,"column":2},"end":{"line":35,"column":59}},"16":{"start":{"line":36,"column":2},"end":{"line":138,"column":3}},"17":{"start":{"line":45,"column":6},"end":{"line":49,"column":7}},"18":{"start":{"line":46,"column":8},"end":{"line":48,"column":10}},"19":{"start":{"line":47,"column":10},"end":{"line":47,"column":48}},"20":{"start":{"line":51,"column":6},"end":{"line":51,"column":31}},"21":{"start":{"line":52,"column":6},"end":{"line":58,"column":8}},"22":{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},"23":{"start":{"line":54,"column":10},"end":{"line":54,"column":30}},"24":{"start":{"line":57,"column":8},"end":{"line":57,"column":49}},"25":{"start":{"line":61,"column":6},"end":{"line":65,"column":7}},"26":{"start":{"line":62,"column":8},"end":{"line":64,"column":10}},"27":{"start":{"line":63,"column":10},"end":{"line":63,"column":46}},"28":{"start":{"line":67,"column":6},"end":{"line":67,"column":37}},"29":{"start":{"line":69,"column":6},"end":{"line":78,"column":8}},"30":{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},"31":{"start":{"line":71,"column":10},"end":{"line":71,"column":30}},"32":{"start":{"line":73,"column":8},"end":{"line":75,"column":9}},"33":{"start":{"line":74,"column":10},"end":{"line":74,"column":27}},"34":{"start":{"line":77,"column":8},"end":{"line":77,"column":42}},"35":{"start":{"line":88,"column":6},"end":{"line":91,"column":9}},"36":{"start":{"line":88,"column":38},"end":{"line":91,"column":7}},"37":{"start":{"line":93,"column":6},"end":{"line":93,"column":33}},"38":{"start":{"line":94,"column":6},"end":{"line":104,"column":8}},"39":{"start":{"line":94,"column":30},"end":{"line":94,"column":50}},"40":{"start":{"line":95,"column":8},"end":{"line":97,"column":9}},"41":{"start":{"line":96,"column":10},"end":{"line":96,"column":30}},"42":{"start":{"line":99,"column":8},"end":{"line":101,"column":10}},"43":{"start":{"line":100,"column":10},"end":{"line":100,"column":40}},"44":{"start":{"line":103,"column":8},"end":{"line":103,"column":30}},"45":{"start":{"line":114,"column":6},"end":{"line":118,"column":7}},"46":{"start":{"line":115,"column":8},"end":{"line":117,"column":10}},"47":{"start":{"line":116,"column":10},"end":{"line":116,"column":48}},"48":{"start":{"line":120,"column":6},"end":{"line":120,"column":42}},"49":{"start":{"line":130,"column":6},"end":{"line":134,"column":7}},"50":{"start":{"line":131,"column":8},"end":{"line":133,"column":10}},"51":{"start":{"line":132,"column":10},"end":{"line":132,"column":48}},"52":{"start":{"line":136,"column":6},"end":{"line":136,"column":45}}},"branchMap":{"1":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":6},"end":{"line":45,"column":6}},{"start":{"line":45,"column":6},"end":{"line":45,"column":6}}]},"2":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":8},"end":{"line":53,"column":8}},{"start":{"line":53,"column":8},"end":{"line":53,"column":8}}]},"3":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":6},"end":{"line":61,"column":6}},{"start":{"line":61,"column":6},"end":{"line":61,"column":6}}]},"4":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":8},"end":{"line":70,"column":8}},{"start":{"line":70,"column":8},"end":{"line":70,"column":8}}]},"5":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":8},"end":{"line":73,"column":8}},{"start":{"line":73,"column":8},"end":{"line":73,"column":8}}]},"6":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":8},"end":{"line":95,"column":8}},{"start":{"line":95,"column":8},"end":{"line":95,"column":8}}]},"7":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":6},"end":{"line":114,"column":6}},{"start":{"line":114,"column":6},"end":{"line":114,"column":6}}]},"8":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":6},"end":{"line":130,"column":6}},{"start":{"line":130,"column":6},"end":{"line":130,"column":6}}]}},"code":["'use strict'","","const NamespaceStore = require('datastore-core').NamespaceDatastore","const Key = require('interface-datastore').Key","const base32 = require('base32.js')","const Block = require('ipfs-block')","const setImmediate = require('async/setImmediate')","const reject = require('async/reject')","const CID = require('cids')","","const blockPrefix = new Key('blocks')","","/**"," * Transform a raw buffer to a base32 encoded key."," *"," * @param {Buffer} rawKey"," * @returns {Key}"," */","const keyFromBuffer = (rawKey) => {","  const enc = new base32.Encoder()","  return new Key('/' + enc.write(rawKey).finalize(), false)","}","","/**"," * Transform a cid to the appropriate datastore key."," *"," * @param {CID} cid"," * @returns {Key}"," */","const cidToDsKey = (cid) => {","  return keyFromBuffer(cid.buffer)","}","","module.exports = (repo) => {","  const store = new NamespaceStore(repo.store, blockPrefix)","  return {","    /**","     * Get a single block by CID.","     *","     * @param {CID} cid","     * @param {function(Error, Block)} callback","     * @returns {void}","     */","    get (cid, callback) {","      if (!CID.isCID(cid)) {","        return setImmediate(() => {","          callback(new Error('Not a valid cid'))","        })","      }","","      const k = cidToDsKey(cid)","      store.get(k, (err, blockData) => {","        if (err) {","          return callback(err)","        }","","        callback(null, new Block(blockData, cid))","      })","    },","    put (block, callback) {","      if (!Block.isBlock(block)) {","        return setImmediate(() => {","          callback(new Error('invalid block'))","        })","      }","","      const k = cidToDsKey(block.cid)","","      store.has(k, (err, exists) => {","        if (err) {","          return callback(err)","        }","        if (exists) {","          return callback()","        }","","        store.put(k, block.data, callback)","      })","    },","    /**","     * Like put, but for more.","     *","     * @param {Array<Block>} blocks","     * @param {function(Error)} callback","     * @returns {void}","     */","    putMany (blocks, callback) {","      const keys = blocks.map((b) => ({","        key: cidToDsKey(b.cid),","        block: b","      }))","","      const batch = store.batch()","      reject(keys, (k, cb) => store.has(k.key, cb), (err, newKeys) => {","        if (err) {","          return callback(err)","        }","","        newKeys.forEach((k) => {","          batch.put(k.key, k.block.data)","        })","","        batch.commit(callback)","      })","    },","    /**","     * Does the store contain block with this cid?","     *","     * @param {CID} cid","     * @param {function(Error, bool)} callback","     * @returns {void}","     */","    has (cid, callback) {","      if (!CID.isCID(cid)) {","        return setImmediate(() => {","          callback(new Error('Not a valid cid'))","        })","      }","","      store.has(cidToDsKey(cid), callback)","    },","    /**","     * Delete a block from the store","     *","     * @param {CID} cid","     * @param {function(Error)} callback","     * @returns {void}","     */","    delete (cid, callback) {","      if (!CID.isCID(cid)) {","        return setImmediate(() => {","          callback(new Error('Not a valid cid'))","        })","      }","","      store.delete(cidToDsKey(cid), callback)","    }","  }","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"11":1,"19":1,"20":0,"21":0,"30":1,"31":0,"34":1,"35":0,"36":0,"45":0,"46":0,"47":0,"51":0,"52":0,"53":0,"54":0,"57":0,"61":0,"62":0,"63":0,"67":0,"69":0,"70":0,"71":0,"73":0,"74":0,"77":0,"88":0,"93":0,"94":0,"95":0,"96":0,"99":0,"100":0,"103":0,"114":0,"115":0,"116":0,"120":0,"130":0,"131":0,"132":0,"136":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/boot.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/boot.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":44}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":38}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":37}},"4":{"start":{"line":8,"column":0},"end":{"line":111,"column":1}},"5":{"start":{"line":9,"column":2},"end":{"line":9,"column":21}},"6":{"start":{"line":10,"column":2},"end":{"line":10,"column":31}},"7":{"start":{"line":11,"column":2},"end":{"line":11,"column":29}},"8":{"start":{"line":12,"column":2},"end":{"line":12,"column":31}},"9":{"start":{"line":13,"column":2},"end":{"line":13,"column":31}},"10":{"start":{"line":14,"column":2},"end":{"line":14,"column":56}},"11":{"start":{"line":15,"column":2},"end":{"line":15,"column":37}},"12":{"start":{"line":17,"column":2},"end":{"line":17,"column":80}},"13":{"start":{"line":18,"column":2},"end":{"line":20,"column":23}},"14":{"start":{"line":25,"column":2},"end":{"line":55,"column":3}},"15":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"16":{"start":{"line":28,"column":6},"end":{"line":28,"column":27}},"17":{"start":{"line":31,"column":4},"end":{"line":54,"column":6}},"18":{"start":{"line":32,"column":14},"end":{"line":32,"column":33}},"19":{"start":{"line":33,"column":14},"end":{"line":33,"column":31}},"20":{"start":{"line":35,"column":8},"end":{"line":35,"column":32}},"21":{"start":{"line":36,"column":8},"end":{"line":36,"column":22}},"22":{"start":{"line":39,"column":6},"end":{"line":52,"column":7}},"23":{"start":{"line":45,"column":8},"end":{"line":50,"column":9}},"24":{"start":{"line":49,"column":10},"end":{"line":49,"column":32}},"25":{"start":{"line":51,"column":8},"end":{"line":51,"column":22}},"26":{"start":{"line":53,"column":6},"end":{"line":53,"column":19}},"27":{"start":{"line":57,"column":2},"end":{"line":63,"column":3}},"28":{"start":{"line":58,"column":4},"end":{"line":60,"column":5}},"29":{"start":{"line":59,"column":6},"end":{"line":59,"column":36}},"30":{"start":{"line":61,"column":4},"end":{"line":61,"column":22}},"31":{"start":{"line":62,"column":4},"end":{"line":62,"column":30}},"32":{"start":{"line":65,"column":2},"end":{"line":65,"column":18}},"33":{"start":{"line":68,"column":2},"end":{"line":110,"column":4}},"34":{"start":{"line":69,"column":4},"end":{"line":71,"column":5}},"35":{"start":{"line":70,"column":6},"end":{"line":70,"column":22}},"36":{"start":{"line":74,"column":4},"end":{"line":79,"column":5}},"37":{"start":{"line":75,"column":6},"end":{"line":75,"column":52}},"38":{"start":{"line":75,"column":25},"end":{"line":75,"column":51}},"39":{"start":{"line":78,"column":6},"end":{"line":78,"column":20}},"40":{"start":{"line":82,"column":4},"end":{"line":96,"column":5}},"41":{"start":{"line":83,"column":6},"end":{"line":95,"column":7}},"42":{"start":{"line":84,"column":8},"end":{"line":84,"column":108}},"43":{"start":{"line":86,"column":8},"end":{"line":94,"column":10}},"44":{"start":{"line":87,"column":10},"end":{"line":93,"column":16}},"45":{"start":{"line":88,"column":20},"end":{"line":88,"column":39}},"46":{"start":{"line":90,"column":14},"end":{"line":90,"column":44}},"47":{"start":{"line":91,"column":14},"end":{"line":91,"column":45}},"48":{"start":{"line":99,"column":4},"end":{"line":106,"column":5}},"49":{"start":{"line":100,"column":6},"end":{"line":105,"column":7}},"50":{"start":{"line":101,"column":8},"end":{"line":101,"column":113}},"51":{"start":{"line":102,"column":8},"end":{"line":102,"column":51}},"52":{"start":{"line":104,"column":8},"end":{"line":104,"column":42}},"53":{"start":{"line":104,"column":27},"end":{"line":104,"column":41}},"54":{"start":{"line":109,"column":4},"end":{"line":109,"column":23}}},"branchMap":{"1":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":20},"end":{"line":14,"column":26}},{"start":{"line":14,"column":30},"end":{"line":14,"column":56}}]},"2":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":63},"end":{"line":17,"column":75}},{"start":{"line":17,"column":78},"end":{"line":17,"column":80}}]},"3":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":27,"column":4}},{"start":{"line":27,"column":4},"end":{"line":27,"column":4}}]},"4":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":6},"end":{"line":39,"column":6}},{"start":{"line":39,"column":6},"end":{"line":39,"column":6}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]},"6":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":12},"end":{"line":45,"column":42}},{"start":{"line":46,"column":12},"end":{"line":46,"column":39}},{"start":{"line":47,"column":12},"end":{"line":47,"column":41}}]},"7":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":4}},{"start":{"line":58,"column":4},"end":{"line":58,"column":4}}]},"8":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":4}},{"start":{"line":69,"column":4},"end":{"line":69,"column":4}}]},"9":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":74,"column":4}},{"start":{"line":74,"column":4},"end":{"line":74,"column":4}}]},"10":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":8},"end":{"line":74,"column":14}},{"start":{"line":74,"column":18},"end":{"line":74,"column":26}}]},"11":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":82,"column":4}},{"start":{"line":82,"column":4},"end":{"line":82,"column":4}}]},"12":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":6},"end":{"line":83,"column":6}},{"start":{"line":83,"column":6},"end":{"line":83,"column":6}}]},"13":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":99,"column":4}},{"start":{"line":99,"column":4},"end":{"line":99,"column":4}}]},"14":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":6},"end":{"line":100,"column":6}},{"start":{"line":100,"column":6},"end":{"line":100,"column":6}}]}},"code":["'use strict'","","const waterfall = require('async/waterfall')","const series = require('async/series')","const extend = require('deep-extend')","","// Boot an IPFS node depending on the options set","module.exports = (self) => {","  self.log('booting')","  const options = self._options","  const doInit = options.init","  const doStart = options.start","  const config = options.config","  const setConfig = config && typeof config === 'object'","  const repoOpen = !self._repo.closed","","  const customInitOptions = typeof options.init === 'object' ? options.init : {}","  const initOptions = Object.assign({","    bits: 2048","  }, customInitOptions)","","  // Checks if a repo exists, and if so opens it","  // Will return callback with a bool indicating the existence","  // of the repo","  const maybeOpenRepo = (cb) => {","    // nothing to do","    if (repoOpen) {","      return cb(null, true)","    }","","    series([","      (cb) => self._repo.open(cb),","      (cb) => self.preStart(cb),","      (cb) => {","        self.state.initialized()","        cb(null, true)","      }","    ], (err, res) => {","      if (err) {","        // If the error is that no repo exists,","        // which happens when the version file is not found","        // we just want to signal that no repo exist, not","        // fail the whole process.","        // TODO: improve datastore and ipfs-repo implemenations so this error is a bit more unified","        if (err.message.match(/not found/) || // indexeddb","            err.message.match(/ENOENT/) || // fs","            err.message.match(/No value/) // memory","           ) {","          return cb(null, false)","        }","        return cb(err)","      }","      cb(null, res)","    })","  }","","  const done = (err) => {","    if (err) {","      return self.emit('error', err)","    }","    self.emit('ready')","    self.log('boot:done', err)","  }","","  const tasks = []","","  // check if there as a repo and if so open it","  maybeOpenRepo((err, hasRepo) => {","    if (err) {","      return done(err)","    }","","    // No repo, but need should init one","    if (doInit && !hasRepo) {","      tasks.push((cb) => self.init(initOptions, cb))","      // we know we will have a repo for all follwing tasks","      // if the above succeeds","      hasRepo = true","    }","","    // Need to set config","    if (setConfig) {","      if (!hasRepo) {","        console.log('WARNING, trying to set config on uninitialized repo, maybe forgot to set \"init: true\"')","      } else {","        tasks.push((cb) => {","          waterfall([","            (cb) => self.config.get(cb),","            (config, cb) => {","              extend(config, options.config)","              self.config.replace(config, cb)","            }","          ], cb)","        })","      }","    }","","    // Need to start up the node","    if (doStart) {","      if (!hasRepo) {","        console.log('WARNING, trying to start ipfs node on uninitialized repo, maybe forgot to set \"init: true\"')","        return done(new Error('Uninitalized repo'))","      } else {","        tasks.push((cb) => self.start(cb))","      }","    }","","    // Do the actual boot sequence","    series(tasks, done)","  })","}",""],"l":{"3":1,"4":1,"5":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"17":0,"18":0,"25":0,"27":0,"28":0,"31":0,"32":0,"33":0,"35":0,"36":0,"39":0,"45":0,"49":0,"51":0,"53":0,"57":0,"58":0,"59":0,"61":0,"62":0,"65":0,"68":0,"69":0,"70":0,"74":0,"75":0,"78":0,"82":0,"83":0,"84":0,"86":0,"87":0,"88":0,"90":0,"91":0,"99":0,"100":0,"101":0,"102":0,"104":0,"109":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":41}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":32}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":41}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":38}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":28}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":32}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":32}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":42}},"10":{"start":{"line":12,"column":0},"end":{"line":12,"column":36}},"11":{"start":{"line":13,"column":0},"end":{"line":13,"column":34}},"12":{"start":{"line":14,"column":0},"end":{"line":14,"column":36}},"13":{"start":{"line":15,"column":0},"end":{"line":15,"column":30}},"14":{"start":{"line":16,"column":0},"end":{"line":16,"column":36}},"15":{"start":{"line":17,"column":0},"end":{"line":17,"column":34}},"16":{"start":{"line":18,"column":0},"end":{"line":18,"column":32}},"17":{"start":{"line":19,"column":0},"end":{"line":19,"column":34}},"18":{"start":{"line":20,"column":0},"end":{"line":20,"column":38}},"19":{"start":{"line":21,"column":0},"end":{"line":21,"column":36}}},"branchMap":{},"code":["'use strict'","","exports.preStart = require('./pre-start')","exports.start = require('./start')","exports.stop = require('./stop')","exports.isOnline = require('./is-online')","exports.version = require('./version')","exports.id = require('./id')","exports.repo = require('./repo')","exports.init = require('./init')","exports.bootstrap = require('./bootstrap')","exports.config = require('./config')","exports.block = require('./block')","exports.object = require('./object')","exports.dag = require('./dag')","exports.libp2p = require('./libp2p')","exports.swarm = require('./swarm')","exports.ping = require('./ping')","exports.files = require('./files')","exports.bitswap = require('./bitswap')","exports.pubsub = require('./pubsub')",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/pre-start.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/pre-start.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"preStart","line":12,"loc":{"start":{"line":12,"column":17},"end":{"line":12,"column":42}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":37}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":38}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":44}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":30}},"6":{"start":{"line":12,"column":0},"end":{"line":44,"column":1}},"7":{"start":{"line":13,"column":2},"end":{"line":43,"column":3}},"8":{"start":{"line":14,"column":4},"end":{"line":14,"column":25}},"9":{"start":{"line":16,"column":4},"end":{"line":42,"column":16}},"10":{"start":{"line":17,"column":14},"end":{"line":17,"column":39}},"11":{"start":{"line":19,"column":8},"end":{"line":19,"column":47}},"12":{"start":{"line":21,"column":8},"end":{"line":23,"column":10}},"13":{"start":{"line":22,"column":10},"end":{"line":22,"column":29}},"14":{"start":{"line":26,"column":8},"end":{"line":26,"column":41}},"15":{"start":{"line":28,"column":8},"end":{"line":38,"column":10}},"16":{"start":{"line":29,"column":10},"end":{"line":29,"column":34}},"17":{"start":{"line":31,"column":10},"end":{"line":35,"column":11}},"18":{"start":{"line":32,"column":12},"end":{"line":34,"column":13}},"19":{"start":{"line":37,"column":10},"end":{"line":37,"column":42}},"20":{"start":{"line":40,"column":8},"end":{"line":40,"column":12}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":10},"end":{"line":31,"column":10}},{"start":{"line":31,"column":10},"end":{"line":31,"column":10}}]}},"code":["'use strict'","","const peerId = require('peer-id')","const PeerInfo = require('peer-info')","const multiaddr = require('multiaddr')","const waterfall = require('async/waterfall')","const mafmt = require('mafmt')","","/*"," * Load stuff from Repo into memory"," */","module.exports = function preStart (self) {","  return (callback) => {","    self.log('pre-start')","","    waterfall([","      (cb) => self._repo.config.get(cb),","      (config, cb) => {","        const privKey = config.Identity.PrivKey","","        peerId.createFromPrivKey(privKey, (err, id) => {","          cb(err, config, id)","        })","      },","      (config, id, cb) => {","        self._peerInfo = new PeerInfo(id)","","        config.Addresses.Swarm.forEach((addr) => {","          let ma = multiaddr(addr)","","          if (!mafmt.IPFS.matches(ma)) {","            ma = ma.encapsulate(","              '/ipfs/' + self._peerInfo.id.toB58String()","            )","          }","","          self._peerInfo.multiaddr.add(ma)","        })","","        cb()","      }","    ], callback)","  }","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"12":1,"13":0,"14":0,"16":0,"17":0,"19":0,"21":0,"22":0,"26":0,"28":0,"29":0,"31":0,"32":0,"37":0,"40":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/start.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/start.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"noop","line":9,"loc":{"start":{"line":9,"column":27},"end":{"line":9,"column":44}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":39}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":43}},"4":{"start":{"line":7,"column":0},"end":{"line":59,"column":1}},"5":{"start":{"line":8,"column":2},"end":{"line":58,"column":3}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":46}},"7":{"start":{"line":11,"column":4},"end":{"line":20,"column":5}},"8":{"start":{"line":12,"column":6},"end":{"line":15,"column":7}},"9":{"start":{"line":13,"column":8},"end":{"line":13,"column":31}},"10":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}},"11":{"start":{"line":17,"column":6},"end":{"line":17,"column":26}},"12":{"start":{"line":18,"column":6},"end":{"line":18,"column":24}},"13":{"start":{"line":19,"column":6},"end":{"line":19,"column":16}},"14":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"15":{"start":{"line":23,"column":6},"end":{"line":23,"column":83}},"16":{"start":{"line":26,"column":4},"end":{"line":26,"column":24}},"17":{"start":{"line":27,"column":4},"end":{"line":27,"column":22}},"18":{"start":{"line":29,"column":4},"end":{"line":57,"column":6}},"19":{"start":{"line":31,"column":8},"end":{"line":33,"column":16}},"20":{"start":{"line":35,"column":14},"end":{"line":35,"column":31}},"21":{"start":{"line":36,"column":14},"end":{"line":36,"column":35}},"22":{"start":{"line":38,"column":6},"end":{"line":40,"column":7}},"23":{"start":{"line":39,"column":8},"end":{"line":39,"column":24}},"24":{"start":{"line":42,"column":6},"end":{"line":46,"column":7}},"25":{"start":{"line":48,"column":6},"end":{"line":48,"column":27}},"26":{"start":{"line":49,"column":6},"end":{"line":49,"column":48}},"27":{"start":{"line":51,"column":6},"end":{"line":56,"column":7}},"28":{"start":{"line":52,"column":8},"end":{"line":52,"column":53}},"29":{"start":{"line":53,"column":8},"end":{"line":53,"column":32}},"30":{"start":{"line":55,"column":8},"end":{"line":55,"column":14}}},"branchMap":{"1":{"line":9,"type":"binary-expr","locations":[{"start":{"line":9,"column":15},"end":{"line":9,"column":23}},{"start":{"line":9,"column":27},"end":{"line":9,"column":46}}]},"2":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":6},"end":{"line":12,"column":6}},{"start":{"line":12,"column":6},"end":{"line":12,"column":6}}]},"3":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":22,"column":4}},{"start":{"line":22,"column":4},"end":{"line":22,"column":4}}]},"4":{"line":31,"type":"cond-expr","locations":[{"start":{"line":32,"column":12},"end":{"line":32,"column":31}},{"start":{"line":33,"column":12},"end":{"line":33,"column":16}}]},"5":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":6},"end":{"line":38,"column":6}},{"start":{"line":38,"column":6},"end":{"line":38,"column":6}}]},"6":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":6},"end":{"line":51,"column":6}},{"start":{"line":51,"column":6},"end":{"line":51,"column":6}}]}},"code":["'use strict'","","const series = require('async/series')","const Bitswap = require('ipfs-bitswap')","const FloodSub = require('libp2p-floodsub')","","module.exports = (self) => {","  return (callback) => {","    callback = callback || function noop () {}","","    const done = (err) => {","      if (err) {","        self.emit('error', err)","        return callback(err)","      }","","      self.state.started()","      self.emit('start')","      callback()","    }","","    if (self.state.state() !== 'stopped') {","      return done(new Error('Not able to start from state: ' + self.state.state()))","    }","","    self.log('starting')","    self.state.start()","","    series([","      (cb) => {","        self._repo.closed","          ? self._repo.open(cb)","          : cb()","      },","      (cb) => self.preStart(cb),","      (cb) => self.libp2p.start(cb)","    ], (err) => {","      if (err) {","        return done(err)","      }","","      self._bitswap = new Bitswap(","        self._libp2pNode,","        self._repo.blockstore,","        self._peerInfoBook","      )","","      self._bitswap.start()","      self._blockService.goOnline(self._bitswap)","","      if (self._options.EXPERIMENTAL.pubsub) {","        self._pubsub = new FloodSub(self._libp2pNode)","        self._pubsub.start(done)","      } else {","        done()","      }","    })","  }","}",""],"l":{"3":1,"4":1,"5":1,"7":1,"8":0,"9":0,"11":0,"12":0,"13":0,"14":0,"17":0,"18":0,"19":0,"22":0,"23":0,"26":0,"27":0,"29":0,"31":0,"35":0,"36":0,"38":0,"39":0,"42":0,"48":0,"49":0,"51":0,"52":0,"53":0,"55":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-bitswap/src/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-bitswap/src/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"fnMap":{"1":{"name":"(anonymous_1)","line":29,"loc":{"start":{"line":29,"column":14},"end":{"line":29,"column":45}}},"2":{"name":"(anonymous_2)","line":51,"loc":{"start":{"line":51,"column":18},"end":{"line":51,"column":47}}},"3":{"name":"(anonymous_3)","line":78,"loc":{"start":{"line":78,"column":23},"end":{"line":78,"column":49}}},"4":{"name":"(anonymous_4)","line":94,"loc":{"start":{"line":94,"column":25},"end":{"line":94,"column":41}}},"5":{"name":"(anonymous_5)","line":104,"loc":{"start":{"line":104,"column":16},"end":{"line":104,"column":22}}},"6":{"name":"(anonymous_6)","line":109,"loc":{"start":{"line":109,"column":19},"end":{"line":109,"column":28}}},"7":{"name":"(anonymous_7)","line":114,"loc":{"start":{"line":114,"column":22},"end":{"line":114,"column":31}}},"8":{"name":"(anonymous_8)","line":119,"loc":{"start":{"line":119,"column":12},"end":{"line":119,"column":30}}},"9":{"name":"(anonymous_9)","line":140,"loc":{"start":{"line":140,"column":18},"end":{"line":140,"column":27}}},"10":{"name":"(anonymous_10)","line":152,"loc":{"start":{"line":152,"column":6},"end":{"line":152,"column":22}}},"11":{"name":"(anonymous_11)","line":206,"loc":{"start":{"line":206,"column":9},"end":{"line":206,"column":16}}},"12":{"name":"(anonymous_12)","line":218,"loc":{"start":{"line":218,"column":14},"end":{"line":218,"column":21}}},"13":{"name":"(anonymous_13)","line":233,"loc":{"start":{"line":233,"column":6},"end":{"line":233,"column":24}}},"14":{"name":"(anonymous_14)","line":256,"loc":{"start":{"line":256,"column":10},"end":{"line":256,"column":29}}},"15":{"name":"(anonymous_15)","line":283,"loc":{"start":{"line":283,"column":14},"end":{"line":283,"column":17}}},"16":{"name":"(anonymous_16)","line":292,"loc":{"start":{"line":292,"column":7},"end":{"line":292,"column":10}}},"17":{"name":"(anonymous_17)","line":307,"loc":{"start":{"line":307,"column":8},"end":{"line":307,"column":11}}},"18":{"name":"(anonymous_18)","line":318,"loc":{"start":{"line":318,"column":7},"end":{"line":318,"column":10}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":44}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":38}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":34}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":51}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":30}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":40}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":56}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":47}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":62}},"10":{"start":{"line":14,"column":0},"end":{"line":14,"column":28}},"11":{"start":{"line":15,"column":0},"end":{"line":15,"column":34}},"12":{"start":{"line":30,"column":4},"end":{"line":30,"column":24}},"13":{"start":{"line":32,"column":4},"end":{"line":32,"column":54}},"14":{"start":{"line":35,"column":4},"end":{"line":35,"column":32}},"15":{"start":{"line":37,"column":4},"end":{"line":37,"column":62}},"16":{"start":{"line":40,"column":4},"end":{"line":40,"column":43}},"17":{"start":{"line":42,"column":4},"end":{"line":42,"column":24}},"18":{"start":{"line":43,"column":4},"end":{"line":43,"column":27}},"19":{"start":{"line":44,"column":4},"end":{"line":44,"column":25}},"20":{"start":{"line":46,"column":4},"end":{"line":46,"column":43}},"21":{"start":{"line":47,"column":4},"end":{"line":47,"column":62}},"22":{"start":{"line":52,"column":4},"end":{"line":75,"column":6}},"23":{"start":{"line":53,"column":6},"end":{"line":55,"column":7}},"24":{"start":{"line":54,"column":8},"end":{"line":54,"column":50}},"25":{"start":{"line":57,"column":6},"end":{"line":59,"column":7}},"26":{"start":{"line":58,"column":8},"end":{"line":58,"column":25}},"27":{"start":{"line":61,"column":6},"end":{"line":61,"column":57}},"28":{"start":{"line":64,"column":6},"end":{"line":66,"column":26}},"29":{"start":{"line":65,"column":23},"end":{"line":65,"column":55}},"30":{"start":{"line":66,"column":20},"end":{"line":66,"column":25}},"31":{"start":{"line":68,"column":6},"end":{"line":68,"column":35}},"32":{"start":{"line":70,"column":6},"end":{"line":74,"column":7}},"33":{"start":{"line":72,"column":19},"end":{"line":72,"column":59}},"34":{"start":{"line":79,"column":4},"end":{"line":79,"column":25}},"35":{"start":{"line":81,"column":4},"end":{"line":91,"column":16}},"36":{"start":{"line":82,"column":14},"end":{"line":82,"column":48}},"37":{"start":{"line":84,"column":8},"end":{"line":84,"column":47}},"38":{"start":{"line":85,"column":8},"end":{"line":87,"column":9}},"39":{"start":{"line":86,"column":10},"end":{"line":86,"column":21}},"40":{"start":{"line":89,"column":8},"end":{"line":89,"column":33}},"41":{"start":{"line":95,"column":4},"end":{"line":95,"column":22}},"42":{"start":{"line":97,"column":4},"end":{"line":100,"column":5}},"43":{"start":{"line":98,"column":6},"end":{"line":98,"column":28}},"44":{"start":{"line":99,"column":6},"end":{"line":99,"column":44}},"45":{"start":{"line":105,"column":4},"end":{"line":105,"column":46}},"46":{"start":{"line":110,"column":4},"end":{"line":110,"column":29}},"47":{"start":{"line":115,"column":4},"end":{"line":115,"column":32}},"48":{"start":{"line":116,"column":4},"end":{"line":116,"column":40}},"49":{"start":{"line":120,"column":4},"end":{"line":131,"column":6}},"50":{"start":{"line":121,"column":6},"end":{"line":123,"column":7}},"51":{"start":{"line":122,"column":8},"end":{"line":122,"column":28}},"52":{"start":{"line":125,"column":6},"end":{"line":128,"column":7}},"53":{"start":{"line":129,"column":6},"end":{"line":129,"column":45}},"54":{"start":{"line":130,"column":6},"end":{"line":130,"column":16}},"55":{"start":{"line":141,"column":4},"end":{"line":141,"column":46}},"56":{"start":{"line":153,"column":4},"end":{"line":153,"column":30}},"57":{"start":{"line":154,"column":4},"end":{"line":154,"column":29}},"58":{"start":{"line":155,"column":4},"end":{"line":155,"column":40}},"59":{"start":{"line":156,"column":4},"end":{"line":156,"column":42}},"60":{"start":{"line":157,"column":4},"end":{"line":157,"column":40}},"61":{"start":{"line":159,"column":4},"end":{"line":159,"column":26}},"62":{"start":{"line":160,"column":4},"end":{"line":170,"column":5}},"63":{"start":{"line":161,"column":6},"end":{"line":164,"column":7}},"64":{"start":{"line":162,"column":8},"end":{"line":162,"column":79}},"65":{"start":{"line":163,"column":8},"end":{"line":163,"column":38}},"66":{"start":{"line":166,"column":6},"end":{"line":169,"column":7}},"67":{"start":{"line":167,"column":8},"end":{"line":167,"column":77}},"68":{"start":{"line":168,"column":8},"end":{"line":168,"column":37}},"69":{"start":{"line":172,"column":4},"end":{"line":188,"column":5}},"70":{"start":{"line":173,"column":6},"end":{"line":178,"column":7}},"71":{"start":{"line":174,"column":8},"end":{"line":174,"column":39}},"72":{"start":{"line":175,"column":8},"end":{"line":175,"column":25}},"73":{"start":{"line":176,"column":8},"end":{"line":176,"column":34}},"74":{"start":{"line":177,"column":8},"end":{"line":177,"column":18}},"75":{"start":{"line":180,"column":6},"end":{"line":184,"column":7}},"76":{"start":{"line":181,"column":8},"end":{"line":181,"column":34}},"77":{"start":{"line":182,"column":8},"end":{"line":182,"column":28}},"78":{"start":{"line":183,"column":8},"end":{"line":183,"column":29}},"79":{"start":{"line":186,"column":6},"end":{"line":186,"column":67}},"80":{"start":{"line":187,"column":6},"end":{"line":187,"column":65}},"81":{"start":{"line":190,"column":4},"end":{"line":202,"column":6}},"82":{"start":{"line":191,"column":6},"end":{"line":193,"column":7}},"83":{"start":{"line":192,"column":8},"end":{"line":192,"column":28}},"84":{"start":{"line":195,"column":6},"end":{"line":198,"column":7}},"85":{"start":{"line":196,"column":8},"end":{"line":196,"column":45}},"86":{"start":{"line":197,"column":8},"end":{"line":197,"column":49}},"87":{"start":{"line":200,"column":6},"end":{"line":200,"column":19}},"88":{"start":{"line":201,"column":6},"end":{"line":201,"column":31}},"89":{"start":{"line":207,"column":4},"end":{"line":209,"column":5}},"90":{"start":{"line":208,"column":6},"end":{"line":208,"column":19}},"91":{"start":{"line":211,"column":4},"end":{"line":211,"column":30}},"92":{"start":{"line":212,"column":4},"end":{"line":214,"column":6}},"93":{"start":{"line":213,"column":6},"end":{"line":213,"column":64}},"94":{"start":{"line":219,"column":4},"end":{"line":221,"column":5}},"95":{"start":{"line":220,"column":6},"end":{"line":220,"column":19}},"96":{"start":{"line":222,"column":4},"end":{"line":222,"column":29}},"97":{"start":{"line":234,"column":4},"end":{"line":234,"column":24}},"98":{"start":{"line":236,"column":4},"end":{"line":245,"column":16}},"99":{"start":{"line":237,"column":14},"end":{"line":237,"column":48}},"100":{"start":{"line":239,"column":8},"end":{"line":241,"column":9}},"101":{"start":{"line":240,"column":10},"end":{"line":240,"column":21}},"102":{"start":{"line":243,"column":8},"end":{"line":243,"column":33}},"103":{"start":{"line":257,"column":4},"end":{"line":275,"column":16}},"104":{"start":{"line":258,"column":14},"end":{"line":260,"column":12}},"105":{"start":{"line":259,"column":8},"end":{"line":259,"column":38}},"106":{"start":{"line":261,"column":25},"end":{"line":274,"column":8}},"107":{"start":{"line":262,"column":8},"end":{"line":264,"column":9}},"108":{"start":{"line":263,"column":10},"end":{"line":263,"column":24}},"109":{"start":{"line":266,"column":8},"end":{"line":272,"column":10}},"110":{"start":{"line":267,"column":10},"end":{"line":270,"column":11}},"111":{"start":{"line":271,"column":10},"end":{"line":271,"column":49}},"112":{"start":{"line":273,"column":8},"end":{"line":273,"column":12}},"113":{"start":{"line":284,"column":4},"end":{"line":284,"column":37}},"114":{"start":{"line":293,"column":4},"end":{"line":299,"column":5}},"115":{"start":{"line":308,"column":4},"end":{"line":308,"column":17}},"116":{"start":{"line":309,"column":4},"end":{"line":309,"column":24}},"117":{"start":{"line":310,"column":4},"end":{"line":310,"column":23}},"118":{"start":{"line":319,"column":4},"end":{"line":319,"column":41}},"119":{"start":{"line":320,"column":4},"end":{"line":320,"column":23}},"120":{"start":{"line":321,"column":4},"end":{"line":321,"column":22}},"121":{"start":{"line":325,"column":0},"end":{"line":325,"column":24}}},"branchMap":{"1":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":6},"end":{"line":53,"column":6}},{"start":{"line":53,"column":6},"end":{"line":53,"column":6}}]},"2":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":6},"end":{"line":57,"column":6}},{"start":{"line":57,"column":6},"end":{"line":57,"column":6}}]},"3":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":8},"end":{"line":85,"column":8}},{"start":{"line":85,"column":8},"end":{"line":85,"column":8}}]},"4":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":97,"column":4}},{"start":{"line":97,"column":4},"end":{"line":97,"column":4}}]},"5":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":6},"end":{"line":121,"column":6}},{"start":{"line":121,"column":6},"end":{"line":121,"column":6}}]},"6":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":6},"end":{"line":161,"column":6}},{"start":{"line":161,"column":6},"end":{"line":161,"column":6}}]},"7":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":6},"end":{"line":166,"column":6}},{"start":{"line":166,"column":6},"end":{"line":166,"column":6}}]},"8":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":6},"end":{"line":191,"column":6}},{"start":{"line":191,"column":6},"end":{"line":191,"column":6}}]},"9":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":6},"end":{"line":195,"column":6}},{"start":{"line":195,"column":6},"end":{"line":195,"column":6}}]},"10":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":4},"end":{"line":207,"column":4}},{"start":{"line":207,"column":4},"end":{"line":207,"column":4}}]},"11":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":4},"end":{"line":219,"column":4}},{"start":{"line":219,"column":4},"end":{"line":219,"column":4}}]},"12":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":8},"end":{"line":239,"column":8}},{"start":{"line":239,"column":8},"end":{"line":239,"column":8}}]},"13":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":8},"end":{"line":262,"column":8}},{"start":{"line":262,"column":8},"end":{"line":262,"column":8}}]}},"code":["'use strict'","","const waterfall = require('async/waterfall')","const reject = require('async/reject')","const each = require('async/each')","const EventEmitter = require('events').EventEmitter","const debug = require('debug')","","const CONSTANTS = require('./constants')","const WantManager = require('./components/want-manager')","const Network = require('./components/network')","const DecisionEngine = require('./components/decision-engine')","","const log = debug('bitswap')","log.error = debug('bitswap:error')","","/**"," *"," */","class Bitswap {","  /**","   * Create a new bitswap instance.","   *","   * @param {Libp2p} libp2p","   * @param {Blockstore} blockstore","   * @param {PeerBook} peerBook","   * @returns {Bitswap}","   */","  constructor (libp2p, blockstore, peerBook) {","    this.libp2p = libp2p","    // the network delivers messages","    this.network = new Network(libp2p, peerBook, this)","","    // local database","    this.blockstore = blockstore","","    this.engine = new DecisionEngine(blockstore, this.network)","","    // handle message sending","    this.wm = new WantManager(this.network)","","    this.blocksRecvd = 0","    this.dupBlocksRecvd = 0","    this.dupDataRecvd = 0","","    this.notifications = new EventEmitter()","    this.notifications.setMaxListeners(CONSTANTS.maxListeners)","  }","","  // handle messages received through the network","  _receiveMessage (peerId, incoming, callback) {","    this.engine.messageReceived(peerId, incoming, (err) => {","      if (err) {","        log('failed to receive message', incoming)","      }","","      if (incoming.blocks.size === 0) {","        return callback()","      }","","      const blocks = Array.from(incoming.blocks.values())","","      // quickly send out cancels, reduces chances of duplicate block receives","      const toCancel = blocks","        .filter((b) => this.wm.wantlist.contains(b.cid))","        .map((b) => b.cid)","","      this.wm.cancelWants(toCancel)","","      each(","        blocks,","        (b, cb) => this._handleReceivedBlock(peerId, b, cb),","        callback","      )","    })","  }","","  _handleReceivedBlock (peerId, block, callback) {","    log('received block')","","    waterfall([","      (cb) => this.blockstore.has(block.cid, cb),","      (has, cb) => {","        this._updateReceiveCounters(block, has)","        if (has) {","          return cb()","        }","","        this._putBlock(block, cb)","      }","    ], callback)","  }","","  _updateReceiveCounters (block, exists) {","    this.blocksRecvd++","","    if (exists) {","      this.dupBlocksRecvd ++","      this.dupDataRecvd += block.data.length","    }","  }","","  // handle errors on the receiving channel","  _receiveError (err) {","    log.error('ReceiveError: %s', err.message)","  }","","  // handle new peers","  _onPeerConnected (peerId) {","    this.wm.connected(peerId)","  }","","  // handle peers being disconnected","  _onPeerDisconnected (peerId) {","    this.wm.disconnected(peerId)","    this.engine.peerDisconnected(peerId)","  }","","  _putBlock (block, callback) {","    this.blockstore.put(block, (err) => {","      if (err) {","        return callback(err)","      }","","      this.notifications.emit(","        `block:${block.cid.buffer.toString()}`,","        block","      )","      this.engine.receivedBlocks([block.cid])","      callback()","    })","  }","","  /**","   * Return the current wantlist for a given `peerId`","   *","   * @param {PeerId} peerId","   * @returns {Wantlist}","   */","  wantlistForPeer (peerId) {","    return this.engine.wantlistForPeer(peerId)","  }","","  /**","   * Fetch a given block by cid. If the block is in the local","   * blockstore it is returned, otherwise the block is added to the wantlist and returned once another node sends it to us.","   *","   * @param {CID} cid","   * @param {function(Error, Block)} callback","   * @returns {void}","   */","  get (cid, callback) {","    const unwantListeners = {}","    const blockListeners = {}","    const cidStr = cid.buffer.toString()","    const unwantEvent = `unwant:${cidStr}`","    const blockEvent = `block:${cidStr}`","","    log('get: %s', cidStr)","    const cleanupListener = () => {","      if (unwantListeners[cidStr]) {","        this.notifications.removeListener(unwantEvent, unwantListeners[cidStr])","        delete unwantListeners[cidStr]","      }","","      if (blockListeners[cidStr]) {","        this.notifications.removeListener(blockEvent, blockListeners[cidStr])","        delete blockListeners[cidStr]","      }","    }","","    const addListener = () => {","      unwantListeners[cidStr] = () => {","        log(`manual unwant: ${cidStr}`)","        cleanupListener()","        this.wm.cancelWants([cid])","        callback()","      }","","      blockListeners[cidStr] = (block) => {","        this.wm.cancelWants([cid])","        cleanupListener(cid)","        callback(null, block)","      }","","      this.notifications.once(unwantEvent, unwantListeners[cidStr])","      this.notifications.once(blockEvent, blockListeners[cidStr])","    }","","    this.blockstore.has(cid, (err, has) => {","      if (err) {","        return callback(err)","      }","","      if (has) {","        log('already have block: %s', cidStr)","        return this.blockstore.get(cid, callback)","      }","","      addListener()","      this.wm.wantBlocks([cid])","    })","  }","","  // removes the given cids from the wantlist independent of any ref counts","  unwant (cids) {","    if (!Array.isArray(cids)) {","      cids = [cids]","    }","","    this.wm.unwantBlocks(cids)","    cids.forEach((cid) => {","      this.notifications.emit(`unwant:${cid.buffer.toString()}`)","    })","  }","","  // removes the given keys from the want list","  cancelWants (cids) {","    if (!Array.isArray(cids)) {","      cids = [cids]","    }","    this.wm.cancelWants(cids)","  }","","  /**","   * Put the given block to the underlying blockstore and","   * send it to nodes that have it in their wantlist.","   *","   * @param {Block} block","   * @param {function(Error)} callback","   * @returns {void}","   */","  put (block, callback) {","    log('putting block')","","    waterfall([","      (cb) => this.blockstore.has(block.cid, cb),","      (has, cb) => {","        if (has) {","          return cb()","        }","","        this._putBlock(block, cb)","      }","    ], callback)","  }","","  /**","   * Put the given blocks to the underlying blockstore and","   * send it to nodes that have it them their wantlist.","   *","   * @param {Array<Block>} blocks","   * @param {function(Error)} callback","   * @returns {void}","   */","  putMany (blocks, callback) {","    waterfall([","      (cb) => reject(blocks, (b, cb) => {","        this.blockstore.has(b.cid, cb)","      }, cb),","      (newBlocks, cb) => this.blockstore.putMany(newBlocks, (err) => {","        if (err) {","          return cb(err)","        }","","        newBlocks.forEach((block) => {","          this.notifications.emit(","            `block:${block.cid.buffer.toString()}`,","            block","          )","          this.engine.receivedBlocks([block.cid])","        })","        cb()","      })","    ], callback)","  }","","  /**","   * Get the current list of wants.","   *","   * @returns {Array<WantlistEntry>}","   */","  getWantlist () {","    return this.wm.wantlist.entries()","  }","","  /**","   * Get stats about the bitswap node.","   *","   * @returns {Object}","   */","  stat () {","    return {","      wantlist: this.getWantlist(),","      blocksReceived: this.blocksRecvd,","      dupBlksReceived: this.dupBlocksRecvd,","      dupDataReceived: this.dupDataRecvd,","      peers: this.engine.peers()","    }","  }","","  /**","   * Start the bitswap node.","   *","   * @returns {void}","   */","  start () {","    this.wm.run()","    this.network.start()","    this.engine.start()","  }","","  /**","   * Stooop the bitswap node.","   *","   * @returns {void}","   */","  stop () {","    this.wm.stop(this.libp2p.peerInfo.id)","    this.network.stop()","    this.engine.stop()","  }","}","","module.exports = Bitswap",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"9":1,"10":1,"11":1,"12":1,"14":1,"15":1,"30":0,"32":0,"35":0,"37":0,"40":0,"42":0,"43":0,"44":0,"46":0,"47":0,"52":0,"53":0,"54":0,"57":0,"58":0,"61":0,"64":0,"65":0,"66":0,"68":0,"70":0,"72":0,"79":0,"81":0,"82":0,"84":0,"85":0,"86":0,"89":0,"95":0,"97":0,"98":0,"99":0,"105":0,"110":0,"115":0,"116":0,"120":0,"121":0,"122":0,"125":0,"129":0,"130":0,"141":0,"153":0,"154":0,"155":0,"156":0,"157":0,"159":0,"160":0,"161":0,"162":0,"163":0,"166":0,"167":0,"168":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"180":0,"181":0,"182":0,"183":0,"186":0,"187":0,"190":0,"191":0,"192":0,"195":0,"196":0,"197":0,"200":0,"201":0,"207":0,"208":0,"211":0,"212":0,"213":0,"219":0,"220":0,"222":0,"234":0,"236":0,"237":0,"239":0,"240":0,"243":0,"257":0,"258":0,"259":0,"261":0,"262":0,"263":0,"266":0,"267":0,"271":0,"273":0,"284":0,"293":0,"308":0,"309":0,"310":0,"319":0,"320":0,"321":0,"325":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-bitswap/src/constants.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-bitswap/src/constants.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":19}},"2":{"start":{"line":5,"column":0},"end":{"line":13,"column":1}}},"branchMap":{},"code":["'use strict'","","const SECOND = 1000","","module.exports = {","  maxProvidersPerRequest: 3,","  providerRequestTimeout: 10 * SECOND,","  hasBlockTimeout: 15 * SECOND,","  provideTimeout: 15 * SECOND,","  kMaxPriority: Math.pow(2, 31) - 1,","  rebroadcastDelay: 10 * SECOND,","  maxListeners: 1000","}",""],"l":{"3":1,"5":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-bitswap/src/components/want-manager/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-bitswap/src/components/want-manager/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":14},"end":{"line":14,"column":24}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":14},"end":{"line":21,"column":36}}},"3":{"name":"(anonymous_3)","line":46,"loc":{"start":{"line":46,"column":20},"end":{"line":46,"column":29}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":19},"end":{"line":69,"column":28}}},"5":{"name":"(anonymous_5)","line":85,"loc":{"start":{"line":85,"column":13},"end":{"line":85,"column":20}}},"6":{"name":"(anonymous_6)","line":90,"loc":{"start":{"line":90,"column":15},"end":{"line":90,"column":22}}},"7":{"name":"(anonymous_7)","line":96,"loc":{"start":{"line":96,"column":14},"end":{"line":96,"column":21}}},"8":{"name":"(anonymous_8)","line":102,"loc":{"start":{"line":102,"column":17},"end":{"line":102,"column":20}}},"9":{"name":"(anonymous_9)","line":106,"loc":{"start":{"line":106,"column":12},"end":{"line":106,"column":21}}},"10":{"name":"(anonymous_10)","line":110,"loc":{"start":{"line":110,"column":15},"end":{"line":110,"column":24}}},"11":{"name":"(anonymous_11)","line":114,"loc":{"start":{"line":114,"column":6},"end":{"line":114,"column":9}}},"12":{"name":"(anonymous_12)","line":128,"loc":{"start":{"line":128,"column":7},"end":{"line":128,"column":10}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":46}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":48}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":39}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":40}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":46}},"8":{"start":{"line":13,"column":0},"end":{"line":134,"column":1}},"9":{"start":{"line":15,"column":4},"end":{"line":15,"column":26}},"10":{"start":{"line":16,"column":4},"end":{"line":16,"column":34}},"11":{"start":{"line":18,"column":4},"end":{"line":18,"column":26}},"12":{"start":{"line":22,"column":4},"end":{"line":24,"column":6}},"13":{"start":{"line":23,"column":6},"end":{"line":23,"column":71}},"14":{"start":{"line":26,"column":4},"end":{"line":38,"column":6}},"15":{"start":{"line":28,"column":6},"end":{"line":37,"column":7}},"16":{"start":{"line":29,"column":8},"end":{"line":33,"column":9}},"17":{"start":{"line":30,"column":10},"end":{"line":30,"column":42}},"18":{"start":{"line":32,"column":10},"end":{"line":32,"column":37}},"19":{"start":{"line":35,"column":8},"end":{"line":35,"column":27}},"20":{"start":{"line":36,"column":8},"end":{"line":36,"column":44}},"21":{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},"22":{"start":{"line":42,"column":6},"end":{"line":42,"column":27}},"23":{"start":{"line":47,"column":4},"end":{"line":47,"column":49}},"24":{"start":{"line":49,"column":4},"end":{"line":52,"column":5}},"25":{"start":{"line":50,"column":6},"end":{"line":50,"column":18}},"26":{"start":{"line":51,"column":6},"end":{"line":51,"column":12}},"27":{"start":{"line":54,"column":4},"end":{"line":54,"column":43}},"28":{"start":{"line":57,"column":4},"end":{"line":57,"column":42}},"29":{"start":{"line":59,"column":4},"end":{"line":61,"column":5}},"30":{"start":{"line":60,"column":6},"end":{"line":60,"column":60}},"31":{"start":{"line":63,"column":4},"end":{"line":63,"column":31}},"32":{"start":{"line":65,"column":4},"end":{"line":65,"column":44}},"33":{"start":{"line":66,"column":4},"end":{"line":66,"column":13}},"34":{"start":{"line":70,"column":4},"end":{"line":70,"column":51}},"35":{"start":{"line":72,"column":4},"end":{"line":74,"column":5}},"36":{"start":{"line":73,"column":6},"end":{"line":73,"column":12}},"37":{"start":{"line":76,"column":4},"end":{"line":76,"column":16}},"38":{"start":{"line":77,"column":4},"end":{"line":79,"column":5}},"39":{"start":{"line":78,"column":6},"end":{"line":78,"column":12}},"40":{"start":{"line":81,"column":4},"end":{"line":81,"column":43}},"41":{"start":{"line":86,"column":4},"end":{"line":86,"column":33}},"42":{"start":{"line":91,"column":4},"end":{"line":91,"column":41}},"43":{"start":{"line":92,"column":4},"end":{"line":92,"column":38}},"44":{"start":{"line":97,"column":4},"end":{"line":97,"column":40}},"45":{"start":{"line":98,"column":4},"end":{"line":98,"column":32}},"46":{"start":{"line":103,"column":4},"end":{"line":103,"column":40}},"47":{"start":{"line":107,"column":4},"end":{"line":107,"column":34}},"48":{"start":{"line":111,"column":4},"end":{"line":111,"column":33}},"49":{"start":{"line":115,"column":4},"end":{"line":125,"column":17}},"50":{"start":{"line":117,"column":6},"end":{"line":117,"column":44}},"51":{"start":{"line":118,"column":6},"end":{"line":120,"column":7}},"52":{"start":{"line":119,"column":8},"end":{"line":119,"column":62}},"53":{"start":{"line":122,"column":6},"end":{"line":124,"column":8}},"54":{"start":{"line":123,"column":8},"end":{"line":123,"column":34}},"55":{"start":{"line":129,"column":4},"end":{"line":131,"column":5}},"56":{"start":{"line":130,"column":6},"end":{"line":130,"column":34}},"57":{"start":{"line":132,"column":4},"end":{"line":132,"column":29}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":6},"end":{"line":28,"column":6}},{"start":{"line":28,"column":6},"end":{"line":28,"column":6}}]},"2":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":29,"column":8}},{"start":{"line":29,"column":8},"end":{"line":29,"column":8}}]},"3":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"4":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":72,"column":4}},{"start":{"line":72,"column":4},"end":{"line":72,"column":4}}]},"5":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":4},"end":{"line":77,"column":4}},{"start":{"line":77,"column":4},"end":{"line":77,"column":4}}]}},"code":["'use strict'","","const debug = require('debug')","","const Message = require('../../types/message')","const Wantlist = require('../../types/wantlist')","const CONSTANTS = require('../../constants')","const MsgQueue = require('./msg-queue')","","const log = debug('bitswap:wantmanager')","log.error = debug('bitswap:wantmanager:error')","","module.exports = class WantManager {","  constructor (network) {","    this.peers = new Map()","    this.wantlist = new Wantlist()","","    this.network = network","  }","","  _addEntries (cids, cancel, force) {","    const entries = cids.map((cid, i) => {","      return new Message.Entry(cid, CONSTANTS.kMaxPriority - i, cancel)","    })","","    entries.forEach((e) => {","      // add changes to our wantlist","      if (e.cancel) {","        if (force) {","          this.wantlist.removeForce(e.cid)","        } else {","          this.wantlist.remove(e.cid)","        }","      } else {","        log('adding to wl')","        this.wantlist.add(e.cid, e.priority)","      }","    })","","    // broadcast changes","    for (let p of this.peers.values()) {","      p.addEntries(entries)","    }","  }","","  _startPeerHandler (peerId) {","    let mq = this.peers.get(peerId.toB58String())","","    if (mq) {","      mq.refcnt ++","      return","    }","","    mq = new MsgQueue(peerId, this.network)","","    // new peer, give them the full wantlist","    const fullwantlist = new Message(true)","","    for (let entry of this.wantlist.entries()) {","      fullwantlist.addEntry(entry[1].cid, entry[1].priority)","    }","","    mq.addMessage(fullwantlist)","","    this.peers.set(peerId.toB58String(), mq)","    return mq","  }","","  _stopPeerHandler (peerId) {","    const mq = this.peers.get(peerId.toB58String())","","    if (!mq) {","      return","    }","","    mq.refcnt --","    if (mq.refcnt > 0) {","      return","    }","","    this.peers.delete(peerId.toB58String())","  }","","  // add all the cids to the wantlist","  wantBlocks (cids) {","    this._addEntries(cids, false)","  }","","  // remove blocks of all the given keys without respecting refcounts","  unwantBlocks (cids) {","    log('unwant blocks: %s', cids.length)","    this._addEntries(cids, true, true)","  }","","  // cancel wanting all of the given keys","  cancelWants (cids) {","    log('cancel wants: %s', cids.length)","    this._addEntries(cids, true)","  }","","  // Returns a list of all currently connected peers","  connectedPeers () {","    return Array.from(this.peers.keys())","  }","","  connected (peerId) {","    this._startPeerHandler(peerId)","  }","","  disconnected (peerId) {","    this._stopPeerHandler(peerId)","  }","","  run () {","    this.timer = setInterval(() => {","      // resend entirew wantlist every so often","      const fullwantlist = new Message(true)","      for (let entry of this.wantlist.entries()) {","        fullwantlist.addEntry(entry[1].cid, entry[1].priority)","      }","","      this.peers.forEach((p) => {","        p.addMessage(fullwantlist)","      })","    }, 10 * 1000)","  }","","  stop () {","    for (let mq of this.peers.values()) {","      this.disconnected(mq.peerId)","    }","    clearInterval(this.timer)","  }","}",""],"l":{"3":1,"5":1,"6":1,"7":1,"8":1,"10":1,"11":1,"13":1,"15":0,"16":0,"18":0,"22":0,"23":0,"26":0,"28":0,"29":0,"30":0,"32":0,"35":0,"36":0,"41":0,"42":0,"47":0,"49":0,"50":0,"51":0,"54":0,"57":0,"59":0,"60":0,"63":0,"65":0,"66":0,"70":0,"72":0,"73":0,"76":0,"77":0,"78":0,"81":0,"86":0,"91":0,"92":0,"97":0,"98":0,"103":0,"107":0,"111":0,"115":0,"117":0,"118":0,"119":0,"122":0,"123":0,"129":0,"130":0,"132":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-bitswap/src/types/message/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-bitswap/src/types/message/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":1,"94":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":14},"end":{"line":17,"column":21}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":12},"end":{"line":23,"column":15}}},"3":{"name":"(anonymous_3)","line":28,"loc":{"start":{"line":28,"column":11},"end":{"line":28,"column":35}}},"4":{"name":"(anonymous_4)","line":42,"loc":{"start":{"line":42,"column":11},"end":{"line":42,"column":19}}},"5":{"name":"(anonymous_5)","line":48,"loc":{"start":{"line":48,"column":9},"end":{"line":48,"column":15}}},"6":{"name":"(anonymous_6)","line":59,"loc":{"start":{"line":59,"column":24},"end":{"line":59,"column":27}}},"7":{"name":"(anonymous_7)","line":85,"loc":{"start":{"line":85,"column":24},"end":{"line":85,"column":27}}},"8":{"name":"(anonymous_8)","line":113,"loc":{"start":{"line":113,"column":9},"end":{"line":113,"column":17}}},"9":{"name":"(anonymous_9)","line":130,"loc":{"start":{"line":130,"column":27},"end":{"line":130,"column":30}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":44}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":49}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":34}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":27}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":54}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":36}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":50}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":48}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":32}},"12":{"start":{"line":18,"column":4},"end":{"line":18,"column":20}},"13":{"start":{"line":19,"column":4},"end":{"line":19,"column":29}},"14":{"start":{"line":20,"column":4},"end":{"line":20,"column":27}},"15":{"start":{"line":24,"column":4},"end":{"line":25,"column":35}},"16":{"start":{"line":29,"column":4},"end":{"line":29,"column":56}},"17":{"start":{"line":30,"column":4},"end":{"line":30,"column":40}},"18":{"start":{"line":32,"column":4},"end":{"line":32,"column":43}},"19":{"start":{"line":34,"column":4},"end":{"line":39,"column":5}},"20":{"start":{"line":35,"column":6},"end":{"line":35,"column":31}},"21":{"start":{"line":36,"column":6},"end":{"line":36,"column":36}},"22":{"start":{"line":38,"column":6},"end":{"line":38,"column":65}},"23":{"start":{"line":43,"column":4},"end":{"line":43,"column":55}},"24":{"start":{"line":44,"column":4},"end":{"line":44,"column":46}},"25":{"start":{"line":45,"column":4},"end":{"line":45,"column":34}},"26":{"start":{"line":49,"column":4},"end":{"line":49,"column":49}},"27":{"start":{"line":50,"column":4},"end":{"line":50,"column":40}},"28":{"start":{"line":51,"column":4},"end":{"line":51,"column":32}},"29":{"start":{"line":52,"column":4},"end":{"line":52,"column":31}},"30":{"start":{"line":60,"column":4},"end":{"line":72,"column":5}},"31":{"start":{"line":63,"column":10},"end":{"line":67,"column":11}},"32":{"start":{"line":71,"column":24},"end":{"line":71,"column":34}},"33":{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},"34":{"start":{"line":75,"column":6},"end":{"line":75,"column":30}},"35":{"start":{"line":78,"column":4},"end":{"line":78,"column":34}},"36":{"start":{"line":86,"column":4},"end":{"line":97,"column":5}},"37":{"start":{"line":89,"column":10},"end":{"line":93,"column":11}},"38":{"start":{"line":99,"column":4},"end":{"line":101,"column":5}},"39":{"start":{"line":100,"column":6},"end":{"line":100,"column":30}},"40":{"start":{"line":103,"column":4},"end":{"line":108,"column":6}},"41":{"start":{"line":104,"column":6},"end":{"line":107,"column":8}},"42":{"start":{"line":110,"column":4},"end":{"line":110,"column":34}},"43":{"start":{"line":114,"column":4},"end":{"line":118,"column":5}},"44":{"start":{"line":115,"column":6},"end":{"line":117,"column":7}},"45":{"start":{"line":116,"column":8},"end":{"line":116,"column":26}},"46":{"start":{"line":120,"column":4},"end":{"line":125,"column":5}},"47":{"start":{"line":124,"column":6},"end":{"line":124,"column":18}},"48":{"start":{"line":127,"column":4},"end":{"line":127,"column":15}},"49":{"start":{"line":131,"column":4},"end":{"line":131,"column":49}},"50":{"start":{"line":132,"column":4},"end":{"line":132,"column":49}},"51":{"start":{"line":133,"column":4},"end":{"line":133,"column":82}},"52":{"start":{"line":137,"column":0},"end":{"line":206,"column":1}},"53":{"start":{"line":138,"column":2},"end":{"line":138,"column":13}},"54":{"start":{"line":139,"column":2},"end":{"line":143,"column":3}},"55":{"start":{"line":140,"column":4},"end":{"line":140,"column":37}},"56":{"start":{"line":142,"column":4},"end":{"line":142,"column":44}},"57":{"start":{"line":142,"column":30},"end":{"line":142,"column":43}},"58":{"start":{"line":145,"column":2},"end":{"line":145,"column":69}},"59":{"start":{"line":146,"column":2},"end":{"line":146,"column":40}},"60":{"start":{"line":148,"column":2},"end":{"line":154,"column":3}},"61":{"start":{"line":149,"column":4},"end":{"line":153,"column":6}},"62":{"start":{"line":151,"column":6},"end":{"line":151,"column":38}},"63":{"start":{"line":152,"column":6},"end":{"line":152,"column":53}},"64":{"start":{"line":158,"column":2},"end":{"line":174,"column":3}},"65":{"start":{"line":159,"column":4},"end":{"line":173,"column":6}},"66":{"start":{"line":160,"column":6},"end":{"line":167,"column":8}},"67":{"start":{"line":161,"column":8},"end":{"line":163,"column":9}},"68":{"start":{"line":162,"column":10},"end":{"line":162,"column":24}},"69":{"start":{"line":164,"column":8},"end":{"line":164,"column":33}},"70":{"start":{"line":165,"column":8},"end":{"line":165,"column":39}},"71":{"start":{"line":166,"column":8},"end":{"line":166,"column":12}},"72":{"start":{"line":169,"column":6},"end":{"line":171,"column":7}},"73":{"start":{"line":170,"column":8},"end":{"line":170,"column":28}},"74":{"start":{"line":172,"column":6},"end":{"line":172,"column":25}},"75":{"start":{"line":177,"column":2},"end":{"line":203,"column":3}},"76":{"start":{"line":178,"column":4},"end":{"line":202,"column":6}},"77":{"start":{"line":179,"column":6},"end":{"line":181,"column":7}},"78":{"start":{"line":180,"column":8},"end":{"line":180,"column":12}},"79":{"start":{"line":182,"column":6},"end":{"line":182,"column":33}},"80":{"start":{"line":183,"column":6},"end":{"line":183,"column":34}},"81":{"start":{"line":184,"column":6},"end":{"line":184,"column":34}},"82":{"start":{"line":185,"column":6},"end":{"line":185,"column":31}},"83":{"start":{"line":187,"column":6},"end":{"line":196,"column":8}},"84":{"start":{"line":188,"column":8},"end":{"line":190,"column":9}},"85":{"start":{"line":189,"column":10},"end":{"line":189,"column":24}},"86":{"start":{"line":192,"column":8},"end":{"line":192,"column":83}},"87":{"start":{"line":194,"column":8},"end":{"line":194,"column":44}},"88":{"start":{"line":195,"column":8},"end":{"line":195,"column":12}},"89":{"start":{"line":198,"column":6},"end":{"line":200,"column":7}},"90":{"start":{"line":199,"column":8},"end":{"line":199,"column":28}},"91":{"start":{"line":201,"column":6},"end":{"line":201,"column":25}},"92":{"start":{"line":205,"column":2},"end":{"line":205,"column":21}},"93":{"start":{"line":208,"column":0},"end":{"line":208,"column":28}},"94":{"start":{"line":209,"column":0},"end":{"line":209,"column":31}}},"branchMap":{"1":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":11},"end":{"line":24,"column":33}},{"start":{"line":25,"column":11},"end":{"line":25,"column":35}}]},"2":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":11},"end":{"line":29,"column":14}},{"start":{"line":29,"column":18},"end":{"line":29,"column":32}}]},"3":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"4":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":74,"column":4}},{"start":{"line":74,"column":4},"end":{"line":74,"column":4}}]},"5":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":99,"column":4}},{"start":{"line":99,"column":4},"end":{"line":99,"column":4}}]},"6":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":6},"end":{"line":115,"column":6}},{"start":{"line":115,"column":6},"end":{"line":115,"column":6}}]},"7":{"line":115,"type":"binary-expr","locations":[{"start":{"line":115,"column":10},"end":{"line":115,"column":18}},{"start":{"line":115,"column":22},"end":{"line":115,"column":52}}]},"8":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":4},"end":{"line":120,"column":4}},{"start":{"line":120,"column":4},"end":{"line":120,"column":4}}]},"9":{"line":120,"type":"binary-expr","locations":[{"start":{"line":120,"column":8},"end":{"line":120,"column":32}},{"start":{"line":121,"column":8},"end":{"line":121,"column":56}},{"start":{"line":122,"column":8},"end":{"line":122,"column":52}}]},"10":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":18},"end":{"line":145,"column":34}},{"start":{"line":145,"column":38},"end":{"line":145,"column":59}},{"start":{"line":145,"column":64},"end":{"line":145,"column":69}}]},"11":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":2},"end":{"line":148,"column":2}},{"start":{"line":148,"column":2},"end":{"line":148,"column":2}}]},"12":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":2},"end":{"line":158,"column":2}},{"start":{"line":158,"column":2},"end":{"line":158,"column":2}}]},"13":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":8},"end":{"line":161,"column":8}},{"start":{"line":161,"column":8},"end":{"line":161,"column":8}}]},"14":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":6},"end":{"line":169,"column":6}},{"start":{"line":169,"column":6},"end":{"line":169,"column":6}}]},"15":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":2},"end":{"line":177,"column":2}},{"start":{"line":177,"column":2},"end":{"line":177,"column":2}}]},"16":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":6},"end":{"line":179,"column":6}},{"start":{"line":179,"column":6},"end":{"line":179,"column":6}}]},"17":{"line":179,"type":"binary-expr","locations":[{"start":{"line":179,"column":10},"end":{"line":179,"column":19}},{"start":{"line":179,"column":23},"end":{"line":179,"column":30}}]},"18":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":8},"end":{"line":188,"column":8}},{"start":{"line":188,"column":8},"end":{"line":188,"column":8}}]},"19":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":6},"end":{"line":198,"column":6}},{"start":{"line":198,"column":6},"end":{"line":198,"column":6}}]}},"code":["'use strict'","","const protobuf = require('protocol-buffers')","const Block = require('ipfs-block')","const isEqualWith = require('lodash.isequalwith')","const assert = require('assert')","const each = require('async/each')","const CID = require('cids')","const codecName = require('multicodec/src/name-table')","const vd = require('varint-decoder')","const multihashing = require('multihashing-async')","","const pbm = protobuf(require('./message.proto'))","const Entry = require('./entry')","","class BitswapMessage {","  constructor (full) {","    this.full = full","    this.wantlist = new Map()","    this.blocks = new Map()","  }","","  get empty () {","    return this.blocks.size === 0 &&","           this.wantlist.size === 0","  }","","  addEntry (cid, priority, cancel) {","    assert(cid && CID.isCID(cid), 'must be a valid cid')","    const cidStr = cid.buffer.toString()","","    const entry = this.wantlist.get(cidStr)","","    if (entry) {","      entry.priority = priority","      entry.cancel = Boolean(cancel)","    } else {","      this.wantlist.set(cidStr, new Entry(cid, priority, cancel))","    }","  }","","  addBlock (block) {","    assert(Block.isBlock(block), 'must be a valid cid')","    const cidStr = block.cid.buffer.toString()","    this.blocks.set(cidStr, block)","  }","","  cancel (cid) {","    assert(CID.isCID(cid), 'must be a valid cid')","    const cidStr = cid.buffer.toString()","    this.wantlist.delete(cidStr)","    this.addEntry(cid, 0, true)","  }","","  /*","   * Serializes to Bitswap Message protobuf of","   * version 1.0.0","   */","  serializeToBitswap100 () {","    const msg = {","      wantlist: {","        entries: Array.from(this.wantlist.values()).map((entry) => {","          return {","            block: entry.cid.buffer, // cid","            priority: Number(entry.priority),","            cancel: Boolean(entry.cancel)","          }","        })","      },","      blocks: Array.from(this.blocks.values())","        .map((block) => block.data)","    }","","    if (this.full) {","      msg.wantlist.full = true","    }","","    return pbm.Message.encode(msg)","  }","","  /*","   * Serializes to Bitswap Message protobuf of","   * version 1.1.0","   */","  serializeToBitswap110 () {","    const msg = {","      wantlist: {","        entries: Array.from(this.wantlist.values()).map((entry) => {","          return {","            block: entry.cid.buffer, // cid","            priority: Number(entry.priority),","            cancel: Boolean(entry.cancel)","          }","        })","      },","      payload: []","    }","","    if (this.full) {","      msg.wantlist.full = true","    }","","    this.blocks.forEach((block) => {","      msg.payload.push({","        prefix: block.cid.prefix,","        data: block.data","      })","    })","","    return pbm.Message.encode(msg)","  }","","  equals (other) {","    const cmp = (a, b) => {","      if (a.equals && typeof a.equals === 'function') {","        return a.equals(b)","      }","    }","","    if (this.full !== other.full ||","        !isEqualWith(this.wantlist, other.wantlist, cmp) ||","        !isEqualWith(this.blocks, other.blocks, cmp)","       ) {","      return false","    }","","    return true","  }","","  get [Symbol.toStringTag] () {","    const list = Array.from(this.wantlist.keys())","    const blocks = Array.from(this.blocks.keys())","    return `BitswapMessage <full: ${this.full}, list: ${list}, blocks: ${blocks}>`","  }","}","","BitswapMessage.deserialize = (raw, callback) => {","  let decoded","  try {","    decoded = pbm.Message.decode(raw)","  } catch (err) {","    return setImmediate(() => callback(err))","  }","","  const isFull = (decoded.wantlist && decoded.wantlist.full) || false","  const msg = new BitswapMessage(isFull)","","  if (decoded.wantlist) {","    decoded.wantlist.entries.forEach((entry) => {","      // note: entry.block is the CID here","      const cid = new CID(entry.block)","      msg.addEntry(cid, entry.priority, entry.cancel)","    })","  }","","  // Bitswap 1.0.0","  // decoded.blocks are just the byte arrays","  if (decoded.blocks.length > 0) {","    return each(decoded.blocks, (b, cb) => {","      multihashing(b, 'sha2-256', (err, hash) => {","        if (err) {","          return cb(err)","        }","        const cid = new CID(hash)","        msg.addBlock(new Block(b, cid))","        cb()","      })","    }, (err) => {","      if (err) {","        return callback(err)","      }","      callback(null, msg)","    })","  }","","  // Bitswap 1.1.0","  if (decoded.payload.length > 0) {","    return each(decoded.payload, (p, cb) => {","      if (!p.prefix || !p.data) {","        cb()","      }","      const values = vd(p.prefix)","      const cidVersion = values[0]","      const multicodec = values[1]","      const hashAlg = values[2]","      // const hashLen = values[3] // We haven't need to use this so far","      multihashing(p.data, hashAlg, (err, hash) => {","        if (err) {","          return cb(err)","        }","","        const cid = new CID(cidVersion, codecName[multicodec.toString('16')], hash)","","        msg.addBlock(new Block(p.data, cid))","        cb()","      })","    }, (err) => {","      if (err) {","        return callback(err)","      }","      callback(null, msg)","    })","  }","","  callback(null, msg)","}","","BitswapMessage.Entry = Entry","module.exports = BitswapMessage",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"13":1,"14":1,"18":0,"19":0,"20":0,"24":0,"29":0,"30":0,"32":0,"34":0,"35":0,"36":0,"38":0,"43":0,"44":0,"45":0,"49":0,"50":0,"51":0,"52":0,"60":0,"63":0,"71":0,"74":0,"75":0,"78":0,"86":0,"89":0,"99":0,"100":0,"103":0,"104":0,"110":0,"114":0,"115":0,"116":0,"120":0,"124":0,"127":0,"131":0,"132":0,"133":0,"137":1,"138":0,"139":0,"140":0,"142":0,"145":0,"146":0,"148":0,"149":0,"151":0,"152":0,"158":0,"159":0,"160":0,"161":0,"162":0,"164":0,"165":0,"166":0,"169":0,"170":0,"172":0,"177":0,"178":0,"179":0,"180":0,"182":0,"183":0,"184":0,"185":0,"187":0,"188":0,"189":0,"192":0,"194":0,"195":0,"198":0,"199":0,"201":0,"205":0,"208":1,"209":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-bitswap/src/types/message/message.proto.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-bitswap/src/types/message/message.proto.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":28,"column":1}}},"branchMap":{},"code":["'use strict'","","// from: https://github.com/ipfs/go-ipfs/blob/master/exchange/bitswap/message/pb/message.proto","","module.exports = `","  message Message {","    message Wantlist {","      message Entry {","        // changed from string to bytes, it makes a difference in JavaScript","        optional bytes block = 1;      // the block cid (cidV0 in bitswap 1.0.0, cidV1 in bitswap 1.1.0)","        optional int32 priority = 2;    // the priority (normalized). default to 1","        optional bool cancel = 3;       // whether this revokes an entry","      }","","      repeated Entry entries = 1;       // a list of wantlist entries","      optional bool full = 2;           // whether this is the full wantlist. default to false","    }","","    message Block {","      optional bytes prefix = 1;        // CID prefix (cid version, multicodec and multihash prefix (type + length)","      optional bytes data = 2;","    }","","    optional Wantlist wantlist = 1;","    repeated bytes blocks = 2;          // used to send Blocks in bitswap 1.0.0","    repeated Block payload = 3;         // used to send Blocks in bitswap 1.1.0","  }","`",""],"l":{"5":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-bitswap/src/types/message/entry.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-bitswap/src/types/message/entry.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":14},"end":{"line":8,"column":38}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":10},"end":{"line":14,"column":13}}},"3":{"name":"(anonymous_3)","line":18,"loc":{"start":{"line":18,"column":10},"end":{"line":18,"column":16}}},"4":{"name":"(anonymous_4)","line":22,"loc":{"start":{"line":22,"column":15},"end":{"line":22,"column":18}}},"5":{"name":"(anonymous_5)","line":26,"loc":{"start":{"line":26,"column":15},"end":{"line":26,"column":21}}},"6":{"name":"(anonymous_6)","line":30,"loc":{"start":{"line":30,"column":27},"end":{"line":30,"column":30}}},"7":{"name":"(anonymous_7)","line":36,"loc":{"start":{"line":36,"column":9},"end":{"line":36,"column":17}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":50}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":27}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":32}},"4":{"start":{"line":7,"column":0},"end":{"line":40,"column":1}},"5":{"start":{"line":9,"column":4},"end":{"line":9,"column":45}},"6":{"start":{"line":10,"column":4},"end":{"line":10,"column":49}},"7":{"start":{"line":11,"column":4},"end":{"line":11,"column":33}},"8":{"start":{"line":15,"column":4},"end":{"line":15,"column":25}},"9":{"start":{"line":19,"column":4},"end":{"line":19,"column":24}},"10":{"start":{"line":23,"column":4},"end":{"line":23,"column":30}},"11":{"start":{"line":27,"column":4},"end":{"line":27,"column":29}},"12":{"start":{"line":31,"column":4},"end":{"line":31,"column":49}},"13":{"start":{"line":33,"column":4},"end":{"line":33,"column":95}},"14":{"start":{"line":37,"column":4},"end":{"line":38,"column":41}}},"branchMap":{"1":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":12},"end":{"line":37,"column":40}},{"start":{"line":38,"column":11},"end":{"line":38,"column":41}}]}},"code":["'use strict'","","const WantlistEntry = require('../wantlist').Entry","const CID = require('cids')","const assert = require('assert')","","module.exports = class BitswapMessageEntry {","  constructor (cid, priority, cancel) {","    assert(CID.isCID(cid), 'needs valid cid')","    this.entry = new WantlistEntry(cid, priority)","    this.cancel = Boolean(cancel)","  }","","  get cid () {","    return this.entry.cid","  }","","  set cid (cid) {","    this.entry.cid = cid","  }","","  get priority () {","    return this.entry.priority","  }","","  set priority (val) {","    this.entry.priority = val","  }","","  get [Symbol.toStringTag] () {","    const cidStr = this.cid.toBaseEncodedString()","","    return `BitswapMessageEntry ${cidStr} <cancel: ${this.cancel}, priority: ${this.priority}>`","  }","","  equals (other) {","    return (this.cancel === other.cancel) &&","           this.entry.equals(other.entry)","  }","}",""],"l":{"3":1,"4":1,"5":1,"7":1,"9":0,"10":0,"11":0,"15":0,"19":0,"23":0,"27":0,"31":0,"33":0,"37":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-bitswap/src/types/wantlist/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-bitswap/src/types/wantlist/index.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":14},"end":{"line":7,"column":17}}},"2":{"name":"(anonymous_2)","line":11,"loc":{"start":{"line":11,"column":13},"end":{"line":11,"column":16}}},"3":{"name":"(anonymous_3)","line":15,"loc":{"start":{"line":15,"column":6},"end":{"line":15,"column":22}}},"4":{"name":"(anonymous_4)","line":27,"loc":{"start":{"line":27,"column":9},"end":{"line":27,"column":15}}},"5":{"name":"(anonymous_5)","line":45,"loc":{"start":{"line":45,"column":14},"end":{"line":45,"column":23}}},"6":{"name":"(anonymous_6)","line":51,"loc":{"start":{"line":51,"column":10},"end":{"line":51,"column":13}}},"7":{"name":"(anonymous_7)","line":55,"loc":{"start":{"line":55,"column":16},"end":{"line":55,"column":19}}},"8":{"name":"(anonymous_8)","line":63,"loc":{"start":{"line":63,"column":11},"end":{"line":63,"column":17}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":37}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":32}},"3":{"start":{"line":8,"column":4},"end":{"line":8,"column":24}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":24}},"5":{"start":{"line":16,"column":4},"end":{"line":16,"column":40}},"6":{"start":{"line":17,"column":4},"end":{"line":17,"column":38}},"7":{"start":{"line":19,"column":4},"end":{"line":24,"column":5}},"8":{"start":{"line":20,"column":6},"end":{"line":20,"column":17}},"9":{"start":{"line":21,"column":6},"end":{"line":21,"column":31}},"10":{"start":{"line":23,"column":6},"end":{"line":23,"column":52}},"11":{"start":{"line":28,"column":4},"end":{"line":28,"column":40}},"12":{"start":{"line":29,"column":4},"end":{"line":29,"column":38}},"13":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"14":{"start":{"line":32,"column":6},"end":{"line":32,"column":12}},"15":{"start":{"line":35,"column":4},"end":{"line":35,"column":15}},"16":{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},"17":{"start":{"line":39,"column":6},"end":{"line":39,"column":12}},"18":{"start":{"line":42,"column":4},"end":{"line":42,"column":27}},"19":{"start":{"line":46,"column":4},"end":{"line":48,"column":5}},"20":{"start":{"line":47,"column":6},"end":{"line":47,"column":29}},"21":{"start":{"line":52,"column":4},"end":{"line":52,"column":29}},"22":{"start":{"line":56,"column":4},"end":{"line":60,"column":5}},"23":{"start":{"line":58,"column":8},"end":{"line":58,"column":23}},"24":{"start":{"line":64,"column":4},"end":{"line":64,"column":40}},"25":{"start":{"line":65,"column":4},"end":{"line":65,"column":31}},"26":{"start":{"line":69,"column":0},"end":{"line":69,"column":22}},"27":{"start":{"line":70,"column":0},"end":{"line":70,"column":25}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":4}},{"start":{"line":19,"column":4},"end":{"line":19,"column":4}}]},"2":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":4}},{"start":{"line":31,"column":4},"end":{"line":31,"column":4}}]},"3":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":4}},{"start":{"line":38,"column":4},"end":{"line":38,"column":4}}]},"4":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]}},"code":["'use strict'","","const sort = require('lodash.sortby')","const Entry = require('./entry')","","class Wantlist {","  constructor () {","    this.set = new Map()","  }","","  get length () {","    return this.set.size","  }","","  add (cid, priority) {","    const cidStr = cid.buffer.toString()","    const entry = this.set.get(cidStr)","","    if (entry) {","      entry.inc()","      entry.priority = priority","    } else {","      this.set.set(cidStr, new Entry(cid, priority))","    }","  }","","  remove (cid) {","    const cidStr = cid.buffer.toString()","    const entry = this.set.get(cidStr)","","    if (!entry) {","      return","    }","","    entry.dec()","","    // only delete when no refs are held","    if (entry.hasRefs()) {","      return","    }","","    this.set.delete(cidStr)","  }","","  removeForce (cidStr) {","    if (this.set.has(cidStr)) {","      this.set.delete(cidStr)","    }","  }","","  entries () {","    return this.set.entries()","  }","","  sortedEntries () {","    return new Map(","      sort(Array.from(this.set.entries()), (o) => {","        return o[1].key","      })","    )","  }","","  contains (cid) {","    const cidStr = cid.buffer.toString()","    return this.set.get(cidStr)","  }","}","","Wantlist.Entry = Entry","module.exports = Wantlist",""],"l":{"3":1,"4":1,"8":0,"12":0,"16":0,"17":0,"19":0,"20":0,"21":0,"23":0,"28":0,"29":0,"31":0,"32":0,"35":0,"38":0,"39":0,"42":0,"46":0,"47":0,"52":0,"56":0,"58":0,"64":0,"65":0,"69":1,"70":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-bitswap/src/types/wantlist/entry.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-bitswap/src/types/wantlist/entry.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1},"b":{"1":[0,0],"2":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":14},"end":{"line":7,"column":30}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":6},"end":{"line":17,"column":9}}},"3":{"name":"(anonymous_3)","line":21,"loc":{"start":{"line":21,"column":6},"end":{"line":21,"column":9}}},"4":{"name":"(anonymous_4)","line":25,"loc":{"start":{"line":25,"column":10},"end":{"line":25,"column":13}}},"5":{"name":"(anonymous_5)","line":30,"loc":{"start":{"line":30,"column":27},"end":{"line":30,"column":30}}},"6":{"name":"(anonymous_6)","line":35,"loc":{"start":{"line":35,"column":9},"end":{"line":35,"column":17}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":27}},"3":{"start":{"line":8,"column":4},"end":{"line":8,"column":47}},"4":{"start":{"line":11,"column":4},"end":{"line":11,"column":24}},"5":{"start":{"line":13,"column":4},"end":{"line":13,"column":18}},"6":{"start":{"line":14,"column":4},"end":{"line":14,"column":33}},"7":{"start":{"line":18,"column":4},"end":{"line":18,"column":25}},"8":{"start":{"line":22,"column":4},"end":{"line":22,"column":56}},"9":{"start":{"line":26,"column":4},"end":{"line":26,"column":31}},"10":{"start":{"line":31,"column":4},"end":{"line":31,"column":49}},"11":{"start":{"line":32,"column":4},"end":{"line":32,"column":98}},"12":{"start":{"line":36,"column":4},"end":{"line":38,"column":38}},"13":{"start":{"line":42,"column":0},"end":{"line":42,"column":30}}},"branchMap":{"1":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":20},"end":{"line":14,"column":28}},{"start":{"line":14,"column":32},"end":{"line":14,"column":33}}]},"2":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":12},"end":{"line":36,"column":50}},{"start":{"line":37,"column":6},"end":{"line":37,"column":32}},{"start":{"line":38,"column":6},"end":{"line":38,"column":38}}]}},"code":["'use strict'","","const assert = require('assert')","const CID = require('cids')","","class WantListEntry {","  constructor (cid, priority) {","    assert(CID.isCID(cid), 'must be valid CID')","","    // Keep track of how many requests we have for this key","    this._refCounter = 1","","    this.cid = cid","    this.priority = priority || 1","  }","","  inc () {","    this._refCounter += 1","  }","","  dec () {","    this._refCounter = Math.max(0, this._refCounter - 1)","  }","","  hasRefs () {","    return this._refCounter > 0","  }","","  // So that console.log prints a nice description of this object","  get [Symbol.toStringTag] () {","    const cidStr = this.cid.toBaseEncodedString()","    return `WantlistEntry <key: ${cidStr}, priority: ${this.priority}, refs: ${this._refCounter}>`","  }","","  equals (other) {","    return (this._refCounter === other._refCounter) &&","      this.cid.equals(other.cid) &&","      this.priority === other.priority","  }","}","","module.exports = WantListEntry",""],"l":{"3":1,"4":1,"8":0,"11":0,"13":0,"14":0,"18":0,"22":0,"26":0,"31":0,"32":0,"36":0,"42":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-bitswap/src/components/want-manager/msg-queue.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-bitswap/src/components/want-manager/msg-queue.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":14},"end":{"line":11,"column":32}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":13},"end":{"line":20,"column":19}}},"3":{"name":"(anonymous_3)","line":28,"loc":{"start":{"line":28,"column":13},"end":{"line":28,"column":23}}},"4":{"name":"(anonymous_4)","line":33,"loc":{"start":{"line":33,"column":15},"end":{"line":33,"column":18}}},"5":{"name":"(anonymous_5)","line":50,"loc":{"start":{"line":50,"column":7},"end":{"line":50,"column":13}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":43}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":46}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":46}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":52}},"6":{"start":{"line":10,"column":0},"end":{"line":64,"column":1}},"7":{"start":{"line":12,"column":4},"end":{"line":12,"column":24}},"8":{"start":{"line":13,"column":4},"end":{"line":13,"column":26}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":19}},"10":{"start":{"line":16,"column":4},"end":{"line":16,"column":22}},"11":{"start":{"line":17,"column":4},"end":{"line":17,"column":66}},"12":{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},"13":{"start":{"line":22,"column":6},"end":{"line":22,"column":12}},"14":{"start":{"line":25,"column":4},"end":{"line":25,"column":18}},"15":{"start":{"line":29,"column":4},"end":{"line":29,"column":49}},"16":{"start":{"line":30,"column":4},"end":{"line":30,"column":22}},"17":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"18":{"start":{"line":35,"column":6},"end":{"line":35,"column":12}},"19":{"start":{"line":38,"column":4},"end":{"line":38,"column":34}},"20":{"start":{"line":39,"column":4},"end":{"line":45,"column":6}},"21":{"start":{"line":40,"column":6},"end":{"line":44,"column":7}},"22":{"start":{"line":41,"column":8},"end":{"line":41,"column":29}},"23":{"start":{"line":43,"column":8},"end":{"line":43,"column":47}},"24":{"start":{"line":46,"column":4},"end":{"line":46,"column":22}},"25":{"start":{"line":47,"column":4},"end":{"line":47,"column":24}},"26":{"start":{"line":51,"column":4},"end":{"line":62,"column":6}},"27":{"start":{"line":52,"column":6},"end":{"line":55,"column":7}},"28":{"start":{"line":53,"column":8},"end":{"line":53,"column":88}},"29":{"start":{"line":54,"column":8},"end":{"line":54,"column":14}},"30":{"start":{"line":56,"column":6},"end":{"line":56,"column":28}},"31":{"start":{"line":57,"column":6},"end":{"line":61,"column":8}},"32":{"start":{"line":58,"column":8},"end":{"line":60,"column":9}},"33":{"start":{"line":59,"column":10},"end":{"line":59,"column":50}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":4}},{"start":{"line":21,"column":4},"end":{"line":21,"column":4}}]},"2":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"3":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":6},"end":{"line":40,"column":6}},{"start":{"line":40,"column":6},"end":{"line":40,"column":6}}]},"4":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":6},"end":{"line":52,"column":6}},{"start":{"line":52,"column":6},"end":{"line":52,"column":6}}]},"5":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":8},"end":{"line":58,"column":8}},{"start":{"line":58,"column":8},"end":{"line":58,"column":8}}]}},"code":["'use strict'","","const debug = require('debug')","const debounce = require('lodash.debounce')","const Message = require('../../types/message')","","const log = debug('bitswap:wantmanager:queue')","log.error = debug('bitswap:wantmanager:queue:error')","","module.exports = class MsgQueue {","  constructor (peerId, network) {","    this.peerId = peerId","    this.network = network","    this.refcnt = 1","","    this._entries = []","    this.sendEntries = debounce(this._sendEntries.bind(this), 200)","  }","","  addMessage (msg) {","    if (msg.empty) {","      return","    }","","    this.send(msg)","  }","","  addEntries (entries) {","    this._entries = this._entries.concat(entries)","    this.sendEntries()","  }","","  _sendEntries () {","    if (!this._entries.length) {","      return","    }","","    const msg = new Message(false)","    this._entries.forEach((entry) => {","      if (entry.cancel) {","        msg.cancel(entry.cid)","      } else {","        msg.addEntry(entry.cid, entry.priority)","      }","    })","    this._entries = []","    this.addMessage(msg)","  }","","  send (msg) {","    this.network.connectTo(this.peerId, (err) => {","      if (err) {","        log.error('cant connect to peer %s: %s', this.peerId.toB58String(), err.message)","        return","      }","      log('sending message')","      this.network.sendMessage(this.peerId, msg, (err) => {","        if (err) {","          log.error('send error: %s', err.message)","        }","      })","    })","  }","}",""],"l":{"3":1,"4":1,"5":1,"7":1,"8":1,"10":1,"12":0,"13":0,"14":0,"16":0,"17":0,"21":0,"22":0,"25":0,"29":0,"30":0,"34":0,"35":0,"38":0,"39":0,"40":0,"41":0,"43":0,"46":0,"47":0,"51":0,"52":0,"53":0,"54":0,"56":0,"57":0,"58":0,"59":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-bitswap/src/components/network/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-bitswap/src/components/network/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":1,"94":0,"95":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":14},"end":{"line":17,"column":52}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":8},"end":{"line":28,"column":11}}},"3":{"name":"(anonymous_3)","line":50,"loc":{"start":{"line":50,"column":7},"end":{"line":50,"column":10}}},"4":{"name":"(anonymous_4)","line":63,"loc":{"start":{"line":63,"column":16},"end":{"line":63,"column":33}}},"5":{"name":"(anonymous_5)","line":90,"loc":{"start":{"line":90,"column":13},"end":{"line":90,"column":24}}},"6":{"name":"(anonymous_6)","line":97,"loc":{"start":{"line":97,"column":19},"end":{"line":97,"column":30}}},"7":{"name":"(anonymous_7)","line":105,"loc":{"start":{"line":105,"column":12},"end":{"line":105,"column":31}}},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":14},"end":{"line":123,"column":38}}},"9":{"name":"(anonymous_9)","line":162,"loc":{"start":{"line":162,"column":12},"end":{"line":162,"column":33}}},"10":{"name":"writeMessage","line":187,"loc":{"start":{"line":187,"column":0},"end":{"line":187,"column":44}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":50}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":46}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":44}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":36}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":42}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":40}},"10":{"start":{"line":14,"column":0},"end":{"line":14,"column":40}},"11":{"start":{"line":18,"column":4},"end":{"line":18,"column":24}},"12":{"start":{"line":19,"column":4},"end":{"line":19,"column":28}},"13":{"start":{"line":20,"column":4},"end":{"line":20,"column":26}},"14":{"start":{"line":21,"column":4},"end":{"line":21,"column":37}},"15":{"start":{"line":24,"column":4},"end":{"line":24,"column":25}},"16":{"start":{"line":25,"column":4},"end":{"line":25,"column":61}},"17":{"start":{"line":29,"column":4},"end":{"line":29,"column":24}},"18":{"start":{"line":31,"column":4},"end":{"line":31,"column":48}},"19":{"start":{"line":32,"column":4},"end":{"line":32,"column":60}},"20":{"start":{"line":34,"column":4},"end":{"line":34,"column":54}},"21":{"start":{"line":35,"column":4},"end":{"line":35,"column":54}},"22":{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},"23":{"start":{"line":37,"column":6},"end":{"line":37,"column":56}},"24":{"start":{"line":40,"column":4},"end":{"line":40,"column":65}},"25":{"start":{"line":41,"column":4},"end":{"line":41,"column":66}},"26":{"start":{"line":44,"column":4},"end":{"line":44,"column":53}},"27":{"start":{"line":45,"column":4},"end":{"line":47,"column":6}},"28":{"start":{"line":46,"column":6},"end":{"line":46,"column":54}},"29":{"start":{"line":51,"column":4},"end":{"line":51,"column":25}},"30":{"start":{"line":53,"column":4},"end":{"line":53,"column":36}},"31":{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},"32":{"start":{"line":55,"column":6},"end":{"line":55,"column":38}},"33":{"start":{"line":58,"column":4},"end":{"line":58,"column":77}},"34":{"start":{"line":59,"column":4},"end":{"line":59,"column":78}},"35":{"start":{"line":64,"column":4},"end":{"line":66,"column":5}},"36":{"start":{"line":65,"column":6},"end":{"line":65,"column":12}},"37":{"start":{"line":67,"column":4},"end":{"line":67,"column":57}},"38":{"start":{"line":68,"column":4},"end":{"line":87,"column":5}},"39":{"start":{"line":71,"column":34},"end":{"line":71,"column":63}},"40":{"start":{"line":73,"column":8},"end":{"line":79,"column":10}},"41":{"start":{"line":74,"column":10},"end":{"line":76,"column":11}},"42":{"start":{"line":75,"column":12},"end":{"line":75,"column":26}},"43":{"start":{"line":78,"column":10},"end":{"line":78,"column":60}},"44":{"start":{"line":82,"column":8},"end":{"line":82,"column":32}},"45":{"start":{"line":83,"column":8},"end":{"line":85,"column":9}},"46":{"start":{"line":84,"column":10},"end":{"line":84,"column":48}},"47":{"start":{"line":91,"column":4},"end":{"line":93,"column":5}},"48":{"start":{"line":92,"column":6},"end":{"line":92,"column":12}},"49":{"start":{"line":94,"column":4},"end":{"line":94,"column":46}},"50":{"start":{"line":98,"column":4},"end":{"line":100,"column":5}},"51":{"start":{"line":99,"column":6},"end":{"line":99,"column":12}},"52":{"start":{"line":101,"column":4},"end":{"line":101,"column":49}},"53":{"start":{"line":106,"column":4},"end":{"line":106,"column":59}},"54":{"start":{"line":106,"column":26},"end":{"line":106,"column":59}},"55":{"start":{"line":106,"column":45},"end":{"line":106,"column":58}},"56":{"start":{"line":108,"column":4},"end":{"line":110,"column":5}},"57":{"start":{"line":109,"column":6},"end":{"line":109,"column":50}},"58":{"start":{"line":115,"column":4},"end":{"line":119,"column":5}},"59":{"start":{"line":116,"column":6},"end":{"line":116,"column":12}},"60":{"start":{"line":118,"column":6},"end":{"line":118,"column":85}},"61":{"start":{"line":124,"column":4},"end":{"line":126,"column":5}},"62":{"start":{"line":125,"column":6},"end":{"line":125,"column":54}},"63":{"start":{"line":128,"column":4},"end":{"line":128,"column":41}},"64":{"start":{"line":129,"column":4},"end":{"line":129,"column":43}},"65":{"start":{"line":130,"column":4},"end":{"line":130,"column":16}},"66":{"start":{"line":131,"column":4},"end":{"line":135,"column":5}},"67":{"start":{"line":132,"column":6},"end":{"line":132,"column":55}},"68":{"start":{"line":134,"column":6},"end":{"line":134,"column":26}},"69":{"start":{"line":137,"column":4},"end":{"line":159,"column":6}},"70":{"start":{"line":138,"column":6},"end":{"line":140,"column":7}},"71":{"start":{"line":139,"column":8},"end":{"line":139,"column":28}},"72":{"start":{"line":142,"column":6},"end":{"line":142,"column":20}},"73":{"start":{"line":143,"column":6},"end":{"line":152,"column":7}},"74":{"start":{"line":145,"column":10},"end":{"line":145,"column":50}},"75":{"start":{"line":146,"column":10},"end":{"line":146,"column":15}},"76":{"start":{"line":148,"column":10},"end":{"line":148,"column":50}},"77":{"start":{"line":149,"column":10},"end":{"line":149,"column":15}},"78":{"start":{"line":151,"column":10},"end":{"line":151,"column":68}},"79":{"start":{"line":153,"column":6},"end":{"line":157,"column":8}},"80":{"start":{"line":154,"column":8},"end":{"line":156,"column":9}},"81":{"start":{"line":155,"column":10},"end":{"line":155,"column":18}},"82":{"start":{"line":158,"column":6},"end":{"line":158,"column":16}},"83":{"start":{"line":164,"column":4},"end":{"line":183,"column":5}},"84":{"start":{"line":166,"column":6},"end":{"line":180,"column":8}},"85":{"start":{"line":167,"column":8},"end":{"line":177,"column":9}},"86":{"start":{"line":169,"column":10},"end":{"line":175,"column":12}},"87":{"start":{"line":170,"column":12},"end":{"line":172,"column":13}},"88":{"start":{"line":171,"column":14},"end":{"line":171,"column":34}},"89":{"start":{"line":174,"column":12},"end":{"line":174,"column":44}},"90":{"start":{"line":176,"column":10},"end":{"line":176,"column":16}},"91":{"start":{"line":179,"column":8},"end":{"line":179,"column":40}},"92":{"start":{"line":182,"column":6},"end":{"line":182,"column":26}},"93":{"start":{"line":187,"column":0},"end":{"line":194,"column":1}},"94":{"start":{"line":188,"column":2},"end":{"line":193,"column":3}},"95":{"start":{"line":196,"column":0},"end":{"line":196,"column":24}}},"branchMap":{"1":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":20},"end":{"line":21,"column":28}},{"start":{"line":21,"column":32},"end":{"line":21,"column":37}}]},"2":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":36,"column":4}},{"start":{"line":36,"column":4},"end":{"line":36,"column":4}}]},"3":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":4}},{"start":{"line":54,"column":4},"end":{"line":54,"column":4}}]},"4":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":4},"end":{"line":64,"column":4}},{"start":{"line":64,"column":4},"end":{"line":64,"column":4}}]},"5":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":10},"end":{"line":74,"column":10}},{"start":{"line":74,"column":10},"end":{"line":74,"column":10}}]},"6":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":8},"end":{"line":83,"column":8}},{"start":{"line":83,"column":8},"end":{"line":83,"column":8}}]},"7":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":4},"end":{"line":91,"column":4}},{"start":{"line":91,"column":4},"end":{"line":91,"column":4}}]},"8":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":4},"end":{"line":98,"column":4}},{"start":{"line":98,"column":4},"end":{"line":98,"column":4}}]},"9":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":4},"end":{"line":108,"column":4}},{"start":{"line":108,"column":4},"end":{"line":108,"column":4}}]},"10":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":4},"end":{"line":115,"column":4}},{"start":{"line":115,"column":4},"end":{"line":115,"column":4}}]},"11":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":4},"end":{"line":124,"column":4}},{"start":{"line":124,"column":4},"end":{"line":124,"column":4}}]},"12":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":6},"end":{"line":138,"column":6}},{"start":{"line":138,"column":6},"end":{"line":138,"column":6}}]},"13":{"line":143,"type":"switch","locations":[{"start":{"line":144,"column":8},"end":{"line":146,"column":15}},{"start":{"line":147,"column":8},"end":{"line":149,"column":15}},{"start":{"line":150,"column":8},"end":{"line":151,"column":68}}]},"14":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":8},"end":{"line":154,"column":8}},{"start":{"line":154,"column":8},"end":{"line":154,"column":8}}]},"15":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":8},"end":{"line":167,"column":8}},{"start":{"line":167,"column":8},"end":{"line":167,"column":8}}]},"16":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":12},"end":{"line":170,"column":12}},{"start":{"line":170,"column":12},"end":{"line":170,"column":12}}]}},"code":["'use strict'","","const debug = require('debug')","const lp = require('pull-length-prefixed')","const pull = require('pull-stream')","const setImmediate = require('async/setImmediate')","","const Message = require('../../types/message')","const CONSTANTS = require('../../constants')","const log = debug('bitswap:network')","log.error = debug('bitswap:network:error')","","const BITSWAP100 = '/ipfs/bitswap/1.0.0'","const BITSWAP110 = '/ipfs/bitswap/1.1.0'","","class Network {","  constructor (libp2p, peerBook, bitswap, b100Only) {","    this.libp2p = libp2p","    this.peerBook = peerBook","    this.bitswap = bitswap","    this.b100Only = b100Only || false","","    // increase event listener max","    this._running = false","    this.libp2p.swarm.setMaxListeners(CONSTANTS.maxListeners)","  }","","  start () {","    this._running = true","    // bind event listeners","    this._onPeerMux = this._onPeerMux.bind(this)","    this._onPeerMuxClosed = this._onPeerMuxClosed.bind(this)","","    this._onConnection = this._onConnection.bind(this)","    this.libp2p.handle(BITSWAP100, this._onConnection)","    if (!this.b100Only) {","      this.libp2p.handle(BITSWAP110, this._onConnection)","    }","","    this.libp2p.swarm.on('peer-mux-established', this._onPeerMux)","    this.libp2p.swarm.on('peer-mux-closed', this._onPeerMuxClosed)","","    // All existing connections are like new ones for us","    const pKeys = Object.keys(this.peerBook.getAll())","    pKeys.forEach((k) => {","      this._onPeerMux(this.peerBook.getByB58String(k))","    })","  }","","  stop () {","    this._running = false","","    this.libp2p.unhandle(BITSWAP100)","    if (!this.b100Only) {","      this.libp2p.unhandle(BITSWAP110)","    }","","    this.libp2p.swarm.removeListener('peer-mux-established', this._onPeerMux)","    this.libp2p.swarm.removeListener('peer-mux-closed', this._onPeerMuxClosed)","  }","","  // Handles both types of bitswap messgages","  _onConnection (protocol, conn) {","    if (!this._running) {","      return","    }","    log('incomming new bitswap connection: %s', protocol)","    pull(","      conn,","      lp.decode(),","      pull.asyncMap((data, cb) => Message.deserialize(data, cb)),","      pull.asyncMap((msg, cb) => {","        conn.getPeerInfo((err, peerInfo) => {","          if (err) {","            return cb(err)","          }","          // log('data from', peerInfo.id.toB58String())","          this.bitswap._receiveMessage(peerInfo.id, msg, cb)","        })","      }),","      pull.onEnd((err) => {","        log('ending connection')","        if (err) {","          return this.bitswap._receiveError(err)","        }","      })","    )","  }","","  _onPeerMux (peerInfo) {","    if (!this._running) {","      return","    }","    this.bitswap._onPeerConnected(peerInfo.id)","  }","","  _onPeerMuxClosed (peerInfo) {","    if (!this._running) {","      return","    }","    this.bitswap._onPeerDisconnected(peerInfo.id)","  }","","  // Connect to the given peer","  connectTo (peerId, callback) {","    const done = (err) => setImmediate(() => callback(err))","","    if (!this._running) {","      return done(new Error('No running network'))","    }","","    // NOTE: For now, all this does is ensure that we are","    // connected. Once we have Peer Routing, we will be able","    // to find the Peer","    if (this.libp2p.swarm.muxedConns[peerId.toB58String()]) {","      done()","    } else {","      done(new Error('Could not connect to peer with peerId:', peerId.toB58String()))","    }","  }","","  // Send the given msg (instance of Message) to the given peer","  sendMessage (peerId, msg, callback) {","    if (!this._running) {","      return callback(new Error('No running network'))","    }","","    const stringId = peerId.toB58String()","    log('sendMessage to %s', stringId, msg)","    let peerInfo","    try {","      peerInfo = this.peerBook.getByB58String(stringId)","    } catch (err) {","      return callback(err)","    }","","    this._dialPeer(peerInfo, (err, conn, protocol) => {","      if (err) {","        return callback(err)","      }","","      let serialized","      switch (protocol) {","        case BITSWAP100:","          serialized = msg.serializeToBitswap100()","          break","        case BITSWAP110:","          serialized = msg.serializeToBitswap110()","          break","        default:","          return callback(new Error('Unkown protocol: ' + protocol))","      }","      writeMessage(conn, serialized, (err) => {","        if (err) {","          log(err)","        }","      })","      callback()","    })","  }","","  _dialPeer (peerInfo, callback) {","    // dialByPeerInfo throws if no network is there","    try {","     // Attempt Bitswap 1.1.0","      this.libp2p.dialByPeerInfo(peerInfo, BITSWAP110, (err, conn) => {","        if (err) {","          // Attempt Bitswap 1.0.0","          this.libp2p.dialByPeerInfo(peerInfo, BITSWAP100, (err, conn) => {","            if (err) {","              return callback(err)","            }","","            callback(null, conn, BITSWAP100)","          })","          return","        }","","        callback(null, conn, BITSWAP110)","      })","    } catch (err) {","      return callback(err)","    }","  }","}","","function writeMessage (conn, msg, callback) {","  pull(","    pull.values([msg]),","    lp.encode(),","    conn,","    pull.onEnd(callback)","  )","}","","module.exports = Network",""],"l":{"3":1,"4":1,"5":1,"6":1,"8":1,"9":1,"10":1,"11":1,"13":1,"14":1,"18":0,"19":0,"20":0,"21":0,"24":0,"25":0,"29":0,"31":0,"32":0,"34":0,"35":0,"36":0,"37":0,"40":0,"41":0,"44":0,"45":0,"46":0,"51":0,"53":0,"54":0,"55":0,"58":0,"59":0,"64":0,"65":0,"67":0,"68":0,"71":0,"73":0,"74":0,"75":0,"78":0,"82":0,"83":0,"84":0,"91":0,"92":0,"94":0,"98":0,"99":0,"101":0,"106":0,"108":0,"109":0,"115":0,"116":0,"118":0,"124":0,"125":0,"128":0,"129":0,"130":0,"131":0,"132":0,"134":0,"137":0,"138":0,"139":0,"142":0,"143":0,"145":0,"146":0,"148":0,"149":0,"151":0,"153":0,"154":0,"155":0,"158":0,"164":0,"166":0,"167":0,"169":0,"170":0,"171":0,"174":0,"176":0,"179":0,"182":0,"187":1,"188":0,"196":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-bitswap/src/components/decision-engine/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-bitswap/src/components/decision-engine/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"fnMap":{"1":{"name":"(anonymous_1)","line":25,"loc":{"start":{"line":25,"column":14},"end":{"line":25,"column":36}}},"2":{"name":"(anonymous_2)","line":39,"loc":{"start":{"line":39,"column":14},"end":{"line":39,"column":24}}},"3":{"name":"(anonymous_3)","line":67,"loc":{"start":{"line":67,"column":18},"end":{"line":67,"column":37}}},"4":{"name":"(anonymous_4)","line":83,"loc":{"start":{"line":83,"column":16},"end":{"line":83,"column":19}}},"5":{"name":"(anonymous_5)","line":127,"loc":{"start":{"line":127,"column":18},"end":{"line":127,"column":27}}},"6":{"name":"(anonymous_6)","line":136,"loc":{"start":{"line":136,"column":8},"end":{"line":136,"column":11}}},"7":{"name":"(anonymous_7)","line":140,"loc":{"start":{"line":140,"column":17},"end":{"line":140,"column":24}}},"8":{"name":"(anonymous_8)","line":160,"loc":{"start":{"line":160,"column":18},"end":{"line":160,"column":36}}},"9":{"name":"(anonymous_9)","line":194,"loc":{"start":{"line":194,"column":15},"end":{"line":194,"column":41}}},"10":{"name":"(anonymous_10)","line":204,"loc":{"start":{"line":204,"column":12},"end":{"line":204,"column":42}}},"11":{"name":"(anonymous_11)","line":224,"loc":{"start":{"line":224,"column":17},"end":{"line":224,"column":44}}},"12":{"name":"(anonymous_12)","line":236,"loc":{"start":{"line":236,"column":14},"end":{"line":236,"column":30}}},"13":{"name":"(anonymous_13)","line":244,"loc":{"start":{"line":244,"column":17},"end":{"line":244,"column":26}}},"14":{"name":"(anonymous_14)","line":248,"loc":{"start":{"line":248,"column":23},"end":{"line":248,"column":32}}},"15":{"name":"(anonymous_15)","line":252,"loc":{"start":{"line":252,"column":19},"end":{"line":252,"column":28}}},"16":{"name":"(anonymous_16)","line":261,"loc":{"start":{"line":261,"column":16},"end":{"line":261,"column":25}}},"17":{"name":"(anonymous_17)","line":274,"loc":{"start":{"line":274,"column":8},"end":{"line":274,"column":11}}},"18":{"name":"(anonymous_18)","line":278,"loc":{"start":{"line":278,"column":7},"end":{"line":278,"column":10}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":46}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":44}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":32}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":43}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":43}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":35}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":39}},"10":{"start":{"line":12,"column":0},"end":{"line":12,"column":41}},"11":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"12":{"start":{"line":15,"column":0},"end":{"line":15,"column":35}},"13":{"start":{"line":16,"column":0},"end":{"line":16,"column":41}},"14":{"start":{"line":18,"column":0},"end":{"line":18,"column":46}},"15":{"start":{"line":19,"column":0},"end":{"line":19,"column":48}},"16":{"start":{"line":20,"column":0},"end":{"line":20,"column":34}},"17":{"start":{"line":22,"column":0},"end":{"line":22,"column":35}},"18":{"start":{"line":26,"column":4},"end":{"line":26,"column":32}},"19":{"start":{"line":27,"column":4},"end":{"line":27,"column":26}},"20":{"start":{"line":30,"column":4},"end":{"line":30,"column":30}},"21":{"start":{"line":31,"column":4},"end":{"line":31,"column":25}},"22":{"start":{"line":34,"column":4},"end":{"line":34,"column":20}},"23":{"start":{"line":36,"column":4},"end":{"line":36,"column":63}},"24":{"start":{"line":41,"column":4},"end":{"line":41,"column":29}},"25":{"start":{"line":42,"column":4},"end":{"line":44,"column":9}},"26":{"start":{"line":43,"column":6},"end":{"line":43,"column":36}},"27":{"start":{"line":46,"column":4},"end":{"line":48,"column":5}},"28":{"start":{"line":47,"column":6},"end":{"line":47,"column":55}},"29":{"start":{"line":50,"column":4},"end":{"line":50,"column":16}},"30":{"start":{"line":51,"column":4},"end":{"line":51,"column":18}},"31":{"start":{"line":53,"column":4},"end":{"line":64,"column":10}},"32":{"start":{"line":54,"column":6},"end":{"line":54,"column":19}},"33":{"start":{"line":55,"column":6},"end":{"line":55,"column":31}},"34":{"start":{"line":57,"column":6},"end":{"line":63,"column":7}},"35":{"start":{"line":58,"column":8},"end":{"line":58,"column":39}},"36":{"start":{"line":59,"column":8},"end":{"line":59,"column":18}},"37":{"start":{"line":60,"column":8},"end":{"line":60,"column":53}},"38":{"start":{"line":62,"column":8},"end":{"line":62,"column":12}},"39":{"start":{"line":68,"column":4},"end":{"line":68,"column":34}},"40":{"start":{"line":70,"column":4},"end":{"line":72,"column":6}},"41":{"start":{"line":71,"column":6},"end":{"line":71,"column":21}},"42":{"start":{"line":75,"column":4},"end":{"line":80,"column":6}},"43":{"start":{"line":76,"column":6},"end":{"line":78,"column":7}},"44":{"start":{"line":77,"column":8},"end":{"line":77,"column":47}},"45":{"start":{"line":79,"column":6},"end":{"line":79,"column":10}},"46":{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},"47":{"start":{"line":85,"column":6},"end":{"line":85,"column":12}},"48":{"start":{"line":88,"column":4},"end":{"line":88,"column":29}},"49":{"start":{"line":89,"column":4},"end":{"line":89,"column":20}},"50":{"start":{"line":90,"column":4},"end":{"line":90,"column":45}},"51":{"start":{"line":90,"column":37},"end":{"line":90,"column":44}},"52":{"start":{"line":91,"column":4},"end":{"line":91,"column":42}},"53":{"start":{"line":91,"column":36},"end":{"line":91,"column":41}},"54":{"start":{"line":92,"column":4},"end":{"line":92,"column":58}},"55":{"start":{"line":92,"column":46},"end":{"line":92,"column":57}},"56":{"start":{"line":93,"column":4},"end":{"line":93,"column":76}},"57":{"start":{"line":93,"column":50},"end":{"line":93,"column":75}},"58":{"start":{"line":95,"column":4},"end":{"line":124,"column":6}},"59":{"start":{"line":96,"column":14},"end":{"line":98,"column":12}},"60":{"start":{"line":97,"column":8},"end":{"line":97,"column":36}},"61":{"start":{"line":99,"column":22},"end":{"line":118,"column":8}},"62":{"start":{"line":101,"column":8},"end":{"line":101,"column":36}},"63":{"start":{"line":102,"column":8},"end":{"line":104,"column":10}},"64":{"start":{"line":103,"column":10},"end":{"line":103,"column":55}},"65":{"start":{"line":103,"column":37},"end":{"line":103,"column":54}},"66":{"start":{"line":106,"column":8},"end":{"line":117,"column":10}},"67":{"start":{"line":110,"column":10},"end":{"line":112,"column":11}},"68":{"start":{"line":111,"column":12},"end":{"line":111,"column":44}},"69":{"start":{"line":113,"column":10},"end":{"line":115,"column":12}},"70":{"start":{"line":114,"column":12},"end":{"line":114,"column":41}},"71":{"start":{"line":116,"column":10},"end":{"line":116,"column":14}},"72":{"start":{"line":120,"column":6},"end":{"line":120,"column":22}},"73":{"start":{"line":121,"column":6},"end":{"line":123,"column":7}},"74":{"start":{"line":122,"column":8},"end":{"line":122,"column":22}},"75":{"start":{"line":128,"column":4},"end":{"line":128,"column":42}},"76":{"start":{"line":129,"column":4},"end":{"line":131,"column":5}},"77":{"start":{"line":130,"column":6},"end":{"line":130,"column":22}},"78":{"start":{"line":133,"column":4},"end":{"line":133,"column":65}},"79":{"start":{"line":137,"column":4},"end":{"line":137,"column":68}},"80":{"start":{"line":137,"column":58},"end":{"line":137,"column":67}},"81":{"start":{"line":141,"column":4},"end":{"line":143,"column":5}},"82":{"start":{"line":142,"column":6},"end":{"line":142,"column":12}},"83":{"start":{"line":145,"column":4},"end":{"line":155,"column":6}},"84":{"start":{"line":146,"column":6},"end":{"line":154,"column":10}},"85":{"start":{"line":147,"column":22},"end":{"line":147,"column":50}},"86":{"start":{"line":150,"column":10},"end":{"line":153,"column":12}},"87":{"start":{"line":156,"column":4},"end":{"line":156,"column":18}},"88":{"start":{"line":161,"column":4},"end":{"line":161,"column":45}},"89":{"start":{"line":163,"column":4},"end":{"line":165,"column":5}},"90":{"start":{"line":164,"column":6},"end":{"line":164,"column":17}},"91":{"start":{"line":168,"column":4},"end":{"line":170,"column":5}},"92":{"start":{"line":169,"column":6},"end":{"line":169,"column":38}},"93":{"start":{"line":172,"column":4},"end":{"line":172,"column":43}},"94":{"start":{"line":174,"column":4},"end":{"line":176,"column":5}},"95":{"start":{"line":175,"column":6},"end":{"line":175,"column":17}},"96":{"start":{"line":178,"column":4},"end":{"line":178,"column":20}},"97":{"start":{"line":179,"column":4},"end":{"line":179,"column":18}},"98":{"start":{"line":180,"column":4},"end":{"line":188,"column":6}},"99":{"start":{"line":181,"column":6},"end":{"line":187,"column":7}},"100":{"start":{"line":182,"column":8},"end":{"line":182,"column":36}},"101":{"start":{"line":183,"column":8},"end":{"line":183,"column":27}},"102":{"start":{"line":185,"column":8},"end":{"line":185,"column":47}},"103":{"start":{"line":186,"column":8},"end":{"line":186,"column":25}},"104":{"start":{"line":190,"column":4},"end":{"line":190,"column":46}},"105":{"start":{"line":191,"column":4},"end":{"line":191,"column":45}},"106":{"start":{"line":195,"column":4},"end":{"line":195,"column":35}},"107":{"start":{"line":197,"column":4},"end":{"line":201,"column":6}},"108":{"start":{"line":198,"column":6},"end":{"line":198,"column":54}},"109":{"start":{"line":199,"column":6},"end":{"line":199,"column":47}},"110":{"start":{"line":200,"column":6},"end":{"line":200,"column":34}},"111":{"start":{"line":205,"column":4},"end":{"line":221,"column":6}},"112":{"start":{"line":207,"column":6},"end":{"line":217,"column":8}},"113":{"start":{"line":208,"column":8},"end":{"line":215,"column":9}},"114":{"start":{"line":209,"column":10},"end":{"line":209,"column":45}},"115":{"start":{"line":210,"column":15},"end":{"line":215,"column":9}},"116":{"start":{"line":211,"column":10},"end":{"line":214,"column":12}},"117":{"start":{"line":216,"column":8},"end":{"line":216,"column":12}},"118":{"start":{"line":219,"column":6},"end":{"line":219,"column":20}},"119":{"start":{"line":220,"column":6},"end":{"line":220,"column":10}},"120":{"start":{"line":225,"column":4},"end":{"line":225,"column":19}},"121":{"start":{"line":226,"column":4},"end":{"line":230,"column":6}},"122":{"start":{"line":227,"column":6},"end":{"line":227,"column":48}},"123":{"start":{"line":228,"column":6},"end":{"line":228,"column":41}},"124":{"start":{"line":229,"column":6},"end":{"line":229,"column":22}},"125":{"start":{"line":232,"column":4},"end":{"line":232,"column":29}},"126":{"start":{"line":237,"column":4},"end":{"line":237,"column":45}},"127":{"start":{"line":238,"column":4},"end":{"line":238,"column":51}},"128":{"start":{"line":239,"column":4},"end":{"line":241,"column":5}},"129":{"start":{"line":240,"column":6},"end":{"line":240,"column":39}},"130":{"start":{"line":245,"column":4},"end":{"line":245,"column":58}},"131":{"start":{"line":249,"column":4},"end":{"line":249,"column":58}},"132":{"start":{"line":262,"column":4},"end":{"line":262,"column":42}},"133":{"start":{"line":263,"column":4},"end":{"line":265,"column":5}},"134":{"start":{"line":264,"column":6},"end":{"line":264,"column":42}},"135":{"start":{"line":267,"column":4},"end":{"line":267,"column":32}},"136":{"start":{"line":269,"column":4},"end":{"line":269,"column":36}},"137":{"start":{"line":271,"column":4},"end":{"line":271,"column":12}},"138":{"start":{"line":275,"column":4},"end":{"line":275,"column":24}},"139":{"start":{"line":279,"column":4},"end":{"line":279,"column":25}},"140":{"start":{"line":283,"column":0},"end":{"line":283,"column":31}}},"branchMap":{"1":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"2":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":6},"end":{"line":57,"column":6}},{"start":{"line":57,"column":6},"end":{"line":57,"column":6}}]},"3":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":6},"end":{"line":76,"column":6}},{"start":{"line":76,"column":6},"end":{"line":76,"column":6}}]},"4":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":84,"column":4}},{"start":{"line":84,"column":4},"end":{"line":84,"column":4}}]},"5":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":8},"end":{"line":84,"column":22}},{"start":{"line":84,"column":26},"end":{"line":84,"column":45}}]},"6":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":10},"end":{"line":110,"column":10}},{"start":{"line":110,"column":10},"end":{"line":110,"column":10}}]},"7":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":6},"end":{"line":121,"column":6}},{"start":{"line":121,"column":6},"end":{"line":121,"column":6}}]},"8":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":4},"end":{"line":129,"column":4}},{"start":{"line":129,"column":4},"end":{"line":129,"column":4}}]},"9":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":4},"end":{"line":141,"column":4}},{"start":{"line":141,"column":4},"end":{"line":141,"column":4}}]},"10":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":4},"end":{"line":163,"column":4}},{"start":{"line":163,"column":4},"end":{"line":163,"column":4}}]},"11":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":4},"end":{"line":168,"column":4}},{"start":{"line":168,"column":4},"end":{"line":168,"column":4}}]},"12":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":4},"end":{"line":174,"column":4}},{"start":{"line":174,"column":4},"end":{"line":174,"column":4}}]},"13":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":6},"end":{"line":181,"column":6}},{"start":{"line":181,"column":6},"end":{"line":181,"column":6}}]},"14":{"line":200,"type":"binary-expr","locations":[{"start":{"line":200,"column":13},"end":{"line":200,"column":23}},{"start":{"line":200,"column":27},"end":{"line":200,"column":34}}]},"15":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":8},"end":{"line":208,"column":8}},{"start":{"line":208,"column":8},"end":{"line":208,"column":8}}]},"16":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":15},"end":{"line":210,"column":15}},{"start":{"line":210,"column":15},"end":{"line":210,"column":15}}]},"17":{"line":238,"type":"cond-expr","locations":[{"start":{"line":238,"column":29},"end":{"line":238,"column":46}},{"start":{"line":238,"column":49},"end":{"line":238,"column":50}}]},"18":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":4},"end":{"line":239,"column":4}},{"start":{"line":239,"column":4},"end":{"line":239,"column":4}}]},"19":{"line":239,"type":"binary-expr","locations":[{"start":{"line":239,"column":8},"end":{"line":239,"column":13}},{"start":{"line":239,"column":17},"end":{"line":239,"column":26}}]},"20":{"line":263,"type":"if","locations":[{"start":{"line":263,"column":4},"end":{"line":263,"column":4}},{"start":{"line":263,"column":4},"end":{"line":263,"column":4}}]}},"code":["'use strict'","","const debug = require('debug')","const each = require('async/each')","const eachSeries = require('async/eachSeries')","const waterfall = require('async/waterfall')","const map = require('async/map')","const debounce = require('lodash.debounce')","const uniqWith = require('lodash.uniqwith')","const find = require('lodash.find')","const values = require('lodash.values')","const groupBy = require('lodash.groupby')","const pullAllWith = require('lodash.pullallwith')","","const log = debug('bitswap:engine')","log.error = debug('bitswap:engine:error')","","const Message = require('../../types/message')","const Wantlist = require('../../types/wantlist')","const Ledger = require('./ledger')","","const MAX_MESSAGE_SIZE = 512 * 1024","","class DecisionEngine {","  constructor (blockstore, network) {","    this.blockstore = blockstore","    this.network = network","","    // A list of of ledgers by their partner id","    this.ledgerMap = new Map()","    this._running = false","","    // List of tasks to be processed","    this._tasks = []","","    this._outbox = debounce(this._processTasks.bind(this), 100)","  }","","  _sendBlocks (env, cb) {","    // split into messges of max 512 * 1024 bytes","    const blocks = env.blocks","    const total = blocks.reduce((acc, b) => {","      return acc + b.data.byteLength","    }, 0)","","    if (total < MAX_MESSAGE_SIZE) {","      return this._sendSafeBlocks(env.peer, blocks, cb)","    }","","    let size = 0","    let batch = []","","    eachSeries(blocks, (b, cb) => {","      batch.push(b)","      size += b.data.byteLength","","      if (size >= MAX_MESSAGE_SIZE) {","        const nextBatch = batch.slice()","        batch = []","        this._sendSafeBlocks(env.peer, nextBatch, cb)","      } else {","        cb()","      }","    }, cb)","  }","","  _sendSafeBlocks (peer, blocks, cb) {","    const msg = new Message(false)","","    blocks.forEach((b) => {","      msg.addBlock(b)","    })","","    // console.log('sending %s blocks', msg.blocks.size)","    this.network.sendMessage(peer, msg, (err) => {","      if (err) {","        log('sendblock error: %s', err.message)","      }","      cb()","    })","  }","","  _processTasks () {","    if (!this._running || !this._tasks.length) {","      return","    }","","    const tasks = this._tasks","    this._tasks = []","    const entries = tasks.map((t) => t.entry)","    const cids = entries.map((e) => e.cid)","    const uniqCids = uniqWith(cids, (a, b) => a.equals(b))","    const groupedTasks = groupBy(tasks, (task) => task.target.toB58String())","","    waterfall([","      (cb) => map(uniqCids, (cid, cb) => {","        this.blockstore.get(cid, cb)","      }, cb),","      (blocks, cb) => each(values(groupedTasks), (tasks, cb) => {","        // all tasks have the same target","        const peer = tasks[0].target","        const blockList = cids.map((cid) => {","          return find(blocks, (b) => b.cid.equals(cid))","        })","","        this._sendBlocks({","          peer: peer,","          blocks: blockList","        }, (err) => {","          if (err) {","            log.error('failed to send', err)","          }","          blockList.forEach((block) => {","            this.messageSent(peer, block)","          })","          cb()","        })","      })","    ], (err) => {","      this._tasks = []","      if (err) {","        log.error(err)","      }","    })","  }","","  wantlistForPeer (peerId) {","    const peerIdStr = peerId.toB58String()","    if (!this.ledgerMap.has(peerIdStr)) {","      return new Map()","    }","","    return this.ledgerMap.get(peerIdStr).wantlist.sortedEntries()","  }","","  peers () {","    return Array.from(this.ledgerMap.values()).map((l) => l.partner)","  }","","  receivedBlocks (cids) {","    if (!cids.length) {","      return","    }","    // Check all connected peers if they want the block we received","    this.ledgerMap.forEach((ledger) => {","      cids","        .map((cid) => ledger.wantlistContains(cid))","        .filter(Boolean)","        .forEach((entry) => {","          this._tasks.push({","            entry: entry,","            target: ledger.partner","          })","        })","    })","    this._outbox()","  }","","  // Handle incoming messages","  messageReceived (peerId, msg, cb) {","    const ledger = this._findOrCreate(peerId)","","    if (msg.empty) {","      return cb()","    }","","    // If the message was a full wantlist clear the current one","    if (msg.full) {","      ledger.wantlist = new Wantlist()","    }","","    this._processBlocks(msg.blocks, ledger)","","    if (msg.wantlist.size === 0) {","      return cb()","    }","","    let cancels = []","    let wants = []","    msg.wantlist.forEach((entry) => {","      if (entry.cancel) {","        ledger.cancelWant(entry.cid)","        cancels.push(entry)","      } else {","        ledger.wants(entry.cid, entry.priority)","        wants.push(entry)","      }","    })","","    this._cancelWants(ledger, peerId, cancels)","    this._addWants(ledger, peerId, wants, cb)","  }","","  _cancelWants (ledger, peerId, entries) {","    const id = peerId.toB58String()","","    pullAllWith(this._tasks, entries, (t, e) => {","      const sameTarget = t.target.toB58String() === id","      const sameCid = t.entry.cid.equals(e.cid)","      return sameTarget && sameCid","    })","  }","","  _addWants (ledger, peerId, entries, cb) {","    each(entries, (entry, cb) => {","      // If we already have the block, serve it","      this.blockstore.has(entry.cid, (err, exists) => {","        if (err) {","          log.error('failed existence check')","        } else if (exists) {","          this._tasks.push({","            entry: entry.entry,","            target: peerId","          })","        }","        cb()","      })","    }, () => {","      this._outbox()","      cb()","    })","  }","","  _processBlocks (blocks, ledger, callback) {","    const cids = []","    blocks.forEach((b, cidStr) => {","      log('got block (%s bytes)', b.data.length)","      ledger.receivedBytes(b.data.length)","      cids.push(b.cid)","    })","","    this.receivedBlocks(cids)","  }","","  // Clear up all accounting things after message was sent","  messageSent (peerId, block) {","    const ledger = this._findOrCreate(peerId)","    ledger.sentBytes(block ? block.data.length : 0)","    if (block && block.cid) {","      ledger.wantlist.remove(block.cid)","    }","  }","","  numBytesSentTo (peerId) {","    return this._findOrCreate(peerId).accounting.bytesSent","  }","","  numBytesReceivedFrom (peerId) {","    return this._findOrCreate(peerId).accounting.bytesRecv","  }","","  peerDisconnected (peerId) {","    // if (this.ledgerMap.has(peerId.toB58String())) {","    //   this.ledgerMap.delete(peerId.toB58String())","    // }","    //","    // TODO: figure out how to remove all other references","    // in the peer request queue","  }","","  _findOrCreate (peerId) {","    const peerIdStr = peerId.toB58String()","    if (this.ledgerMap.has(peerIdStr)) {","      return this.ledgerMap.get(peerIdStr)","    }","","    const l = new Ledger(peerId)","","    this.ledgerMap.set(peerIdStr, l)","","    return l","  }","","  start () {","    this._running = true","  }","","  stop () {","    this._running = false","  }","}","","module.exports = DecisionEngine",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"15":1,"16":1,"18":1,"19":1,"20":1,"22":1,"26":0,"27":0,"30":0,"31":0,"34":0,"36":0,"41":0,"42":0,"43":0,"46":0,"47":0,"50":0,"51":0,"53":0,"54":0,"55":0,"57":0,"58":0,"59":0,"60":0,"62":0,"68":0,"70":0,"71":0,"75":0,"76":0,"77":0,"79":0,"84":0,"85":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"95":0,"96":0,"97":0,"99":0,"101":0,"102":0,"103":0,"106":0,"110":0,"111":0,"113":0,"114":0,"116":0,"120":0,"121":0,"122":0,"128":0,"129":0,"130":0,"133":0,"137":0,"141":0,"142":0,"145":0,"146":0,"147":0,"150":0,"156":0,"161":0,"163":0,"164":0,"168":0,"169":0,"172":0,"174":0,"175":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"185":0,"186":0,"190":0,"191":0,"195":0,"197":0,"198":0,"199":0,"200":0,"205":0,"207":0,"208":0,"209":0,"210":0,"211":0,"216":0,"219":0,"220":0,"225":0,"226":0,"227":0,"228":0,"229":0,"232":0,"237":0,"238":0,"239":0,"240":0,"245":0,"249":0,"262":0,"263":0,"264":0,"267":0,"269":0,"271":0,"275":0,"279":0,"283":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-bitswap/src/components/decision-engine/ledger.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-bitswap/src/components/decision-engine/ledger.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":14},"end":{"line":6,"column":23}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":12},"end":{"line":19,"column":16}}},"3":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":16},"end":{"line":25,"column":20}}},"4":{"name":"(anonymous_4)","line":31,"loc":{"start":{"line":31,"column":8},"end":{"line":31,"column":24}}},"5":{"name":"(anonymous_5)","line":35,"loc":{"start":{"line":35,"column":13},"end":{"line":35,"column":19}}},"6":{"name":"(anonymous_6)","line":39,"loc":{"start":{"line":39,"column":19},"end":{"line":39,"column":25}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":48}},"2":{"start":{"line":7,"column":4},"end":{"line":7,"column":25}},"3":{"start":{"line":8,"column":4},"end":{"line":8,"column":34}},"4":{"start":{"line":10,"column":4},"end":{"line":10,"column":26}},"5":{"start":{"line":11,"column":4},"end":{"line":11,"column":31}},"6":{"start":{"line":13,"column":4},"end":{"line":16,"column":5}},"7":{"start":{"line":20,"column":4},"end":{"line":20,"column":24}},"8":{"start":{"line":21,"column":4},"end":{"line":21,"column":46}},"9":{"start":{"line":22,"column":4},"end":{"line":22,"column":34}},"10":{"start":{"line":26,"column":4},"end":{"line":26,"column":24}},"11":{"start":{"line":27,"column":4},"end":{"line":27,"column":46}},"12":{"start":{"line":28,"column":4},"end":{"line":28,"column":34}},"13":{"start":{"line":32,"column":4},"end":{"line":32,"column":36}},"14":{"start":{"line":36,"column":4},"end":{"line":36,"column":29}},"15":{"start":{"line":40,"column":4},"end":{"line":40,"column":38}},"16":{"start":{"line":44,"column":0},"end":{"line":44,"column":23}}},"branchMap":{},"code":["'use strict'","","const Wantlist = require('../../types/wantlist')","","class Ledger {","  constructor (peerId) {","    this.partner = peerId","    this.wantlist = new Wantlist()","","    this.exchangeCount = 0","    this.sentToPeer = new Map()","","    this.accounting = {","      bytesSent: 0,","      bytesRecv: 0","    }","  }","","  sentBytes (n) {","    this.exchangeCount++","    this.lastExchange = (new Date()).getTime()","    this.accounting.bytesSent += n","  }","","  receivedBytes (n) {","    this.exchangeCount++","    this.lastExchange = (new Date()).getTime()","    this.accounting.bytesRecv += n","  }","","  wants (cid, priority) {","    this.wantlist.add(cid, priority)","  }","","  cancelWant (cid) {","    this.wantlist.remove(cid)","  }","","  wantlistContains (cid) {","    return this.wantlist.contains(cid)","  }","}","","module.exports = Ledger",""],"l":{"3":1,"7":0,"8":0,"10":0,"11":0,"13":0,"20":0,"21":0,"22":0,"26":0,"27":0,"28":0,"32":0,"36":0,"40":0,"44":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/stop.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/stop.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"noop","line":7,"loc":{"start":{"line":7,"column":27},"end":{"line":7,"column":44}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"2":{"start":{"line":5,"column":0},"end":{"line":40,"column":1}},"3":{"start":{"line":6,"column":2},"end":{"line":39,"column":3}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":46}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":20}},"6":{"start":{"line":10,"column":4},"end":{"line":18,"column":5}},"7":{"start":{"line":11,"column":6},"end":{"line":14,"column":7}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":31}},"9":{"start":{"line":13,"column":8},"end":{"line":13,"column":28}},"10":{"start":{"line":15,"column":6},"end":{"line":15,"column":26}},"11":{"start":{"line":16,"column":6},"end":{"line":16,"column":23}},"12":{"start":{"line":17,"column":6},"end":{"line":17,"column":16}},"13":{"start":{"line":20,"column":4},"end":{"line":22,"column":5}},"14":{"start":{"line":21,"column":6},"end":{"line":21,"column":82}},"15":{"start":{"line":24,"column":4},"end":{"line":24,"column":21}},"16":{"start":{"line":25,"column":4},"end":{"line":25,"column":34}},"17":{"start":{"line":26,"column":4},"end":{"line":26,"column":24}},"18":{"start":{"line":28,"column":4},"end":{"line":38,"column":12}},"19":{"start":{"line":30,"column":8},"end":{"line":34,"column":9}},"20":{"start":{"line":31,"column":10},"end":{"line":31,"column":31}},"21":{"start":{"line":33,"column":10},"end":{"line":33,"column":14}},"22":{"start":{"line":36,"column":14},"end":{"line":36,"column":34}},"23":{"start":{"line":37,"column":14},"end":{"line":37,"column":34}}},"branchMap":{"1":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":15},"end":{"line":7,"column":23}},{"start":{"line":7,"column":27},"end":{"line":7,"column":46}}]},"2":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":6},"end":{"line":11,"column":6}},{"start":{"line":11,"column":6},"end":{"line":11,"column":6}}]},"3":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]},"4":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":30,"column":8}},{"start":{"line":30,"column":8},"end":{"line":30,"column":8}}]}},"code":["'use strict'","","const series = require('async/series')","","module.exports = (self) => {","  return (callback) => {","    callback = callback || function noop () {}","    self.log('stop')","","    const done = (err) => {","      if (err) {","        self.emit('error', err)","        return callback(err)","      }","      self.state.stopped()","      self.emit('stop')","      callback()","    }","","    if (self.state.state() !== 'running') {","      return done(new Error('Not able to stop from state: ' + self.state.state()))","    }","","    self.state.stop()","    self._blockService.goOffline()","    self._bitswap.stop()","","    series([","      (cb) => {","        if (self._options.EXPERIMENTAL.pubsub) {","          self._pubsub.stop(cb)","        } else {","          cb()","        }","      },","      (cb) => self.libp2p.stop(cb),","      (cb) => self._repo.close(cb)","    ], done)","  }","}",""],"l":{"3":1,"5":1,"6":0,"7":0,"8":0,"10":0,"11":0,"12":0,"13":0,"15":0,"16":0,"17":0,"20":0,"21":0,"24":0,"25":0,"26":0,"28":0,"30":0,"31":0,"33":0,"36":0,"37":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/is-online.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/is-online.js","s":{"1":1,"2":0,"3":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"isOnline","line":3,"loc":{"start":{"line":3,"column":17},"end":{"line":3,"column":42}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":7,"column":1}},"2":{"start":{"line":4,"column":2},"end":{"line":6,"column":3}},"3":{"start":{"line":5,"column":4},"end":{"line":5,"column":53}}},"branchMap":{"1":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":19},"end":{"line":5,"column":32}},{"start":{"line":5,"column":36},"end":{"line":5,"column":52}}]}},"code":["'use strict'","","module.exports = function isOnline (self) {","  return () => {","    return Boolean(self._bitswap && self._libp2pNode)","  }","}",""],"l":{"3":1,"4":0,"5":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/version.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/version.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"version","line":6,"loc":{"start":{"line":6,"column":17},"end":{"line":6,"column":41}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":44}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":42}},"3":{"start":{"line":6,"column":0},"end":{"line":19,"column":1}},"4":{"start":{"line":7,"column":2},"end":{"line":18,"column":4}},"5":{"start":{"line":8,"column":4},"end":{"line":11,"column":5}},"6":{"start":{"line":9,"column":6},"end":{"line":9,"column":21}},"7":{"start":{"line":10,"column":6},"end":{"line":10,"column":15}},"8":{"start":{"line":13,"column":4},"end":{"line":17,"column":6}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":8,"column":4}},{"start":{"line":8,"column":4},"end":{"line":8,"column":4}}]}},"code":["'use strict'","","const pkg = require('../../../package.json')","const promisify = require('promisify-es6')","","module.exports = function version (self) {","  return promisify((opts, callback) => {","    if (typeof opts === 'function') {","      callback = opts","      opts = {}","    }","","    callback(null, {","      version: pkg.version,","      repo: '',","      commit: ''","    })","  })","}",""],"l":{"3":1,"4":1,"6":1,"7":0,"8":0,"9":0,"10":0,"13":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/id.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/id.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"id","line":5,"loc":{"start":{"line":5,"column":17},"end":{"line":5,"column":36}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"2":{"start":{"line":5,"column":0},"end":{"line":22,"column":1}},"3":{"start":{"line":6,"column":2},"end":{"line":21,"column":4}},"4":{"start":{"line":7,"column":4},"end":{"line":10,"column":5}},"5":{"start":{"line":8,"column":6},"end":{"line":8,"column":21}},"6":{"start":{"line":9,"column":6},"end":{"line":9,"column":15}},"7":{"start":{"line":12,"column":4},"end":{"line":20,"column":7}},"8":{"start":{"line":12,"column":23},"end":{"line":20,"column":6}},"9":{"start":{"line":16,"column":44},"end":{"line":16,"column":57}}},"branchMap":{"1":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":4},"end":{"line":7,"column":4}},{"start":{"line":7,"column":4},"end":{"line":7,"column":4}}]}},"code":["'use strict'","","const promisify = require('promisify-es6')","","module.exports = function id (self) {","  return promisify((opts, callback) => {","    if (typeof opts === 'function') {","      callback = opts","      opts = {}","    }","","    setImmediate(() => callback(null, {","      id: self._peerInfo.id.toB58String(),","      publicKey: self._peerInfo.id.pubKey.bytes.toString('base64'),","      addresses: self._peerInfo.multiaddrs","                               .map((ma) => ma.toString())","                               .sort(),","      agentVersion: 'js-ipfs',","      protocolVersion: '9000'","    }))","  })","}",""],"l":{"3":1,"5":1,"6":0,"7":0,"8":0,"9":0,"12":0,"16":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/repo.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/repo.js","s":{"1":1,"2":0,"3":0,"4":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"repo","line":3,"loc":{"start":{"line":3,"column":17},"end":{"line":3,"column":38}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":8},"end":{"line":13,"column":20}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":17,"column":1}},"2":{"start":{"line":4,"column":2},"end":{"line":16,"column":3}},"3":{"start":{"line":10,"column":6},"end":{"line":10,"column":38}},"4":{"start":{"line":15,"column":16},"end":{"line":15,"column":31}}},"branchMap":{},"code":["'use strict'","","module.exports = function repo (self) {","  return {","    init: (bits, empty, callback) => {","      // 1. check if repo already exists","    },","","    version: (callback) => {","      self._repo.version.get(callback)","    },","","    gc: function () {},","","    path: () => self._repo.path","  }","}",""],"l":{"3":1,"4":0,"10":0,"15":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/init.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/init.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"init","line":10,"loc":{"start":{"line":10,"column":17},"end":{"line":10,"column":38}}},"2":{"name":"(anonymous_2)","line":37,"loc":{"start":{"line":37,"column":27},"end":{"line":37,"column":39}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":44}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":42}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":37}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":49}},"6":{"start":{"line":10,"column":0},"end":{"line":94,"column":1}},"7":{"start":{"line":11,"column":2},"end":{"line":93,"column":3}},"8":{"start":{"line":12,"column":4},"end":{"line":15,"column":5}},"9":{"start":{"line":13,"column":6},"end":{"line":13,"column":21}},"10":{"start":{"line":14,"column":6},"end":{"line":14,"column":15}},"11":{"start":{"line":17,"column":4},"end":{"line":26,"column":5}},"12":{"start":{"line":18,"column":6},"end":{"line":21,"column":7}},"13":{"start":{"line":19,"column":8},"end":{"line":19,"column":31}},"14":{"start":{"line":20,"column":8},"end":{"line":20,"column":28}},"15":{"start":{"line":23,"column":6},"end":{"line":23,"column":30}},"16":{"start":{"line":24,"column":6},"end":{"line":24,"column":23}},"17":{"start":{"line":25,"column":6},"end":{"line":25,"column":25}},"18":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"19":{"start":{"line":29,"column":6},"end":{"line":29,"column":82}},"20":{"start":{"line":32,"column":4},"end":{"line":32,"column":21}},"21":{"start":{"line":33,"column":4},"end":{"line":33,"column":20}},"22":{"start":{"line":35,"column":4},"end":{"line":35,"column":44}},"23":{"start":{"line":36,"column":4},"end":{"line":36,"column":41}},"24":{"start":{"line":37,"column":4},"end":{"line":37,"column":41}},"25":{"start":{"line":39,"column":4},"end":{"line":41,"column":63}},"26":{"start":{"line":43,"column":4},"end":{"line":92,"column":12}},"27":{"start":{"line":45,"column":14},"end":{"line":45,"column":35}},"28":{"start":{"line":47,"column":8},"end":{"line":47,"column":40}},"29":{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},"30":{"start":{"line":49,"column":10},"end":{"line":49,"column":53}},"31":{"start":{"line":53,"column":8},"end":{"line":53,"column":69}},"32":{"start":{"line":54,"column":8},"end":{"line":54,"column":58}},"33":{"start":{"line":55,"column":8},"end":{"line":55,"column":44}},"34":{"start":{"line":58,"column":8},"end":{"line":58,"column":38}},"35":{"start":{"line":59,"column":8},"end":{"line":62,"column":9}},"36":{"start":{"line":63,"column":8},"end":{"line":63,"column":24}},"37":{"start":{"line":64,"column":8},"end":{"line":64,"column":60}},"38":{"start":{"line":66,"column":8},"end":{"line":66,"column":35}},"39":{"start":{"line":68,"column":17},"end":{"line":68,"column":36}},"40":{"start":{"line":70,"column":8},"end":{"line":70,"column":31}},"41":{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},"42":{"start":{"line":72,"column":10},"end":{"line":72,"column":31}},"43":{"start":{"line":75,"column":8},"end":{"line":78,"column":9}},"44":{"start":{"line":77,"column":18},"end":{"line":77,"column":51}},"45":{"start":{"line":80,"column":8},"end":{"line":82,"column":9}},"46":{"start":{"line":81,"column":10},"end":{"line":81,"column":66}},"47":{"start":{"line":81,"column":29},"end":{"line":81,"column":65}},"48":{"start":{"line":84,"column":8},"end":{"line":90,"column":10}},"49":{"start":{"line":85,"column":10},"end":{"line":87,"column":11}},"50":{"start":{"line":86,"column":12},"end":{"line":86,"column":26}},"51":{"start":{"line":89,"column":10},"end":{"line":89,"column":24}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":12,"column":4}},{"start":{"line":12,"column":4},"end":{"line":12,"column":4}}]},"2":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":6},"end":{"line":18,"column":6}},{"start":{"line":18,"column":6},"end":{"line":18,"column":6}}]},"3":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":28,"column":4}},{"start":{"line":28,"column":4},"end":{"line":28,"column":4}}]},"4":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":21},"end":{"line":35,"column":35}},{"start":{"line":35,"column":39},"end":{"line":35,"column":44}}]},"5":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":16},"end":{"line":36,"column":33}},{"start":{"line":36,"column":37},"end":{"line":36,"column":41}}]},"6":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":15},"end":{"line":37,"column":23}},{"start":{"line":37,"column":27},"end":{"line":37,"column":41}}]},"7":{"line":39,"type":"cond-expr","locations":[{"start":{"line":40,"column":8},"end":{"line":40,"column":60}},{"start":{"line":41,"column":8},"end":{"line":41,"column":63}}]},"8":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":8},"end":{"line":48,"column":8}},{"start":{"line":48,"column":8},"end":{"line":48,"column":8}}]},"9":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":8},"end":{"line":71,"column":8}},{"start":{"line":71,"column":8},"end":{"line":71,"column":8}}]},"10":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":8},"end":{"line":80,"column":8}},{"start":{"line":80,"column":8},"end":{"line":80,"column":8}}]},"11":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":10},"end":{"line":85,"column":10}},{"start":{"line":85,"column":10},"end":{"line":85,"column":10}}]}},"code":["'use strict'","","const peerId = require('peer-id')","const waterfall = require('async/waterfall')","const parallel = require('async/parallel')","const isNode = require('detect-node')","","const addDefaultAssets = require('./init-assets')","","module.exports = function init (self) {","  return (opts, callback) => {","    if (typeof opts === 'function') {","      callback = opts","      opts = {}","    }","","    const done = (err, res) => {","      if (err) {","        self.emit('error', err)","        return callback(err)","      }","","      self.state.initialized()","      self.emit('init')","      callback(null, res)","    }","","    if (self.state.state() !== 'uninitalized') {","      return done(new Error('Not able to init from state: ' + self.state.state()))","    }","","    self.state.init()","    self.log('init')","","    opts.emptyRepo = opts.emptyRepo || false","    opts.bits = Number(opts.bits) || 2048","    opts.log = opts.log || function () {}","","    const config = isNode","      ? require('../../init-files/default-config-node.json')","      : require('../../init-files/default-config-browser.json')","","    waterfall([","      // Verify repo does not yet exist.","      (cb) => self._repo.exists(cb),","      (exists, cb) => {","        self.log('repo exists?', exists)","        if (exists === true) {","          return cb(new Error('repo already exists'))","        }","","        // Generate peer identity keypair + transform to desired format + add to config.","        opts.log(`generating ${opts.bits}-bit RSA keypair...`, false)","        self.log('generating peer id: %s bits', opts.bits)","        peerId.create({bits: opts.bits}, cb)","      },","      (keys, cb) => {","        self.log('identity generated')","        config.Identity = {","          PeerID: keys.toB58String(),","          PrivKey: keys.privKey.bytes.toString('base64')","        }","        opts.log('done')","        opts.log('peer identity: ' + config.Identity.PeerID)","","        self._repo.init(config, cb)","      },","      (_, cb) => self._repo.open(cb),","      (cb) => {","        self.log('repo opened')","        if (opts.emptyRepo) {","          return cb(null, true)","        }","","        const tasks = [","          // add empty unixfs dir object (go-ipfs assumes this exists)","          (cb) => self.object.new('unixfs-dir', cb)","        ]","","        if (typeof addDefaultAssets === 'function') {","          tasks.push((cb) => addDefaultAssets(self, opts.log, cb))","        }","","        parallel(tasks, (err) => {","          if (err) {","            return cb(err)","          }","","          cb(null, true)","        })","      }","    ], done)","  }","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"8":1,"10":1,"11":0,"12":0,"13":0,"14":0,"17":0,"18":0,"19":0,"20":0,"23":0,"24":0,"25":0,"28":0,"29":0,"32":0,"33":0,"35":0,"36":0,"37":0,"39":0,"43":0,"45":0,"47":0,"48":0,"49":0,"53":0,"54":0,"55":0,"58":0,"59":0,"63":0,"64":0,"66":0,"68":0,"70":0,"71":0,"72":0,"75":0,"77":0,"80":0,"81":0,"84":0,"85":0,"86":0,"89":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/init-assets.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/init-assets.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"addDefaultAssets","line":12,"loc":{"start":{"line":12,"column":17},"end":{"line":12,"column":65}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":24}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":28}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":55}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":33}},"7":{"start":{"line":12,"column":0},"end":{"line":55,"column":1}},"8":{"start":{"line":13,"column":2},"end":{"line":13,"column":73}},"9":{"start":{"line":14,"column":2},"end":{"line":14,"column":42}},"10":{"start":{"line":16,"column":2},"end":{"line":54,"column":3}},"11":{"start":{"line":19,"column":6},"end":{"line":19,"column":39}},"12":{"start":{"line":23,"column":6},"end":{"line":23,"column":66}},"13":{"start":{"line":24,"column":6},"end":{"line":26,"column":7}},"14":{"start":{"line":25,"column":8},"end":{"line":25,"column":14}},"15":{"start":{"line":28,"column":6},"end":{"line":31,"column":7}},"16":{"start":{"line":37,"column":6},"end":{"line":45,"column":7}},"17":{"start":{"line":38,"column":8},"end":{"line":38,"column":37}},"18":{"start":{"line":39,"column":8},"end":{"line":39,"column":13}},"19":{"start":{"line":40,"column":8},"end":{"line":40,"column":87}},"20":{"start":{"line":44,"column":8},"end":{"line":44,"column":13}},"21":{"start":{"line":48,"column":6},"end":{"line":50,"column":7}},"22":{"start":{"line":49,"column":8},"end":{"line":49,"column":28}},"23":{"start":{"line":52,"column":6},"end":{"line":52,"column":26}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":6},"end":{"line":24,"column":6}},{"start":{"line":24,"column":6},"end":{"line":24,"column":6}}]},"2":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":6},"end":{"line":37,"column":6}},{"start":{"line":37,"column":6},"end":{"line":37,"column":6}}]},"3":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":6},"end":{"line":48,"column":6}},{"start":{"line":48,"column":6},"end":{"line":48,"column":6}}]}},"code":["'use strict'","","const path = require('path')","const fs = require('fs')","const glob = require('glob')","const importer = require('ipfs-unixfs-engine').importer","const pull = require('pull-stream')","const file = require('pull-file')","// const mh = require('multihashes')","","// Add the default assets to the repo.","module.exports = function addDefaultAssets (self, log, callback) {","  const initDocsPath = path.join(__dirname, '../../init-files/init-docs')","  const index = __dirname.lastIndexOf('/')","","  pull(","    pull.values([initDocsPath]),","    pull.asyncMap((val, cb) => {","      glob(path.join(val, '/**/*'), cb)","    }),","    pull.flatten(),","    pull.map((element) => {","      const addPath = element.substring(index + 1, element.length)","      if (fs.statSync(element).isDirectory()) {","        return","      }","","      return {","        path: addPath,","        content: file(element)","      }","    }),","    // Filter out directories, which are undefined from above","    pull.filter(Boolean),","    importer(self._ipldResolver),","    pull.through((el) => {","      if (el.path === 'files/init-docs/docs') {","        log('to get started, enter:')","        log()","        log(`\\t jsipfs files cat /ipfs/QmPZ9gcCEpqKTo6aq61g2nXGUhM4iCL3ewB6LDXZCtioEB`)","        // TODO when we support pathing in unixfs-engine","        // const hash = mh.toB58String(el.multihash)","        // log(`\\t jsipfs files cat /ipfs/${hash}/readme`)","        log()","      }","    }),","    pull.collect((err) => {","      if (err) {","        return callback(err)","      }","","      callback(null, true)","    })","  )","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"12":1,"13":0,"14":0,"16":0,"19":0,"23":0,"24":0,"25":0,"28":0,"37":0,"38":0,"39":0,"40":0,"44":0,"48":0,"49":0,"52":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/index.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":59}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":59}}},"branchMap":{},"code":["'use strict'","","exports.importer = exports.Importer = require('./importer')","exports.exporter = exports.Exporter = require('./exporter')",""],"l":{"3":1,"4":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/importer/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/importer/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":20,"loc":{"start":{"line":20,"column":17},"end":{"line":20,"column":51}}},"2":{"name":"flush","line":75,"loc":{"start":{"line":75,"column":2},"end":{"line":75,"column":28}}},"3":{"name":"proceed","line":86,"loc":{"start":{"line":86,"column":4},"end":{"line":86,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":38}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":41}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":32}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":50}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":40}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":51}},"9":{"start":{"line":12,"column":0},"end":{"line":14,"column":1}},"10":{"start":{"line":16,"column":0},"end":{"line":18,"column":1}},"11":{"start":{"line":20,"column":0},"end":{"line":98,"column":1}},"12":{"start":{"line":21,"column":2},"end":{"line":21,"column":61}},"13":{"start":{"line":22,"column":2},"end":{"line":22,"column":43}},"14":{"start":{"line":23,"column":2},"end":{"line":23,"column":62}},"15":{"start":{"line":25,"column":2},"end":{"line":25,"column":17}},"16":{"start":{"line":26,"column":2},"end":{"line":26,"column":27}},"17":{"start":{"line":28,"column":2},"end":{"line":40,"column":3}},"18":{"start":{"line":31,"column":8},"end":{"line":31,"column":31}},"19":{"start":{"line":32,"column":8},"end":{"line":32,"column":56}},"20":{"start":{"line":32,"column":32},"end":{"line":32,"column":55}},"21":{"start":{"line":33,"column":8},"end":{"line":33,"column":30}},"22":{"start":{"line":37,"column":15},"end":{"line":37,"column":36}},"23":{"start":{"line":42,"column":2},"end":{"line":42,"column":62}},"24":{"start":{"line":44,"column":2},"end":{"line":44,"column":62}},"25":{"start":{"line":45,"column":2},"end":{"line":45,"column":48}},"26":{"start":{"line":46,"column":2},"end":{"line":46,"column":34}},"27":{"start":{"line":51,"column":2},"end":{"line":67,"column":5}},"28":{"start":{"line":56,"column":6},"end":{"line":56,"column":15}},"29":{"start":{"line":57,"column":6},"end":{"line":63,"column":7}},"30":{"start":{"line":58,"column":8},"end":{"line":62,"column":10}},"31":{"start":{"line":59,"column":10},"end":{"line":61,"column":11}},"32":{"start":{"line":60,"column":12},"end":{"line":60,"column":36}},"33":{"start":{"line":64,"column":6},"end":{"line":64,"column":17}},"34":{"start":{"line":69,"column":2},"end":{"line":73,"column":3}},"35":{"start":{"line":75,"column":2},"end":{"line":97,"column":3}},"36":{"start":{"line":76,"column":4},"end":{"line":76,"column":20}},"37":{"start":{"line":80,"column":4},"end":{"line":84,"column":5}},"38":{"start":{"line":81,"column":6},"end":{"line":81,"column":15}},"39":{"start":{"line":83,"column":6},"end":{"line":83,"column":34}},"40":{"start":{"line":86,"column":4},"end":{"line":96,"column":5}},"41":{"start":{"line":87,"column":6},"end":{"line":95,"column":8}},"42":{"start":{"line":88,"column":8},"end":{"line":92,"column":9}},"43":{"start":{"line":89,"column":10},"end":{"line":89,"column":43}},"44":{"start":{"line":90,"column":10},"end":{"line":90,"column":23}},"45":{"start":{"line":91,"column":10},"end":{"line":91,"column":16}},"46":{"start":{"line":93,"column":8},"end":{"line":93,"column":25}},"47":{"start":{"line":94,"column":8},"end":{"line":94,"column":28}}},"branchMap":{"1":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":6},"end":{"line":57,"column":6}},{"start":{"line":57,"column":6},"end":{"line":57,"column":6}}]},"2":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":80,"column":4}},{"start":{"line":80,"column":4},"end":{"line":80,"column":4}}]},"3":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":8},"end":{"line":88,"column":8}},{"start":{"line":88,"column":8},"end":{"line":88,"column":8}}]}},"code":["'use strict'","","const pause = require('pull-pause')","const pull = require('pull-stream')","const writable = require('pull-write')","const pushable = require('pull-pushable')","const assert = require('assert')","const setImmediate = require('async/setImmediate')","const DAGBuilder = require('../builder')","const createTreeBuilder = require('./tree-builder')","","const chunkers = {","  fixed: require('../chunker/fixed-size')","}","","const defaultOptions = {","  chunker: 'fixed'","}","","module.exports = function (ipldResolver, _options) {","  const options = Object.assign({}, defaultOptions, _options)","  const Chunker = chunkers[options.chunker]","  assert(Chunker, 'Unknkown chunker named ' + options.chunker)","","  let pending = 0","  const waitingPending = []","","  const entry = {","    sink: writable(","      (nodes, callback) => {","        pending += nodes.length","        nodes.forEach((node) => entry.source.push(node))","        setImmediate(callback)","      },","      null,","      1,","      (err) => entry.source.end(err)","    ),","    source: pushable()","  }","","  const dagStream = DAGBuilder(Chunker, ipldResolver, options)","","  const treeBuilder = createTreeBuilder(ipldResolver, options)","  const treeBuilderStream = treeBuilder.stream()","  const pausable = pause(() => {})","","  // TODO: transform this entry -> pausable -> <custom async transform> -> exit","  // into a generic NPM package named something like pull-pause-and-drain","","  pull(","    entry,","    pausable,","    dagStream,","    pull.map((node) => {","      pending--","      if (!pending) {","        process.nextTick(() => {","          while (waitingPending.length) {","            waitingPending.shift()()","          }","        })","      }","      return node","    }),","    treeBuilderStream","    )","","  return {","    sink: entry.sink,","    source: treeBuilderStream.source,","    flush: flush","  }","","  function flush (callback) {","    pausable.pause()","","    // wait until all the files entered were","    // transformed into DAG nodes","    if (!pending) {","      proceed()","    } else {","      waitingPending.push(proceed)","    }","","    function proceed () {","      treeBuilder.flush((err, hash) => {","        if (err) {","          treeBuilderStream.source.end(err)","          callback(err)","          return","        }","        pausable.resume()","        callback(null, hash)","      })","    }","  }","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"12":1,"16":1,"20":1,"21":0,"22":0,"23":0,"25":0,"26":0,"28":0,"31":0,"32":0,"33":0,"37":0,"42":0,"44":0,"45":0,"46":0,"51":0,"56":0,"57":0,"58":0,"59":0,"60":0,"64":0,"69":0,"75":1,"76":0,"80":0,"81":0,"83":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"93":0,"94":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/builder/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/builder/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":19,"loc":{"start":{"line":19,"column":17},"end":{"line":19,"column":60}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":58}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":36}},"4":{"start":{"line":7,"column":0},"end":{"line":11,"column":1}},"5":{"start":{"line":13,"column":0},"end":{"line":17,"column":1}},"6":{"start":{"line":19,"column":0},"end":{"line":32,"column":1}},"7":{"start":{"line":20,"column":2},"end":{"line":20,"column":53}},"8":{"start":{"line":21,"column":2},"end":{"line":21,"column":47}},"9":{"start":{"line":23,"column":2},"end":{"line":23,"column":61}},"10":{"start":{"line":25,"column":2},"end":{"line":25,"column":39}},"11":{"start":{"line":26,"column":2},"end":{"line":26,"column":40}},"12":{"start":{"line":27,"column":2},"end":{"line":27,"column":74}},"13":{"start":{"line":29,"column":2},"end":{"line":29,"column":73}},"14":{"start":{"line":31,"column":2},"end":{"line":31,"column":65}}},"branchMap":{},"code":["'use strict'","","const assert = require('assert')","const createBuildStream = require('./create-build-stream')","const Builder = require('./builder')","","const reducers = {","  flat: require('./flat'),","  balanced: require('./balanced'),","  trickle: require('./trickle')","}","","const defaultOptions = {","  strategy: 'balanced',","  highWaterMark: 100,","  reduceSingleLeafToSelf: false","}","","module.exports = function (Chunker, ipldResolver, _options) {","  assert(Chunker, 'Missing chunker creator function')","  assert(ipldResolver, 'Missing IPLD Resolver')","","  const options = Object.assign({}, defaultOptions, _options)","","  const strategyName = options.strategy","  const reducer = reducers[strategyName]","  assert(reducer, 'Unknown importer build strategy name: ' + strategyName)","","  const createStrategy = Builder(Chunker, ipldResolver, reducer, options)","","  return createBuildStream(createStrategy, ipldResolver, options)","}",""],"l":{"3":1,"4":1,"5":1,"7":1,"13":1,"19":1,"20":0,"21":0,"23":0,"25":0,"26":0,"27":0,"29":0,"31":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/builder/create-build-stream.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/builder/create-build-stream.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"createBuildStream","line":6,"loc":{"start":{"line":6,"column":17},"end":{"line":6,"column":84}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":45}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":39}},"3":{"start":{"line":6,"column":0},"end":{"line":20,"column":1}},"4":{"start":{"line":7,"column":2},"end":{"line":7,"column":31}},"5":{"start":{"line":9,"column":2},"end":{"line":14,"column":3}},"6":{"start":{"line":13,"column":13},"end":{"line":13,"column":28}},"7":{"start":{"line":16,"column":2},"end":{"line":19,"column":3}}},"branchMap":{},"code":["'use strict'","","const pullPushable = require('pull-pushable')","const pullWrite = require('pull-write')","","module.exports = function createBuildStream (createStrategy, ipldResolver, options) {","  const source = pullPushable()","","  const sink = pullWrite(","    createStrategy(source),","    null,","    options.highWaterMark,","    (err) => source.end(err)","  )","","  return {","    source: source,","    sink: sink","  }","}",""],"l":{"3":1,"4":1,"6":1,"7":0,"9":0,"13":0,"16":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/builder/builder.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/builder/builder.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":22,"loc":{"start":{"line":22,"column":17},"end":{"line":22,"column":81}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":9},"end":{"line":25,"column":27}}},"3":{"name":"(anonymous_3)","line":26,"loc":{"start":{"line":26,"column":11},"end":{"line":26,"column":32}}},"4":{"name":"createAndStoreDir","line":55,"loc":{"start":{"line":55,"column":2},"end":{"line":55,"column":46}}},"5":{"name":"createAndStoreFile","line":79,"loc":{"start":{"line":79,"column":2},"end":{"line":79,"column":47}}},"6":{"name":"onData","line":119,"loc":{"start":{"line":119,"column":8},"end":{"line":119,"column":31}}},"7":{"name":"ended","line":126,"loc":{"start":{"line":126,"column":8},"end":{"line":126,"column":26}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":37}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":37}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":39}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":42}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":44}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":36}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":27}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":34}},"10":{"start":{"line":14,"column":0},"end":{"line":14,"column":29}},"11":{"start":{"line":16,"column":0},"end":{"line":20,"column":1}},"12":{"start":{"line":22,"column":0},"end":{"line":146,"column":1}},"13":{"start":{"line":23,"column":2},"end":{"line":23,"column":54}},"14":{"start":{"line":25,"column":2},"end":{"line":53,"column":3}},"15":{"start":{"line":26,"column":4},"end":{"line":52,"column":5}},"16":{"start":{"line":27,"column":6},"end":{"line":51,"column":13}},"17":{"start":{"line":27,"column":35},"end":{"line":51,"column":7}},"18":{"start":{"line":28,"column":8},"end":{"line":39,"column":9}},"19":{"start":{"line":30,"column":10},"end":{"line":38,"column":12}},"20":{"start":{"line":31,"column":12},"end":{"line":33,"column":13}},"21":{"start":{"line":32,"column":14},"end":{"line":32,"column":28}},"22":{"start":{"line":34,"column":12},"end":{"line":36,"column":13}},"23":{"start":{"line":35,"column":14},"end":{"line":35,"column":31}},"24":{"start":{"line":37,"column":12},"end":{"line":37,"column":16}},"25":{"start":{"line":42,"column":8},"end":{"line":50,"column":10}},"26":{"start":{"line":43,"column":10},"end":{"line":45,"column":11}},"27":{"start":{"line":44,"column":12},"end":{"line":44,"column":26}},"28":{"start":{"line":46,"column":10},"end":{"line":48,"column":11}},"29":{"start":{"line":47,"column":12},"end":{"line":47,"column":29}},"30":{"start":{"line":49,"column":10},"end":{"line":49,"column":14}},"31":{"start":{"line":55,"column":2},"end":{"line":77,"column":3}},"32":{"start":{"line":59,"column":4},"end":{"line":59,"column":37}},"33":{"start":{"line":60,"column":4},"end":{"line":76,"column":6}},"34":{"start":{"line":61,"column":14},"end":{"line":61,"column":45}},"35":{"start":{"line":63,"column":8},"end":{"line":65,"column":34}},"36":{"start":{"line":65,"column":20},"end":{"line":65,"column":33}},"37":{"start":{"line":68,"column":6},"end":{"line":70,"column":7}},"38":{"start":{"line":69,"column":8},"end":{"line":69,"column":28}},"39":{"start":{"line":71,"column":6},"end":{"line":75,"column":8}},"40":{"start":{"line":79,"column":2},"end":{"line":145,"column":3}},"41":{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},"42":{"start":{"line":81,"column":6},"end":{"line":81,"column":48}},"43":{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},"44":{"start":{"line":85,"column":6},"end":{"line":85,"column":51}},"45":{"start":{"line":88,"column":4},"end":{"line":88,"column":79}},"46":{"start":{"line":90,"column":4},"end":{"line":90,"column":16}},"47":{"start":{"line":91,"column":4},"end":{"line":91,"column":17}},"48":{"start":{"line":93,"column":4},"end":{"line":144,"column":5}},"49":{"start":{"line":96,"column":24},"end":{"line":96,"column":41}},"50":{"start":{"line":97,"column":25},"end":{"line":97,"column":51}},"51":{"start":{"line":99,"column":8},"end":{"line":101,"column":10}},"52":{"start":{"line":100,"column":10},"end":{"line":100,"column":62}},"53":{"start":{"line":104,"column":8},"end":{"line":107,"column":9}},"54":{"start":{"line":106,"column":20},"end":{"line":106,"column":39}},"55":{"start":{"line":110,"column":8},"end":{"line":116,"column":9}},"56":{"start":{"line":120,"column":10},"end":{"line":120,"column":17}},"57":{"start":{"line":121,"column":10},"end":{"line":123,"column":11}},"58":{"start":{"line":122,"column":12},"end":{"line":122,"column":32}},"59":{"start":{"line":124,"column":10},"end":{"line":124,"column":25}},"60":{"start":{"line":127,"column":10},"end":{"line":132,"column":11}},"61":{"start":{"line":128,"column":12},"end":{"line":130,"column":13}},"62":{"start":{"line":129,"column":14},"end":{"line":129,"column":36}},"63":{"start":{"line":131,"column":12},"end":{"line":131,"column":32}},"64":{"start":{"line":133,"column":10},"end":{"line":133,"column":26}},"65":{"start":{"line":138,"column":8},"end":{"line":142,"column":9}},"66":{"start":{"line":139,"column":10},"end":{"line":139,"column":23}},"67":{"start":{"line":141,"column":10},"end":{"line":141,"column":34}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":28,"column":8}},{"start":{"line":28,"column":8},"end":{"line":28,"column":8}}]},"2":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":12},"end":{"line":31,"column":12}},{"start":{"line":31,"column":12},"end":{"line":31,"column":12}}]},"3":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":12},"end":{"line":34,"column":12}},{"start":{"line":34,"column":12},"end":{"line":34,"column":12}}]},"4":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":10},"end":{"line":43,"column":10}},{"start":{"line":43,"column":10},"end":{"line":43,"column":10}}]},"5":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":10},"end":{"line":46,"column":10}},{"start":{"line":46,"column":10},"end":{"line":46,"column":10}}]},"6":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":6},"end":{"line":68,"column":6}},{"start":{"line":68,"column":6},"end":{"line":68,"column":6}}]},"7":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":80,"column":4}},{"start":{"line":80,"column":4},"end":{"line":80,"column":4}}]},"8":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":84,"column":4}},{"start":{"line":84,"column":4},"end":{"line":84,"column":4}}]},"9":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":10},"end":{"line":121,"column":10}},{"start":{"line":121,"column":10},"end":{"line":121,"column":10}}]},"10":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":10},"end":{"line":127,"column":10}},{"start":{"line":127,"column":10},"end":{"line":127,"column":10}}]},"11":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":12},"end":{"line":128,"column":12}},{"start":{"line":128,"column":12},"end":{"line":128,"column":12}}]},"12":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":8},"end":{"line":138,"column":8}},{"start":{"line":138,"column":8},"end":{"line":138,"column":8}}]}},"code":["'use strict'","","const extend = require('deep-extend')","const UnixFS = require('ipfs-unixfs')","const pull = require('pull-stream')","const through = require('pull-through')","const parallel = require('async/parallel')","const waterfall = require('async/waterfall')","const dagPB = require('ipld-dag-pb')","const CID = require('cids')","","const reduce = require('./reduce')","","const DAGNode = dagPB.DAGNode","","const defaultOptions = {","  chunkerOptions: {","    maxChunkSize: 262144","  }","}","","module.exports = function (createChunker, ipldResolver, createReducer, _options) {","  const options = extend({}, defaultOptions, _options)","","  return function (source) {","    return function (items, cb) {","      parallel(items.map((item) => (cb) => {","        if (!item.content) {","          // item is a directory","          return createAndStoreDir(item, (err, node) => {","            if (err) {","              return cb(err)","            }","            if (node) {","              source.push(node)","            }","            cb()","          })","        }","","        // item is a file","        createAndStoreFile(item, (err, node) => {","          if (err) {","            return cb(err)","          }","          if (node) {","            source.push(node)","          }","          cb()","        })","      }), cb)","    }","  }","","  function createAndStoreDir (item, callback) {","    // 1. create the empty dir dag node","    // 2. write it to the dag store","","    const d = new UnixFS('directory')","    waterfall([","      (cb) => DAGNode.create(d.marshal(), cb),","      (node, cb) => {","        ipldResolver.put(node, {","          cid: new CID(node.multihash)","        }, (err) => cb(err, node))","      }","    ], (err, node) => {","      if (err) {","        return callback(err)","      }","      callback(null, {","        path: item.path,","        multihash: node.multihash,","        size: node.size","      })","    })","  }","","  function createAndStoreFile (file, callback) {","    if (Buffer.isBuffer(file.content)) {","      file.content = pull.values([file.content])","    }","","    if (typeof file.content !== 'function') {","      return callback(new Error('invalid content'))","    }","","    const reducer = createReducer(reduce(file, ipldResolver, options), options)","","    let previous","    let count = 0","","    pull(","      file.content,","      createChunker(options.chunkerOptions),","      pull.map(chunk => new Buffer(chunk)),","      pull.map(buffer => new UnixFS('file', buffer)),","      pull.asyncMap((fileNode, callback) => {","        DAGNode.create(fileNode.marshal(), (err, node) => {","          callback(err, { DAGNode: node, fileNode: fileNode })","        })","      }),","      pull.asyncMap((leaf, callback) => {","        ipldResolver.put(leaf.DAGNode, {","          cid: new CID(leaf.DAGNode.multihash)","        }, (err) => callback(err, leaf)","        )","      }),","      pull.map((leaf) => {","        return {","          path: file.path,","          multihash: leaf.DAGNode.multihash,","          size: leaf.DAGNode.size,","          leafSize: leaf.fileNode.fileSize(),","          name: ''","        }","      }),","      through( // mark as single node if only one single node","        function onData (data) {","          count++","          if (previous) {","            this.queue(previous)","          }","          previous = data","        },","        function ended () {","          if (previous) {","            if (count === 1) {","              previous.single = true","            }","            this.queue(previous)","          }","          this.queue(null)","        }","      ),","      reducer,","      pull.collect((err, roots) => {","        if (err) {","          callback(err)","        } else {","          callback(null, roots[0])","        }","      })","    )","  }","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"12":1,"14":1,"16":1,"22":1,"23":0,"25":0,"26":0,"27":0,"28":0,"30":0,"31":0,"32":0,"34":0,"35":0,"37":0,"42":0,"43":0,"44":0,"46":0,"47":0,"49":0,"55":1,"59":0,"60":0,"61":0,"63":0,"65":0,"68":0,"69":0,"71":0,"79":1,"80":0,"81":0,"84":0,"85":0,"88":0,"90":0,"91":0,"93":0,"96":0,"97":0,"99":0,"100":0,"104":0,"106":0,"110":0,"120":0,"121":0,"122":0,"124":0,"127":0,"128":0,"129":0,"131":0,"133":0,"138":0,"139":0,"141":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs/src/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs/src/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0,0,0,0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"Data","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":27}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":44}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":46}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"4":{"start":{"line":9,"column":0},"end":{"line":16,"column":1}},"5":{"start":{"line":18,"column":0},"end":{"line":79,"column":1}},"6":{"start":{"line":19,"column":2},"end":{"line":21,"column":3}},"7":{"start":{"line":20,"column":4},"end":{"line":20,"column":31}},"8":{"start":{"line":22,"column":2},"end":{"line":24,"column":3}},"9":{"start":{"line":23,"column":4},"end":{"line":23,"column":54}},"10":{"start":{"line":26,"column":2},"end":{"line":26,"column":18}},"11":{"start":{"line":27,"column":2},"end":{"line":27,"column":18}},"12":{"start":{"line":28,"column":2},"end":{"line":28,"column":22}},"13":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"14":{"start":{"line":31,"column":4},"end":{"line":31,"column":30}},"15":{"start":{"line":34,"column":2},"end":{"line":36,"column":3}},"16":{"start":{"line":35,"column":4},"end":{"line":35,"column":36}},"17":{"start":{"line":39,"column":2},"end":{"line":48,"column":3}},"18":{"start":{"line":40,"column":4},"end":{"line":40,"column":15}},"19":{"start":{"line":41,"column":4},"end":{"line":43,"column":6}},"20":{"start":{"line":42,"column":6},"end":{"line":42,"column":17}},"21":{"start":{"line":44,"column":4},"end":{"line":46,"column":5}},"22":{"start":{"line":45,"column":6},"end":{"line":45,"column":24}},"23":{"start":{"line":47,"column":4},"end":{"line":47,"column":14}},"24":{"start":{"line":51,"column":2},"end":{"line":78,"column":3}},"25":{"start":{"line":52,"column":4},"end":{"line":52,"column":12}},"26":{"start":{"line":54,"column":4},"end":{"line":63,"column":5}},"27":{"start":{"line":55,"column":18},"end":{"line":55,"column":49}},"28":{"start":{"line":55,"column":50},"end":{"line":55,"column":55}},"29":{"start":{"line":56,"column":24},"end":{"line":56,"column":61}},"30":{"start":{"line":56,"column":62},"end":{"line":56,"column":67}},"31":{"start":{"line":57,"column":19},"end":{"line":57,"column":51}},"32":{"start":{"line":57,"column":52},"end":{"line":57,"column":57}},"33":{"start":{"line":58,"column":23},"end":{"line":58,"column":59}},"34":{"start":{"line":58,"column":60},"end":{"line":58,"column":65}},"35":{"start":{"line":59,"column":22},"end":{"line":59,"column":57}},"36":{"start":{"line":59,"column":58},"end":{"line":59,"column":63}},"37":{"start":{"line":60,"column":37},"end":{"line":60,"column":74}},"38":{"start":{"line":60,"column":75},"end":{"line":60,"column":80}},"39":{"start":{"line":62,"column":8},"end":{"line":62,"column":54}},"40":{"start":{"line":64,"column":4},"end":{"line":64,"column":34}},"41":{"start":{"line":66,"column":4},"end":{"line":68,"column":5}},"42":{"start":{"line":67,"column":6},"end":{"line":67,"column":26}},"43":{"start":{"line":70,"column":4},"end":{"line":77,"column":6}},"44":{"start":{"line":82,"column":0},"end":{"line":90,"column":1}},"45":{"start":{"line":83,"column":2},"end":{"line":83,"column":46}},"46":{"start":{"line":84,"column":2},"end":{"line":86,"column":3}},"47":{"start":{"line":85,"column":4},"end":{"line":85,"column":28}},"48":{"start":{"line":87,"column":2},"end":{"line":87,"column":57}},"49":{"start":{"line":88,"column":2},"end":{"line":88,"column":37}},"50":{"start":{"line":89,"column":2},"end":{"line":89,"column":12}},"51":{"start":{"line":92,"column":0},"end":{"line":92,"column":31}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":19,"column":2}},{"start":{"line":19,"column":2},"end":{"line":19,"column":2}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"3":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":44,"column":4}},{"start":{"line":44,"column":4},"end":{"line":44,"column":4}}]},"4":{"line":54,"type":"switch","locations":[{"start":{"line":55,"column":6},"end":{"line":55,"column":55}},{"start":{"line":56,"column":6},"end":{"line":56,"column":67}},{"start":{"line":57,"column":6},"end":{"line":57,"column":57}},{"start":{"line":58,"column":6},"end":{"line":58,"column":65}},{"start":{"line":59,"column":6},"end":{"line":59,"column":63}},{"start":{"line":60,"column":6},"end":{"line":60,"column":80}},{"start":{"line":61,"column":6},"end":{"line":62,"column":54}}]},"5":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":4},"end":{"line":66,"column":4}},{"start":{"line":66,"column":4},"end":{"line":66,"column":4}}]},"6":{"line":74,"type":"cond-expr","locations":[{"start":{"line":74,"column":47},"end":{"line":74,"column":62}},{"start":{"line":74,"column":65},"end":{"line":74,"column":74}}]},"7":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":2},"end":{"line":84,"column":2}},{"start":{"line":84,"column":2},"end":{"line":84,"column":2}}]}},"code":["'use strict'","","const protobuf = require('protocol-buffers')","const pb = protobuf(require('./unixfs.proto'))","// encode/decode","const unixfsData = pb.Data","// const unixfsMetadata = pb.MetaData // encode/decode","","const types = [","  'raw',","  'directory',","  'file',","  'metadata',","  'symlink',","  'hamt-sharded-directory'","]","","function Data (type, data) {","  if (!(this instanceof Data)) {","    return new Data(type, data)","  }","  if (types.indexOf(type) === -1) {","    throw new Error('Type: ' + type + ' is not valid')","  }","","  this.type = type","  this.data = data","  this.blockSizes = []","","  this.addBlockSize = (size) => {","    this.blockSizes.push(size)","  }","","  this.removeBlockSize = (index) => {","    this.blockSizes.splice(index, 1)","  }","","  // data.length + blockSizes","  this.fileSize = () => {","    let sum = 0","    this.blockSizes.forEach((size) => {","      sum += size","    })","    if (data) {","      sum += data.length","    }","    return sum","  }","","  // encode to protobuf","  this.marshal = () => {","    let type","","    switch (this.type) {","      case 'raw': type = unixfsData.DataType.Raw; break","      case 'directory': type = unixfsData.DataType.Directory; break","      case 'file': type = unixfsData.DataType.File; break","      case 'metadata': type = unixfsData.DataType.Metadata; break","      case 'symlink': type = unixfsData.DataType.Symlink; break","      case 'hamt-sharded-directory': type = unixfsData.DataType.HAMTShard; break","      default:","        throw new Error(`Unkown type: \"${this.type}\"`)","    }","    let fileSize = this.fileSize()","","    if (fileSize === 0) {","      fileSize = undefined","    }","","    return unixfsData.encode({","      Type: type,","      Data: this.data,","      filesize: fileSize,","      blocksizes: this.blockSizes.length > 0 ? this.blockSizes : undefined,","      hashType: this.hashType,","      fanout: this.fanout","    })","  }","}","","// decode from protobuf https://github.com/ipfs/go-ipfs/blob/master/unixfs/format.go#L24","Data.unmarshal = (marsheled) => {","  const decoded = unixfsData.decode(marsheled)","  if (!decoded.Data) {","    decoded.Data = undefined","  }","  const obj = new Data(types[decoded.Type], decoded.Data)","  obj.blockSizes = decoded.blocksizes","  return obj","}","","exports = module.exports = Data",""],"l":{"3":1,"4":1,"6":1,"9":1,"18":1,"19":0,"20":0,"22":0,"23":0,"26":0,"27":0,"28":0,"30":0,"31":0,"34":0,"35":0,"39":0,"40":0,"41":0,"42":0,"44":0,"45":0,"47":0,"51":0,"52":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"62":0,"64":0,"66":0,"67":0,"70":0,"82":1,"83":0,"84":0,"85":0,"87":0,"88":0,"89":0,"92":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs/src/unixfs.proto.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs/src/unixfs.proto.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":24,"column":2}}},"branchMap":{},"code":["'use strict'","","module.exports = `message Data {","  enum DataType {","    Raw = 0;","    Directory = 1;","    File = 2;","    Metadata = 3;","    Symlink = 4;","    HAMTShard = 5;","  }","","  required DataType Type = 1;","  optional bytes Data = 2;","  optional uint64 filesize = 3;","  repeated uint64 blocksizes = 4;","","  optional uint64 hashType = 5;","  optional uint64 fanout = 6;","}","","message Metadata {","  required string MimeType = 1;","}`",""],"l":{"3":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/builder/reduce.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/builder/reduce.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":17},"end":{"line":11,"column":56}}},"2":{"name":"(anonymous_2)","line":12,"loc":{"start":{"line":12,"column":9},"end":{"line":12,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":44}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":36}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":37}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":29}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":29}},"7":{"start":{"line":11,"column":0},"end":{"line":58,"column":1}},"8":{"start":{"line":12,"column":2},"end":{"line":57,"column":3}},"9":{"start":{"line":13,"column":4},"end":{"line":23,"column":5}},"10":{"start":{"line":14,"column":6},"end":{"line":14,"column":29}},"11":{"start":{"line":15,"column":6},"end":{"line":21,"column":8}},"12":{"start":{"line":22,"column":6},"end":{"line":22,"column":12}},"13":{"start":{"line":26,"column":4},"end":{"line":26,"column":32}},"14":{"start":{"line":28,"column":4},"end":{"line":32,"column":6}},"15":{"start":{"line":29,"column":6},"end":{"line":29,"column":35}},"16":{"start":{"line":31,"column":6},"end":{"line":31,"column":62}},"17":{"start":{"line":34,"column":4},"end":{"line":56,"column":6}},"18":{"start":{"line":35,"column":14},"end":{"line":35,"column":52}},"19":{"start":{"line":37,"column":8},"end":{"line":39,"column":34}},"20":{"start":{"line":39,"column":20},"end":{"line":39,"column":33}},"21":{"start":{"line":42,"column":6},"end":{"line":45,"column":7}},"22":{"start":{"line":43,"column":8},"end":{"line":43,"column":21}},"23":{"start":{"line":44,"column":8},"end":{"line":44,"column":14}},"24":{"start":{"line":47,"column":6},"end":{"line":53,"column":7}},"25":{"start":{"line":55,"column":6},"end":{"line":55,"column":26}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":13,"column":4}},{"start":{"line":13,"column":4},"end":{"line":13,"column":4}}]},"2":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":8},"end":{"line":13,"column":27}},{"start":{"line":13,"column":32},"end":{"line":13,"column":48}},{"start":{"line":13,"column":52},"end":{"line":13,"column":82}}]},"3":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":6},"end":{"line":42,"column":6}},{"start":{"line":42,"column":6},"end":{"line":42,"column":6}}]}},"code":["'use strict'","","const waterfall = require('async/waterfall')","const dagPB = require('ipld-dag-pb')","const UnixFS = require('ipfs-unixfs')","const CID = require('cids')","","const DAGLink = dagPB.DAGLink","const DAGNode = dagPB.DAGNode","","module.exports = function (file, ipldResolver, options) {","  return function (leaves, callback) {","    if (leaves.length === 1 && (leaves[0].single || options.reduceSingleLeafToSelf)) {","      const leave = leaves[0]","      callback(null, {","        path: file.path,","        multihash: leave.multihash,","        size: leave.size,","        leafSize: leave.leafSize,","        name: leave.name","      })","      return // early","    }","","    // create a parent node and add all the leafs","    const f = new UnixFS('file')","","    const links = leaves.map((leaf) => {","      f.addBlockSize(leaf.leafSize)","","      return new DAGLink(leaf.name, leaf.size, leaf.multihash)","    })","","    waterfall([","      (cb) => DAGNode.create(f.marshal(), links, cb),","      (node, cb) => {","        ipldResolver.put(node, {","          cid: new CID(node.multihash)","        }, (err) => cb(err, node))","      }","    ], (err, node) => {","      if (err) {","        callback(err)","        return // early","      }","","      const root = {","        name: '',","        path: file.path,","        multihash: node.multihash,","        size: node.size,","        leafSize: f.fileSize()","      }","","      callback(null, root)","    })","  }","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"8":1,"9":1,"11":1,"12":0,"13":0,"14":0,"15":0,"22":0,"26":0,"28":0,"29":0,"31":0,"34":0,"35":0,"37":0,"39":0,"42":0,"43":0,"44":0,"47":0,"55":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/builder/flat/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/builder/flat/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":17},"end":{"line":8,"column":44}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":41}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":37}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":35}},"5":{"start":{"line":8,"column":0},"end":{"line":37,"column":1}},"6":{"start":{"line":9,"column":2},"end":{"line":9,"column":25}},"7":{"start":{"line":10,"column":2},"end":{"line":10,"column":28}},"8":{"start":{"line":11,"column":2},"end":{"line":11,"column":27}},"9":{"start":{"line":13,"column":2},"end":{"line":31,"column":3}},"10":{"start":{"line":18,"column":6},"end":{"line":21,"column":7}},"11":{"start":{"line":19,"column":8},"end":{"line":19,"column":23}},"12":{"start":{"line":20,"column":8},"end":{"line":20,"column":14}},"13":{"start":{"line":22,"column":6},"end":{"line":29,"column":7}},"14":{"start":{"line":23,"column":8},"end":{"line":23,"column":29}},"15":{"start":{"line":24,"column":8},"end":{"line":24,"column":20}},"16":{"start":{"line":25,"column":13},"end":{"line":29,"column":7}},"17":{"start":{"line":26,"column":8},"end":{"line":26,"column":86}},"18":{"start":{"line":28,"column":8},"end":{"line":28,"column":20}},"19":{"start":{"line":33,"column":2},"end":{"line":36,"column":3}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":6},"end":{"line":18,"column":6}},{"start":{"line":18,"column":6},"end":{"line":18,"column":6}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":6},"end":{"line":22,"column":6}},{"start":{"line":22,"column":6},"end":{"line":22,"column":6}}]},"3":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":13},"end":{"line":25,"column":13}},{"start":{"line":25,"column":13},"end":{"line":25,"column":13}}]}},"code":["'use strict'","","const pull = require('pull-stream')","const pushable = require('pull-pushable')","const pullPair = require('pull-pair')","const batch = require('pull-batch')","","module.exports = function (reduce, options) {","  const pair = pullPair()","  const source = pair.source","  const result = pushable()","","  pull(","    source,","    batch(Infinity),","    pull.asyncMap(reduce),","    pull.collect((err, roots) => {","      if (err) {","        result.end(err)","        return // early","      }","      if (roots.length === 1) {","        result.push(roots[0])","        result.end()","      } else if (roots.length > 1) {","        result.end(new Error('expected a maximum of 1 roots and got ' + roots.length))","      } else {","        result.end()","      }","    })","  )","","  return {","    sink: pair.sink,","    source: result","  }","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"8":1,"9":0,"10":0,"11":0,"13":0,"18":0,"19":0,"20":0,"22":0,"23":0,"24":0,"25":0,"26":0,"28":0,"33":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/builder/balanced/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/builder/balanced/index.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":17},"end":{"line":9,"column":45}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":53}},"2":{"start":{"line":5,"column":0},"end":{"line":7,"column":1}},"3":{"start":{"line":9,"column":0},"end":{"line":12,"column":1}},"4":{"start":{"line":10,"column":2},"end":{"line":10,"column":61}},"5":{"start":{"line":11,"column":2},"end":{"line":11,"column":41}}},"branchMap":{},"code":["'use strict'","","const balancedReducer = require('./balanced-reducer')","","const defaultOptions = {","  maxChildrenPerNode: 174","}","","module.exports = function (reduce, _options) {","  const options = Object.assign({}, defaultOptions, _options)","  return balancedReducer(reduce, options)","}",""],"l":{"3":1,"5":1,"9":1,"10":0,"11":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/builder/balanced/balanced-reducer.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/builder/balanced/balanced-reducer.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"balancedReduceToRoot","line":8,"loc":{"start":{"line":8,"column":17},"end":{"line":8,"column":65}}},"2":{"name":"reduceToParents","line":29,"loc":{"start":{"line":29,"column":2},"end":{"line":29,"column":47}}},"3":{"name":"reduced","line":42,"loc":{"start":{"line":42,"column":4},"end":{"line":42,"column":34}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":41}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":37}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":35}},"5":{"start":{"line":8,"column":0},"end":{"line":57,"column":1}},"6":{"start":{"line":9,"column":2},"end":{"line":9,"column":25}},"7":{"start":{"line":10,"column":2},"end":{"line":10,"column":28}},"8":{"start":{"line":12,"column":2},"end":{"line":12,"column":27}},"9":{"start":{"line":14,"column":2},"end":{"line":27,"column":4}},"10":{"start":{"line":15,"column":4},"end":{"line":18,"column":5}},"11":{"start":{"line":16,"column":6},"end":{"line":16,"column":21}},"12":{"start":{"line":17,"column":6},"end":{"line":17,"column":12}},"13":{"start":{"line":19,"column":4},"end":{"line":26,"column":5}},"14":{"start":{"line":20,"column":6},"end":{"line":20,"column":27}},"15":{"start":{"line":21,"column":6},"end":{"line":21,"column":18}},"16":{"start":{"line":22,"column":11},"end":{"line":26,"column":5}},"17":{"start":{"line":23,"column":6},"end":{"line":23,"column":84}},"18":{"start":{"line":25,"column":6},"end":{"line":25,"column":18}},"19":{"start":{"line":29,"column":2},"end":{"line":51,"column":3}},"20":{"start":{"line":30,"column":4},"end":{"line":30,"column":24}},"21":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"22":{"start":{"line":32,"column":6},"end":{"line":32,"column":34}},"23":{"start":{"line":35,"column":4},"end":{"line":40,"column":5}},"24":{"start":{"line":42,"column":4},"end":{"line":50,"column":5}},"25":{"start":{"line":43,"column":6},"end":{"line":49,"column":7}},"26":{"start":{"line":44,"column":8},"end":{"line":44,"column":21}},"27":{"start":{"line":45,"column":13},"end":{"line":49,"column":7}},"28":{"start":{"line":46,"column":8},"end":{"line":46,"column":40}},"29":{"start":{"line":48,"column":8},"end":{"line":48,"column":29}},"30":{"start":{"line":53,"column":2},"end":{"line":56,"column":3}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":4}},{"start":{"line":15,"column":4},"end":{"line":15,"column":4}}]},"2":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":4}},{"start":{"line":19,"column":4},"end":{"line":19,"column":4}}]},"3":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":11},"end":{"line":22,"column":11}},{"start":{"line":22,"column":11},"end":{"line":22,"column":11}}]},"4":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":4}},{"start":{"line":31,"column":4},"end":{"line":31,"column":4}}]},"5":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":6},"end":{"line":43,"column":6}},{"start":{"line":43,"column":6},"end":{"line":43,"column":6}}]},"6":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":13},"end":{"line":45,"column":13}},{"start":{"line":45,"column":13},"end":{"line":45,"column":13}}]}},"code":["'use strict'","","const pull = require('pull-stream')","const pushable = require('pull-pushable')","const pullPair = require('pull-pair')","const batch = require('pull-batch')","","module.exports = function balancedReduceToRoot (reduce, options) {","  const pair = pullPair()","  const source = pair.source","","  const result = pushable()","","  reduceToParents(source, (err, roots) => {","    if (err) {","      result.end(err)","      return // early","    }","    if (roots.length === 1) {","      result.push(roots[0])","      result.end()","    } else if (roots.length > 1) {","      result.end(new Error('expected a maximum of 1 roots and got ' + roots.length))","    } else {","      result.end()","    }","  })","","  function reduceToParents (_chunks, callback) {","    let chunks = _chunks","    if (Array.isArray(chunks)) {","      chunks = pull.values(chunks)","    }","","    pull(","      chunks,","      batch(options.maxChildrenPerNode),","      pull.asyncMap(reduce),","      pull.collect(reduced)","    )","","    function reduced (err, roots) {","      if (err) {","        callback(err)","      } else if (roots.length > 1) {","        reduceToParents(roots, callback)","      } else {","        callback(null, roots)","      }","    }","  }","","  return {","    sink: pair.sink,","    source: result","  }","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"8":1,"9":0,"10":0,"12":0,"14":0,"15":0,"16":0,"17":0,"19":0,"20":0,"21":0,"22":0,"23":0,"25":0,"29":1,"30":0,"31":0,"32":0,"35":0,"42":1,"43":0,"44":0,"45":0,"46":0,"48":0,"53":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/builder/trickle/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/builder/trickle/index.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":17},"end":{"line":10,"column":45}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":51}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":1}},"3":{"start":{"line":10,"column":0},"end":{"line":13,"column":1}},"4":{"start":{"line":11,"column":2},"end":{"line":11,"column":61}},"5":{"start":{"line":12,"column":2},"end":{"line":12,"column":40}}},"branchMap":{},"code":["'use strict'","","const trickleReducer = require('./trickle-reducer')","","const defaultOptions = {","  maxChildrenPerNode: 174,","  layerRepeat: 4","}","","module.exports = function (reduce, _options) {","  const options = Object.assign({}, defaultOptions, _options)","  return trickleReducer(reduce, options)","}",""],"l":{"3":1,"5":1,"10":1,"11":0,"12":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/builder/trickle/trickle-reducer.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/builder/trickle/trickle-reducer.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0,0,0],"12":[0,0],"13":[0,0,0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"trickleReduceToRoot","line":11,"loc":{"start":{"line":11,"column":17},"end":{"line":11,"column":64}}},"2":{"name":"trickle","line":44,"loc":{"start":{"line":44,"column":2},"end":{"line":44,"column":38}}},"3":{"name":"write","line":57,"loc":{"start":{"line":57,"column":4},"end":{"line":57,"column":37}}},"4":{"name":"(anonymous_4)","line":68,"loc":{"start":{"line":68,"column":12},"end":{"line":68,"column":25}}},"5":{"name":"(anonymous_5)","line":71,"loc":{"start":{"line":71,"column":12},"end":{"line":71,"column":27}}},"6":{"name":"iterate","line":110,"loc":{"start":{"line":110,"column":4},"end":{"line":110,"column":24}}},"7":{"name":"end","line":130,"loc":{"start":{"line":130,"column":4},"end":{"line":130,"column":23}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":41}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":37}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":39}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":39}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":35}},"8":{"start":{"line":11,"column":0},"end":{"line":145,"column":1}},"9":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"10":{"start":{"line":13,"column":2},"end":{"line":13,"column":27}},"11":{"start":{"line":14,"column":2},"end":{"line":14,"column":34}},"12":{"start":{"line":15,"column":2},"end":{"line":15,"column":24}},"13":{"start":{"line":17,"column":2},"end":{"line":37,"column":3}},"14":{"start":{"line":24,"column":6},"end":{"line":35,"column":7}},"15":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"16":{"start":{"line":27,"column":8},"end":{"line":34,"column":9}},"17":{"start":{"line":28,"column":10},"end":{"line":28,"column":31}},"18":{"start":{"line":29,"column":10},"end":{"line":29,"column":22}},"19":{"start":{"line":30,"column":15},"end":{"line":34,"column":9}},"20":{"start":{"line":31,"column":10},"end":{"line":31,"column":88}},"21":{"start":{"line":33,"column":10},"end":{"line":33,"column":22}},"22":{"start":{"line":39,"column":2},"end":{"line":42,"column":3}},"23":{"start":{"line":44,"column":2},"end":{"line":144,"column":3}},"24":{"start":{"line":45,"column":4},"end":{"line":45,"column":21}},"25":{"start":{"line":46,"column":4},"end":{"line":46,"column":17}},"26":{"start":{"line":47,"column":4},"end":{"line":47,"column":14}},"27":{"start":{"line":48,"column":4},"end":{"line":48,"column":24}},"28":{"start":{"line":50,"column":4},"end":{"line":50,"column":29}},"29":{"start":{"line":52,"column":4},"end":{"line":55,"column":5}},"30":{"start":{"line":57,"column":4},"end":{"line":108,"column":5}},"31":{"start":{"line":58,"column":6},"end":{"line":58,"column":23}},"32":{"start":{"line":59,"column":6},"end":{"line":59,"column":27}},"33":{"start":{"line":61,"column":6},"end":{"line":98,"column":7}},"34":{"start":{"line":62,"column":8},"end":{"line":62,"column":27}},"35":{"start":{"line":64,"column":8},"end":{"line":97,"column":9}},"36":{"start":{"line":69,"column":14},"end":{"line":69,"column":27}},"37":{"start":{"line":72,"column":14},"end":{"line":75,"column":15}},"38":{"start":{"line":73,"column":16},"end":{"line":73,"column":39}},"39":{"start":{"line":74,"column":16},"end":{"line":74,"column":22}},"40":{"start":{"line":76,"column":14},"end":{"line":80,"column":15}},"41":{"start":{"line":77,"column":16},"end":{"line":77,"column":28}},"42":{"start":{"line":78,"column":16},"end":{"line":78,"column":32}},"43":{"start":{"line":79,"column":16},"end":{"line":79,"column":32}},"44":{"start":{"line":81,"column":14},"end":{"line":81,"column":30}},"45":{"start":{"line":87,"column":12},"end":{"line":87,"column":28}},"46":{"start":{"line":88,"column":12},"end":{"line":91,"column":13}},"47":{"start":{"line":89,"column":14},"end":{"line":89,"column":29}},"48":{"start":{"line":90,"column":14},"end":{"line":90,"column":20}},"49":{"start":{"line":92,"column":12},"end":{"line":94,"column":14}},"50":{"start":{"line":93,"column":14},"end":{"line":93,"column":31}},"51":{"start":{"line":95,"column":12},"end":{"line":95,"column":21}},"52":{"start":{"line":100,"column":6},"end":{"line":105,"column":7}},"53":{"start":{"line":101,"column":8},"end":{"line":101,"column":25}},"54":{"start":{"line":103,"column":8},"end":{"line":103,"column":25}},"55":{"start":{"line":104,"column":8},"end":{"line":104,"column":17}},"56":{"start":{"line":107,"column":6},"end":{"line":107,"column":16}},"57":{"start":{"line":110,"column":4},"end":{"line":128,"column":5}},"58":{"start":{"line":111,"column":6},"end":{"line":111,"column":19}},"59":{"start":{"line":112,"column":6},"end":{"line":112,"column":17}},"60":{"start":{"line":113,"column":6},"end":{"line":117,"column":7}},"61":{"start":{"line":115,"column":8},"end":{"line":115,"column":21}},"62":{"start":{"line":116,"column":8},"end":{"line":116,"column":15}},"63":{"start":{"line":119,"column":6},"end":{"line":123,"column":7}},"64":{"start":{"line":121,"column":8},"end":{"line":121,"column":23}},"65":{"start":{"line":122,"column":8},"end":{"line":122,"column":20}},"66":{"start":{"line":125,"column":6},"end":{"line":127,"column":7}},"67":{"start":{"line":126,"column":8},"end":{"line":126,"column":25}},"68":{"start":{"line":130,"column":4},"end":{"line":143,"column":5}},"69":{"start":{"line":131,"column":6},"end":{"line":134,"column":7}},"70":{"start":{"line":132,"column":8},"end":{"line":132,"column":23}},"71":{"start":{"line":133,"column":8},"end":{"line":133,"column":14}},"72":{"start":{"line":135,"column":6},"end":{"line":142,"column":7}},"73":{"start":{"line":136,"column":8},"end":{"line":139,"column":9}},"74":{"start":{"line":137,"column":10},"end":{"line":137,"column":25}},"75":{"start":{"line":138,"column":10},"end":{"line":138,"column":22}},"76":{"start":{"line":141,"column":8},"end":{"line":141,"column":20}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":6},"end":{"line":24,"column":6}},{"start":{"line":24,"column":6},"end":{"line":24,"column":6}}]},"2":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":27,"column":8}},{"start":{"line":27,"column":8},"end":{"line":27,"column":8}}]},"3":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":15},"end":{"line":30,"column":15}},{"start":{"line":30,"column":15},"end":{"line":30,"column":15}}]},"4":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":6},"end":{"line":61,"column":6}},{"start":{"line":61,"column":6},"end":{"line":61,"column":6}}]},"5":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":10},"end":{"line":61,"column":15}},{"start":{"line":61,"column":19},"end":{"line":61,"column":26}}]},"6":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":14},"end":{"line":72,"column":14}},{"start":{"line":72,"column":14},"end":{"line":72,"column":14}}]},"7":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":14},"end":{"line":76,"column":14}},{"start":{"line":76,"column":14},"end":{"line":76,"column":14}}]},"8":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":12},"end":{"line":88,"column":12}},{"start":{"line":88,"column":12},"end":{"line":88,"column":12}}]},"9":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":6},"end":{"line":100,"column":6}},{"start":{"line":100,"column":6},"end":{"line":100,"column":6}}]},"10":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":6},"end":{"line":113,"column":6}},{"start":{"line":113,"column":6},"end":{"line":113,"column":6}}]},"11":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":11},"end":{"line":113,"column":22}},{"start":{"line":113,"column":26},"end":{"line":113,"column":66}},{"start":{"line":114,"column":11},"end":{"line":114,"column":20}},{"start":{"line":114,"column":24},"end":{"line":114,"column":57}}]},"12":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":6},"end":{"line":119,"column":6}},{"start":{"line":119,"column":6},"end":{"line":119,"column":6}}]},"13":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":11},"end":{"line":119,"column":20}},{"start":{"line":119,"column":24},"end":{"line":119,"column":37}},{"start":{"line":119,"column":41},"end":{"line":119,"column":57}},{"start":{"line":120,"column":11},"end":{"line":120,"column":19}},{"start":{"line":120,"column":23},"end":{"line":120,"column":38}}]},"14":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":6},"end":{"line":125,"column":6}},{"start":{"line":125,"column":6},"end":{"line":125,"column":6}}]},"15":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":6},"end":{"line":131,"column":6}},{"start":{"line":131,"column":6},"end":{"line":131,"column":6}}]},"16":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":6},"end":{"line":135,"column":6}},{"start":{"line":135,"column":6},"end":{"line":135,"column":6}}]},"17":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":8},"end":{"line":136,"column":8}},{"start":{"line":136,"column":8},"end":{"line":136,"column":8}}]}},"code":["'use strict'","","const pull = require('pull-stream')","const pushable = require('pull-pushable')","const batch = require('pull-batch')","const pullPair = require('pull-pair')","const through = require('pull-through')","const pullWrite = require('pull-write')","const pause = require('pull-pause')","","module.exports = function trickleReduceToRoot (reduce, options) {","  const pair = pullPair()","  const result = pushable()","  const pausable = pause(() => {})","  let pendingResumes = 0","","  pull(","    pair.source,","    pausable,","    trickle(0, -1),","    batch(Infinity),","    pull.asyncMap(reduce),","    pull.collect((err, roots) => {","      if (err) {","        result.end(err)","      } else {","        if (roots.length === 1) {","          result.push(roots[0])","          result.end()","        } else if (roots.length > 1) {","          result.end(new Error('expected a maximum of 1 roots and got ' + roots.length))","        } else {","          result.end()","        }","      }","    })","  )","","  return {","    sink: pair.sink,","    source: result","  }","","  function trickle (indent, maxDepth) {","    let iteration = 0","    let depth = 0","    let deeper","    let aborting = false","","    const result = pushable()","","    return {","      source: result,","      sink: pullWrite(write, null, 1, end)","    }","","    function write (nodes, callback) {","      let ended = false","      const node = nodes[0]","","      if (depth && !deeper) {","        deeper = pushable()","","        pull(","          deeper,","          trickle(indent + 1, depth - 1),","          through(","            function (d) {","              this.queue(d)","            },","            function (err) {","              if (err) {","                this.emit('error', err)","                return // early","              }","              if (!ended) {","                ended = true","                pendingResumes++","                pausable.pause()","              }","              this.queue(null)","            }","          ),","          batch(Infinity),","          pull.asyncMap(reduce),","          pull.collect((err, nodes) => {","            pendingResumes--","            if (err) {","              result.end(err)","              return","            }","            nodes.forEach(node => {","              result.push(node)","            })","            iterate()","          })","        )","      }","","      if (deeper) {","        deeper.push(node)","      } else {","        result.push(node)","        iterate()","      }","","      callback()","    }","","    function iterate () {","      deeper = null","      iteration++","      if ((depth === 0 && iteration === options.maxChildrenPerNode) ||","          (depth > 0 && iteration === options.layerRepeat)) {","        iteration = 0","        depth++","      }","","      if ((!aborting && maxDepth >= 0 && depth > maxDepth) ||","          (aborting && !pendingResumes)) {","        aborting = true","        result.end()","      }","","      if (!pendingResumes) {","        pausable.resume()","      }","    }","","    function end (err) {","      if (err) {","        result.end(err)","        return","      }","      if (deeper) {","        if (!aborting) {","          aborting = true","          deeper.end()","        }","      } else {","        result.end()","      }","    }","  }","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"11":1,"12":0,"13":0,"14":0,"15":0,"17":0,"24":0,"25":0,"27":0,"28":0,"29":0,"30":0,"31":0,"33":0,"39":0,"44":1,"45":0,"46":0,"47":0,"48":0,"50":0,"52":0,"57":1,"58":0,"59":0,"61":0,"62":0,"64":0,"69":0,"72":0,"73":0,"74":0,"76":0,"77":0,"78":0,"79":0,"81":0,"87":0,"88":0,"89":0,"90":0,"92":0,"93":0,"95":0,"100":0,"101":0,"103":0,"104":0,"107":0,"110":1,"111":0,"112":0,"113":0,"115":0,"116":0,"119":0,"121":0,"122":0,"125":0,"126":0,"130":1,"131":0,"132":0,"133":0,"135":0,"136":0,"137":0,"138":0,"141":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/importer/tree-builder.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/importer/tree-builder.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":1,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1,"69":0,"70":0,"71":0,"72":0,"73":1,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":1,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":1,"102":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"createTreeBuilder","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":52}}},"2":{"name":"consumeQueue","line":42,"loc":{"start":{"line":42,"column":2},"end":{"line":42,"column":43}}},"3":{"name":"(anonymous_3)","line":43,"loc":{"start":{"line":43,"column":36},"end":{"line":43,"column":48}}},"4":{"name":"getStream","line":50,"loc":{"start":{"line":50,"column":2},"end":{"line":50,"column":24}}},"5":{"name":"createStream","line":54,"loc":{"start":{"line":54,"column":2},"end":{"line":54,"column":27}}},"6":{"name":"write","line":63,"loc":{"start":{"line":63,"column":4},"end":{"line":63,"column":37}}},"7":{"name":"ended","line":84,"loc":{"start":{"line":84,"column":4},"end":{"line":84,"column":25}}},"8":{"name":"addToTree","line":93,"loc":{"start":{"line":93,"column":2},"end":{"line":93,"column":38}}},"9":{"name":"flushRoot","line":146,"loc":{"start":{"line":146,"column":2},"end":{"line":146,"column":32}}},"10":{"name":"flush","line":160,"loc":{"start":{"line":160,"column":2},"end":{"line":160,"column":40}}},"11":{"name":"flushDir","line":183,"loc":{"start":{"line":183,"column":2},"end":{"line":183,"column":43}}},"12":{"name":"notEmpty","line":216,"loc":{"start":{"line":216,"column":0},"end":{"line":216,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":46}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":50}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":44}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":42}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":38}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":41}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":37}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":46}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":28}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":34}},"11":{"start":{"line":15,"column":0},"end":{"line":18,"column":1}},"12":{"start":{"line":20,"column":0},"end":{"line":214,"column":1}},"13":{"start":{"line":21,"column":2},"end":{"line":21,"column":61}},"14":{"start":{"line":23,"column":2},"end":{"line":23,"column":44}},"15":{"start":{"line":26,"column":2},"end":{"line":26,"column":29}},"16":{"start":{"line":29,"column":2},"end":{"line":35,"column":4}},"17":{"start":{"line":37,"column":2},"end":{"line":40,"column":3}},"18":{"start":{"line":42,"column":2},"end":{"line":48,"column":3}},"19":{"start":{"line":43,"column":4},"end":{"line":46,"column":6}},"20":{"start":{"line":44,"column":6},"end":{"line":44,"column":38}},"21":{"start":{"line":45,"column":6},"end":{"line":45,"column":16}},"22":{"start":{"line":47,"column":4},"end":{"line":47,"column":31}},"23":{"start":{"line":50,"column":2},"end":{"line":52,"column":3}},"24":{"start":{"line":51,"column":4},"end":{"line":51,"column":17}},"25":{"start":{"line":54,"column":2},"end":{"line":89,"column":3}},"26":{"start":{"line":55,"column":4},"end":{"line":55,"column":48}},"27":{"start":{"line":56,"column":4},"end":{"line":56,"column":29}},"28":{"start":{"line":58,"column":4},"end":{"line":61,"column":5}},"29":{"start":{"line":63,"column":4},"end":{"line":82,"column":5}},"30":{"start":{"line":64,"column":6},"end":{"line":81,"column":7}},"31":{"start":{"line":67,"column":10},"end":{"line":78,"column":12}},"32":{"start":{"line":71,"column":14},"end":{"line":76,"column":15}},"33":{"start":{"line":72,"column":16},"end":{"line":72,"column":29}},"34":{"start":{"line":74,"column":16},"end":{"line":74,"column":33}},"35":{"start":{"line":75,"column":16},"end":{"line":75,"column":26}},"36":{"start":{"line":84,"column":4},"end":{"line":88,"column":5}},"37":{"start":{"line":85,"column":6},"end":{"line":87,"column":8}},"38":{"start":{"line":86,"column":8},"end":{"line":86,"column":35}},"39":{"start":{"line":93,"column":2},"end":{"line":142,"column":3}},"40":{"start":{"line":94,"column":4},"end":{"line":94,"column":59}},"41":{"start":{"line":95,"column":4},"end":{"line":95,"column":21}},"42":{"start":{"line":96,"column":4},"end":{"line":96,"column":42}},"43":{"start":{"line":98,"column":4},"end":{"line":98,"column":24}},"44":{"start":{"line":99,"column":4},"end":{"line":141,"column":16}},"45":{"start":{"line":100,"column":6},"end":{"line":102,"column":7}},"46":{"start":{"line":101,"column":8},"end":{"line":101,"column":26}},"47":{"start":{"line":103,"column":6},"end":{"line":103,"column":29}},"48":{"start":{"line":105,"column":6},"end":{"line":105,"column":40}},"49":{"start":{"line":106,"column":6},"end":{"line":106,"column":25}},"50":{"start":{"line":107,"column":6},"end":{"line":107,"column":29}},"51":{"start":{"line":108,"column":6},"end":{"line":108,"column":24}},"52":{"start":{"line":110,"column":6},"end":{"line":140,"column":7}},"53":{"start":{"line":111,"column":8},"end":{"line":118,"column":20}},"54":{"start":{"line":112,"column":24},"end":{"line":112,"column":60}},"55":{"start":{"line":113,"column":24},"end":{"line":113,"column":88}},"56":{"start":{"line":115,"column":12},"end":{"line":115,"column":26}},"57":{"start":{"line":116,"column":12},"end":{"line":116,"column":22}},"58":{"start":{"line":120,"column":8},"end":{"line":139,"column":10}},"59":{"start":{"line":121,"column":10},"end":{"line":124,"column":11}},"60":{"start":{"line":122,"column":12},"end":{"line":122,"column":25}},"61":{"start":{"line":123,"column":12},"end":{"line":123,"column":18}},"62":{"start":{"line":125,"column":10},"end":{"line":125,"column":28}},"63":{"start":{"line":126,"column":10},"end":{"line":135,"column":11}},"64":{"start":{"line":127,"column":12},"end":{"line":134,"column":14}},"65":{"start":{"line":136,"column":10},"end":{"line":136,"column":34}},"66":{"start":{"line":137,"column":10},"end":{"line":137,"column":22}},"67":{"start":{"line":138,"column":10},"end":{"line":138,"column":48}},"68":{"start":{"line":146,"column":2},"end":{"line":158,"column":3}},"69":{"start":{"line":147,"column":4},"end":{"line":157,"column":6}},"70":{"start":{"line":151,"column":8},"end":{"line":155,"column":9}},"71":{"start":{"line":152,"column":10},"end":{"line":152,"column":23}},"72":{"start":{"line":154,"column":10},"end":{"line":154,"column":48}},"73":{"start":{"line":160,"column":2},"end":{"line":181,"column":3}},"74":{"start":{"line":161,"column":4},"end":{"line":180,"column":5}},"75":{"start":{"line":162,"column":6},"end":{"line":165,"column":7}},"76":{"start":{"line":163,"column":8},"end":{"line":163,"column":58}},"77":{"start":{"line":164,"column":8},"end":{"line":164,"column":14}},"78":{"start":{"line":166,"column":6},"end":{"line":176,"column":10}},"79":{"start":{"line":168,"column":10},"end":{"line":168,"column":65}},"80":{"start":{"line":171,"column":10},"end":{"line":174,"column":11}},"81":{"start":{"line":172,"column":12},"end":{"line":172,"column":25}},"82":{"start":{"line":173,"column":12},"end":{"line":173,"column":18}},"83":{"start":{"line":175,"column":10},"end":{"line":175,"column":40}},"84":{"start":{"line":179,"column":6},"end":{"line":179,"column":32}},"85":{"start":{"line":183,"column":2},"end":{"line":213,"column":3}},"86":{"start":{"line":185,"column":4},"end":{"line":196,"column":5}},"87":{"start":{"line":186,"column":6},"end":{"line":193,"column":8}},"88":{"start":{"line":187,"column":8},"end":{"line":190,"column":9}},"89":{"start":{"line":188,"column":10},"end":{"line":188,"column":23}},"90":{"start":{"line":189,"column":10},"end":{"line":189,"column":16}},"91":{"start":{"line":192,"column":8},"end":{"line":192,"column":33}},"92":{"start":{"line":195,"column":6},"end":{"line":195,"column":12}},"93":{"start":{"line":198,"column":4},"end":{"line":201,"column":5}},"94":{"start":{"line":199,"column":6},"end":{"line":199,"column":36}},"95":{"start":{"line":200,"column":6},"end":{"line":200,"column":12}},"96":{"start":{"line":205,"column":4},"end":{"line":205,"column":22}},"97":{"start":{"line":206,"column":4},"end":{"line":212,"column":6}},"98":{"start":{"line":207,"column":6},"end":{"line":211,"column":7}},"99":{"start":{"line":208,"column":8},"end":{"line":208,"column":21}},"100":{"start":{"line":210,"column":8},"end":{"line":210,"column":28}},"101":{"start":{"line":216,"column":0},"end":{"line":218,"column":1}},"102":{"start":{"line":217,"column":2},"end":{"line":217,"column":21}}},"branchMap":{"1":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":14},"end":{"line":71,"column":14}},{"start":{"line":71,"column":14},"end":{"line":71,"column":14}}]},"2":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":19},"end":{"line":86,"column":27}},{"start":{"line":86,"column":31},"end":{"line":86,"column":34}}]},"3":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":6},"end":{"line":100,"column":6}},{"start":{"line":100,"column":6},"end":{"line":100,"column":6}}]},"4":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":6},"end":{"line":110,"column":6}},{"start":{"line":110,"column":6},"end":{"line":110,"column":6}}]},"5":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":10},"end":{"line":121,"column":10}},{"start":{"line":121,"column":10},"end":{"line":121,"column":10}}]},"6":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":10},"end":{"line":126,"column":10}},{"start":{"line":126,"column":10},"end":{"line":126,"column":10}}]},"7":{"line":126,"type":"binary-expr","locations":[{"start":{"line":126,"column":14},"end":{"line":126,"column":18}},{"start":{"line":126,"column":22},"end":{"line":126,"column":43}}]},"8":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":8},"end":{"line":151,"column":8}},{"start":{"line":151,"column":8},"end":{"line":151,"column":8}}]},"9":{"line":154,"type":"binary-expr","locations":[{"start":{"line":154,"column":25},"end":{"line":154,"column":29}},{"start":{"line":154,"column":33},"end":{"line":154,"column":47}}]},"10":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":4},"end":{"line":161,"column":4}},{"start":{"line":161,"column":4},"end":{"line":161,"column":4}}]},"11":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":6},"end":{"line":162,"column":6}},{"start":{"line":162,"column":6},"end":{"line":162,"column":6}}]},"12":{"line":162,"type":"binary-expr","locations":[{"start":{"line":162,"column":10},"end":{"line":162,"column":19}},{"start":{"line":162,"column":23},"end":{"line":162,"column":44}},{"start":{"line":162,"column":48},"end":{"line":162,"column":61}}]},"13":{"line":168,"type":"cond-expr","locations":[{"start":{"line":168,"column":24},"end":{"line":168,"column":40}},{"start":{"line":168,"column":44},"end":{"line":168,"column":47}}]},"14":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":10},"end":{"line":171,"column":10}},{"start":{"line":171,"column":10},"end":{"line":171,"column":10}}]},"15":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":4},"end":{"line":185,"column":4}},{"start":{"line":185,"column":4},"end":{"line":185,"column":4}}]},"16":{"line":185,"type":"binary-expr","locations":[{"start":{"line":185,"column":8},"end":{"line":185,"column":17}},{"start":{"line":185,"column":21},"end":{"line":185,"column":34}}]},"17":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":8},"end":{"line":187,"column":8}},{"start":{"line":187,"column":8},"end":{"line":187,"column":8}}]},"18":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":4},"end":{"line":198,"column":4}},{"start":{"line":198,"column":4},"end":{"line":198,"column":4}}]},"19":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":6},"end":{"line":207,"column":6}},{"start":{"line":207,"column":6},"end":{"line":207,"column":6}}]}},"code":["'use strict'","","const eachSeries = require('async/eachSeries')","const eachOfSeries = require('async/eachOfSeries')","const waterfall = require('async/waterfall')","const createQueue = require('async/queue')","const writable = require('pull-write')","const pushable = require('pull-pushable')","const DirFlat = require('./dir-flat')","const flatToShard = require('./flat-to-shard')","const Dir = require('./dir')","","module.exports = createTreeBuilder","","const defaultOptions = {","  wrap: false,","  shardSplitThreshold: 1000","}","","function createTreeBuilder (ipldResolver, _options) {","  const options = Object.assign({}, defaultOptions, _options)","","  const queue = createQueue(consumeQueue, 1)","","  // returned stream","  let stream = createStream()","","  // root node","  let tree = DirFlat({","    path: '',","    root: true,","    dir: true,","    dirty: false,","    flat: true","  })","","  return {","    flush: flushRoot,","    stream: getStream","  }","","  function consumeQueue (action, callback) {","    const args = action.args.concat(function () {","      action.cb.apply(null, arguments)","      callback()","    })","    action.fn.apply(null, args)","  }","","  function getStream () {","    return stream","  }","","  function createStream () {","    const sink = writable(write, null, 1, ended)","    const source = pushable()","","    return {","      sink: sink,","      source: source","    }","","    function write (elems, callback) {","      eachSeries(","        elems,","        (elem, callback) => {","          queue.push({","            fn: addToTree,","            args: [elem],","            cb: (err) => {","              if (err) {","                callback(err)","              } else {","                source.push(elem)","                callback()","              }","            }","          })","        },","        callback","      )","    }","","    function ended (err) {","      flushRoot((flushErr) => {","        source.end(flushErr || err)","      })","    }","  }","","  // ---- Add to tree","","  function addToTree (elem, callback) {","    const pathElems = elem.path.split('/').filter(notEmpty)","    let parent = tree","    const lastIndex = pathElems.length - 1","","    let currentPath = ''","    eachOfSeries(pathElems, (pathElem, index, callback) => {","      if (currentPath) {","        currentPath += '/'","      }","      currentPath += pathElem","","      const last = (index === lastIndex)","      parent.dirty = true","      parent.multihash = null","      parent.size = null","","      if (last) {","        waterfall([","          (callback) => parent.put(pathElem, elem, callback),","          (callback) => flatToShard(null, parent, options.shardSplitThreshold, callback),","          (newRoot, callback) => {","            tree = newRoot","            callback()","          }","        ], callback)","      } else {","        parent.get(pathElem, (err, treeNode) => {","          if (err) {","            callback(err)","            return // early","          }","          let dir = treeNode","          if (!dir || !(dir instanceof Dir)) {","            dir = DirFlat({","              dir: true,","              parent: parent,","              parentKey: pathElem,","              path: currentPath,","              dirty: true,","              flat: true","            })","          }","          const parentDir = parent","          parent = dir","          parentDir.put(pathElem, dir, callback)","        })","      }","    }, callback)","  }","","  // ---- Flush","","  function flushRoot (callback) {","    queue.push({","      fn: flush,","      args: ['', tree],","      cb: (err, node) => {","        if (err) {","          callback(err)","        } else {","          callback(null, node && node.multihash)","        }","      }","    })","  }","","  function flush (path, tree, callback) {","    if (tree.dir) {","      if (tree.root && tree.childCount() > 1 && !options.wrap) {","        callback(new Error('detected more than one root'))","        return // early","      }","      tree.eachChildSeries(","        (key, child, callback) => {","          flush(path ? (path + '/' + key) : key, child, callback)","        },","        (err) => {","          if (err) {","            callback(err)","            return // early","          }","          flushDir(path, tree, callback)","        })","    } else {","      // leaf node, nothing to do here","      process.nextTick(callback)","    }","  }","","  function flushDir (path, tree, callback) {","    // don't create a wrapping node unless the user explicitely said so","    if (tree.root && !options.wrap) {","      tree.onlyChild((err, onlyChild) => {","        if (err) {","          callback(err)","          return // early","        }","","        callback(null, onlyChild)","      })","","      return // early","    }","","    if (!tree.dirty) {","      callback(null, tree.multihash)","      return // early","    }","","    // don't flush directory unless it's been modified","","    tree.dirty = false","    tree.flush(path, ipldResolver, stream.source, (err, node) => {","      if (err) {","        callback(err)","      } else {","        callback(null, node)","      }","    })","  }","}","","function notEmpty (str) {","  return Boolean(str)","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"13":1,"15":1,"20":1,"21":0,"23":0,"26":0,"29":0,"37":0,"42":1,"43":0,"44":0,"45":0,"47":0,"50":1,"51":0,"54":1,"55":0,"56":0,"58":0,"63":1,"64":0,"67":0,"71":0,"72":0,"74":0,"75":0,"84":1,"85":0,"86":0,"93":1,"94":0,"95":0,"96":0,"98":0,"99":0,"100":0,"101":0,"103":0,"105":0,"106":0,"107":0,"108":0,"110":0,"111":0,"112":0,"113":0,"115":0,"116":0,"120":0,"121":0,"122":0,"123":0,"125":0,"126":0,"127":0,"136":0,"137":0,"138":0,"146":1,"147":0,"151":0,"152":0,"154":0,"160":1,"161":0,"162":0,"163":0,"164":0,"166":0,"168":0,"171":0,"172":0,"173":0,"175":0,"179":0,"183":1,"185":0,"186":0,"187":0,"188":0,"189":0,"192":0,"195":0,"198":0,"199":0,"200":0,"205":0,"206":0,"207":0,"208":0,"210":0,"216":1,"217":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/importer/dir-flat.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/importer/dir-flat.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":1,"39":0},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":14},"end":{"line":13,"column":22}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":6},"end":{"line":19,"column":30}}},"3":{"name":"(anonymous_3)","line":26,"loc":{"start":{"line":26,"column":6},"end":{"line":26,"column":23}}},"4":{"name":"(anonymous_4)","line":30,"loc":{"start":{"line":30,"column":13},"end":{"line":30,"column":16}}},"5":{"name":"(anonymous_5)","line":34,"loc":{"start":{"line":34,"column":22},"end":{"line":34,"column":25}}},"6":{"name":"(anonymous_6)","line":38,"loc":{"start":{"line":38,"column":12},"end":{"line":38,"column":23}}},"7":{"name":"(anonymous_7)","line":42,"loc":{"start":{"line":42,"column":18},"end":{"line":42,"column":39}}},"8":{"name":"(anonymous_8)","line":52,"loc":{"start":{"line":52,"column":8},"end":{"line":52,"column":47}}},"9":{"name":"createDirFlat","line":89,"loc":{"start":{"line":89,"column":0},"end":{"line":89,"column":31}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":51}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":44}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":27}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":36}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":37}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":29}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":29}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":28}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":11}},"10":{"start":{"line":15,"column":4},"end":{"line":15,"column":23}},"11":{"start":{"line":16,"column":4},"end":{"line":16,"column":30}},"12":{"start":{"line":20,"column":4},"end":{"line":20,"column":30}},"13":{"start":{"line":21,"column":4},"end":{"line":21,"column":25}},"14":{"start":{"line":22,"column":4},"end":{"line":22,"column":32}},"15":{"start":{"line":23,"column":4},"end":{"line":23,"column":30}},"16":{"start":{"line":27,"column":4},"end":{"line":27,"column":64}},"17":{"start":{"line":27,"column":27},"end":{"line":27,"column":63}},"18":{"start":{"line":31,"column":4},"end":{"line":31,"column":45}},"19":{"start":{"line":35,"column":4},"end":{"line":35,"column":28}},"20":{"start":{"line":39,"column":4},"end":{"line":39,"column":90}},"21":{"start":{"line":39,"column":27},"end":{"line":39,"column":89}},"22":{"start":{"line":43,"column":4},"end":{"line":49,"column":5}},"23":{"start":{"line":46,"column":8},"end":{"line":46,"column":52}},"24":{"start":{"line":53,"column":4},"end":{"line":57,"column":8}},"25":{"start":{"line":55,"column":8},"end":{"line":55,"column":41}},"26":{"start":{"line":56,"column":8},"end":{"line":56,"column":60}},"27":{"start":{"line":59,"column":4},"end":{"line":59,"column":39}},"28":{"start":{"line":60,"column":4},"end":{"line":83,"column":15}},"29":{"start":{"line":62,"column":22},"end":{"line":62,"column":68}},"30":{"start":{"line":64,"column":10},"end":{"line":69,"column":41}},"31":{"start":{"line":69,"column":21},"end":{"line":69,"column":40}},"32":{"start":{"line":72,"column":10},"end":{"line":72,"column":41}},"33":{"start":{"line":73,"column":10},"end":{"line":73,"column":31}},"34":{"start":{"line":74,"column":10},"end":{"line":78,"column":11}},"35":{"start":{"line":79,"column":10},"end":{"line":79,"column":31}},"36":{"start":{"line":80,"column":10},"end":{"line":80,"column":30}},"37":{"start":{"line":87,"column":0},"end":{"line":87,"column":30}},"38":{"start":{"line":89,"column":0},"end":{"line":91,"column":1}},"39":{"start":{"line":90,"column":2},"end":{"line":90,"column":27}}},"branchMap":{},"code":["'use strict'","","const asyncEachSeries = require('async/eachSeries')","const waterfall = require('async/waterfall')","const CID = require('cids')","const dagPB = require('ipld-dag-pb')","const UnixFS = require('ipfs-unixfs')","const DAGLink = dagPB.DAGLink","const DAGNode = dagPB.DAGNode","const Dir = require('./dir')","","class DirFlat extends Dir {","  constructor (props) {","    super()","    this._children = {}","    Object.assign(this, props)","  }","","  put (name, value, callback) {","    this.multihash = undefined","    this.size = undefined","    this._children[name] = value","    process.nextTick(callback)","  }","","  get (name, callback) {","    process.nextTick(() => callback(null, this._children[name]))","  }","","  childCount () {","    return Object.keys(this._children).length","  }","","  directChildrenCount () {","    return this.childCount()","  }","","  onlyChild (callback) {","    process.nextTick(() => callback(null, this._children[Object.keys(this._children)[0]]))","  }","","  eachChildSeries (iterator, callback) {","    asyncEachSeries(","      Object.keys(this._children),","      (key, callback) => {","        iterator(key, this._children[key], callback)","      },","      callback","    )","  }","","  flush (path, ipldResolver, source, callback) {","    const links = Object.keys(this._children)","      .map((key) => {","        const child = this._children[key]","        return new DAGLink(key, child.size, child.multihash)","      })","","    const dir = new UnixFS('directory')","    waterfall(","      [","        (callback) => DAGNode.create(dir.marshal(), links, callback),","        (node, callback) => {","          ipldResolver.put(","            node,","            {","              cid: new CID(node.multihash)","            },","            (err) => callback(err, node))","        },","        (node, callback) => {","          this.multihash = node.multihash","          this.size = node.size","          const pushable = {","            path: path,","            multihash: node.multihash,","            size: node.size","          }","          source.push(pushable)","          callback(null, node)","        }","      ],","      callback)","  }","}","","module.exports = createDirFlat","","function createDirFlat (props) {","  return new DirFlat(props)","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"14":0,"15":0,"16":0,"20":0,"21":0,"22":0,"23":0,"27":0,"31":0,"35":0,"39":0,"43":0,"46":0,"53":0,"55":0,"56":0,"59":0,"60":0,"62":0,"64":0,"69":0,"72":0,"73":0,"74":0,"79":0,"80":0,"87":1,"89":1,"90":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/importer/dir.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/importer/dir.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":1}}},"branchMap":{},"code":["'use strict'","","module.exports = class Dir {","}",""],"l":{"3":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/importer/flat-to-shard.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/importer/flat-to-shard.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"flatToShard","line":8,"loc":{"start":{"line":8,"column":0},"end":{"line":8,"column":55}}},"2":{"name":"maybeFlatToShardOne","line":43,"loc":{"start":{"line":43,"column":0},"end":{"line":43,"column":56}}},"3":{"name":"definitelyShardOne","line":51,"loc":{"start":{"line":51,"column":0},"end":{"line":51,"column":47}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":44}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":43}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"4":{"start":{"line":8,"column":0},"end":{"line":41,"column":1}},"5":{"start":{"line":9,"column":2},"end":{"line":40,"column":4}},"6":{"start":{"line":10,"column":4},"end":{"line":13,"column":5}},"7":{"start":{"line":11,"column":6},"end":{"line":11,"column":19}},"8":{"start":{"line":12,"column":6},"end":{"line":12,"column":12}},"9":{"start":{"line":15,"column":4},"end":{"line":15,"column":32}},"10":{"start":{"line":16,"column":4},"end":{"line":39,"column":5}},"11":{"start":{"line":17,"column":6},"end":{"line":35,"column":18}},"12":{"start":{"line":19,"column":10},"end":{"line":26,"column":11}},"13":{"start":{"line":20,"column":12},"end":{"line":22,"column":13}},"14":{"start":{"line":21,"column":14},"end":{"line":21,"column":35}},"15":{"start":{"line":23,"column":12},"end":{"line":23,"column":58}},"16":{"start":{"line":25,"column":12},"end":{"line":25,"column":22}},"17":{"start":{"line":29,"column":10},"end":{"line":33,"column":11}},"18":{"start":{"line":30,"column":12},"end":{"line":30,"column":60}},"19":{"start":{"line":32,"column":12},"end":{"line":32,"column":34}},"20":{"start":{"line":38,"column":6},"end":{"line":38,"column":28}},"21":{"start":{"line":43,"column":0},"end":{"line":49,"column":1}},"22":{"start":{"line":44,"column":2},"end":{"line":48,"column":3}},"23":{"start":{"line":45,"column":4},"end":{"line":45,"column":37}},"24":{"start":{"line":47,"column":4},"end":{"line":47,"column":23}},"25":{"start":{"line":51,"column":0},"end":{"line":74,"column":1}},"26":{"start":{"line":52,"column":2},"end":{"line":60,"column":4}},"27":{"start":{"line":62,"column":2},"end":{"line":73,"column":3}},"28":{"start":{"line":64,"column":6},"end":{"line":64,"column":38}},"29":{"start":{"line":67,"column":6},"end":{"line":71,"column":7}},"30":{"start":{"line":68,"column":8},"end":{"line":68,"column":21}},"31":{"start":{"line":70,"column":8},"end":{"line":70,"column":29}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":4}},{"start":{"line":10,"column":4},"end":{"line":10,"column":4}}]},"2":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":16,"column":4}},{"start":{"line":16,"column":4},"end":{"line":16,"column":4}}]},"3":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":10},"end":{"line":19,"column":10}},{"start":{"line":19,"column":10},"end":{"line":19,"column":10}}]},"4":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":12},"end":{"line":20,"column":12}},{"start":{"line":20,"column":12},"end":{"line":20,"column":12}}]},"5":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":10},"end":{"line":29,"column":10}},{"start":{"line":29,"column":10},"end":{"line":29,"column":10}}]},"6":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]},"7":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":6},"end":{"line":44,"column":14}},{"start":{"line":44,"column":18},"end":{"line":44,"column":56}}]},"8":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":6},"end":{"line":67,"column":6}},{"start":{"line":67,"column":6},"end":{"line":67,"column":6}}]}},"code":["'use strict'","","const waterfall = require('async/waterfall')","const DirSharded = require('./dir-sharded')","","module.exports = flatToShard","","function flatToShard (child, dir, threshold, callback) {","  maybeFlatToShardOne(dir, threshold, (err, newDir) => {","    if (err) {","      callback(err)","      return // early","    }","","    const parent = newDir.parent","    if (parent) {","      waterfall([","        (callback) => {","          if (newDir !== dir) {","            if (child) {","              child.parent = newDir","            }","            parent.put(newDir.parentKey, newDir, callback)","          } else {","            callback()","          }","        },","        (callback) => {","          if (parent) {","            flatToShard(newDir, parent, threshold, callback)","          } else {","            callback(null, newDir)","          }","        }","      ], callback)","    } else {","      // no parent, we're done climbing tree","      callback(null, newDir)","    }","  })","}","","function maybeFlatToShardOne (dir, threshold, callback) {","  if (dir.flat && dir.directChildrenCount() >= threshold) {","    definitelyShardOne(dir, callback)","  } else {","    callback(null, dir)","  }","}","","function definitelyShardOne (oldDir, callback) {","  const newDir = DirSharded({","    root: oldDir.root,","    dir: true,","    parent: oldDir.parent,","    parentKey: oldDir.parentKey,","    path: oldDir.path,","    dirty: oldDir.dirty,","    flat: false","  })","","  oldDir.eachChildSeries(","    (key, value, callback) => {","      newDir.put(key, value, callback)","    },","    (err) => {","      if (err) {","        callback(err)","      } else {","        callback(err, newDir)","      }","    }","  )","}",""],"l":{"3":1,"4":1,"6":1,"8":1,"9":0,"10":0,"11":0,"12":0,"15":0,"16":0,"17":0,"19":0,"20":0,"21":0,"23":0,"25":0,"29":0,"30":0,"32":0,"38":0,"43":1,"44":0,"45":0,"47":0,"51":1,"52":0,"62":0,"64":0,"67":0,"68":0,"70":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/importer/dir-sharded.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/importer/dir-sharded.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":1,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"(anonymous_1)","line":16,"loc":{"start":{"line":16,"column":15},"end":{"line":16,"column":42}}},"2":{"name":"(anonymous_2)","line":43,"loc":{"start":{"line":43,"column":14},"end":{"line":43,"column":32}}},"3":{"name":"(anonymous_3)","line":51,"loc":{"start":{"line":51,"column":6},"end":{"line":51,"column":30}}},"4":{"name":"(anonymous_4)","line":55,"loc":{"start":{"line":55,"column":6},"end":{"line":55,"column":23}}},"5":{"name":"(anonymous_5)","line":59,"loc":{"start":{"line":59,"column":13},"end":{"line":59,"column":16}}},"6":{"name":"(anonymous_6)","line":63,"loc":{"start":{"line":63,"column":22},"end":{"line":63,"column":25}}},"7":{"name":"(anonymous_7)","line":67,"loc":{"start":{"line":67,"column":12},"end":{"line":67,"column":23}}},"8":{"name":"(anonymous_8)","line":71,"loc":{"start":{"line":71,"column":18},"end":{"line":71,"column":39}}},"9":{"name":"(anonymous_9)","line":75,"loc":{"start":{"line":75,"column":8},"end":{"line":75,"column":47}}},"10":{"name":"createDirSharded","line":90,"loc":{"start":{"line":90,"column":0},"end":{"line":90,"column":34}}},"11":{"name":"flush","line":94,"loc":{"start":{"line":94,"column":0},"end":{"line":94,"column":71}}},"12":{"name":"collectChild","line":121,"loc":{"start":{"line":121,"column":2},"end":{"line":121,"column":49}}},"13":{"name":"haveLinks","line":140,"loc":{"start":{"line":140,"column":2},"end":{"line":140,"column":29}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":38}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":44}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":36}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":37}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":29}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":29}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":50}},"10":{"start":{"line":12,"column":0},"end":{"line":12,"column":28}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":33}},"12":{"start":{"line":16,"column":0},"end":{"line":35,"column":1}},"13":{"start":{"line":17,"column":2},"end":{"line":34,"column":4}},"14":{"start":{"line":18,"column":4},"end":{"line":33,"column":5}},"15":{"start":{"line":19,"column":6},"end":{"line":19,"column":19}},"16":{"start":{"line":25,"column":6},"end":{"line":25,"column":40}},"17":{"start":{"line":26,"column":6},"end":{"line":26,"column":36}},"18":{"start":{"line":27,"column":6},"end":{"line":27,"column":39}},"19":{"start":{"line":29,"column":6},"end":{"line":31,"column":7}},"20":{"start":{"line":30,"column":8},"end":{"line":30,"column":44}},"21":{"start":{"line":32,"column":6},"end":{"line":32,"column":28}},"22":{"start":{"line":36,"column":0},"end":{"line":36,"column":18}},"23":{"start":{"line":38,"column":0},"end":{"line":40,"column":1}},"24":{"start":{"line":44,"column":4},"end":{"line":44,"column":11}},"25":{"start":{"line":45,"column":4},"end":{"line":45,"column":63}},"26":{"start":{"line":46,"column":4},"end":{"line":46,"column":27}},"27":{"start":{"line":47,"column":4},"end":{"line":47,"column":34}},"28":{"start":{"line":48,"column":4},"end":{"line":48,"column":30}},"29":{"start":{"line":52,"column":4},"end":{"line":52,"column":43}},"30":{"start":{"line":56,"column":4},"end":{"line":56,"column":36}},"31":{"start":{"line":60,"column":4},"end":{"line":60,"column":35}},"32":{"start":{"line":64,"column":4},"end":{"line":64,"column":39}},"33":{"start":{"line":68,"column":4},"end":{"line":68,"column":36}},"34":{"start":{"line":72,"column":4},"end":{"line":72,"column":51}},"35":{"start":{"line":76,"column":4},"end":{"line":84,"column":6}},"36":{"start":{"line":77,"column":6},"end":{"line":82,"column":7}},"37":{"start":{"line":78,"column":8},"end":{"line":78,"column":21}},"38":{"start":{"line":80,"column":8},"end":{"line":80,"column":39}},"39":{"start":{"line":81,"column":8},"end":{"line":81,"column":29}},"40":{"start":{"line":83,"column":6},"end":{"line":83,"column":26}},"41":{"start":{"line":88,"column":0},"end":{"line":88,"column":33}},"42":{"start":{"line":90,"column":0},"end":{"line":92,"column":1}},"43":{"start":{"line":91,"column":2},"end":{"line":91,"column":30}},"44":{"start":{"line":94,"column":0},"end":{"line":172,"column":1}},"45":{"start":{"line":95,"column":2},"end":{"line":95,"column":35}},"46":{"start":{"line":96,"column":2},"end":{"line":96,"column":15}},"47":{"start":{"line":97,"column":2},"end":{"line":97,"column":18}},"48":{"start":{"line":98,"column":2},"end":{"line":119,"column":3}},"49":{"start":{"line":99,"column":10},"end":{"line":99,"column":33}},"50":{"start":{"line":101,"column":6},"end":{"line":101,"column":39}},"51":{"start":{"line":102,"column":6},"end":{"line":110,"column":7}},"52":{"start":{"line":103,"column":8},"end":{"line":106,"column":10}},"53":{"start":{"line":104,"column":10},"end":{"line":104,"column":17}},"54":{"start":{"line":105,"column":10},"end":{"line":105,"column":23}},"55":{"start":{"line":108,"column":8},"end":{"line":108,"column":15}},"56":{"start":{"line":109,"column":8},"end":{"line":109,"column":18}},"57":{"start":{"line":113,"column":6},"end":{"line":116,"column":7}},"58":{"start":{"line":114,"column":8},"end":{"line":114,"column":21}},"59":{"start":{"line":115,"column":8},"end":{"line":115,"column":14}},"60":{"start":{"line":117,"column":6},"end":{"line":117,"column":22}},"61":{"start":{"line":121,"column":2},"end":{"line":138,"column":3}},"62":{"start":{"line":122,"column":4},"end":{"line":122,"column":73}},"63":{"start":{"line":123,"column":4},"end":{"line":137,"column":5}},"64":{"start":{"line":124,"column":6},"end":{"line":131,"column":8}},"65":{"start":{"line":125,"column":8},"end":{"line":128,"column":9}},"66":{"start":{"line":126,"column":10},"end":{"line":126,"column":23}},"67":{"start":{"line":127,"column":10},"end":{"line":127,"column":16}},"68":{"start":{"line":129,"column":8},"end":{"line":129,"column":71}},"69":{"start":{"line":130,"column":8},"end":{"line":130,"column":18}},"70":{"start":{"line":133,"column":6},"end":{"line":133,"column":31}},"71":{"start":{"line":134,"column":6},"end":{"line":134,"column":43}},"72":{"start":{"line":135,"column":6},"end":{"line":135,"column":65}},"73":{"start":{"line":136,"column":6},"end":{"line":136,"column":16}},"74":{"start":{"line":140,"column":2},"end":{"line":171,"column":3}},"75":{"start":{"line":143,"column":4},"end":{"line":143,"column":58}},"76":{"start":{"line":144,"column":4},"end":{"line":144,"column":58}},"77":{"start":{"line":145,"column":4},"end":{"line":145,"column":35}},"78":{"start":{"line":146,"column":4},"end":{"line":146,"column":38}},"79":{"start":{"line":147,"column":4},"end":{"line":170,"column":15}},"80":{"start":{"line":149,"column":22},"end":{"line":149,"column":68}},"81":{"start":{"line":151,"column":10},"end":{"line":156,"column":41}},"82":{"start":{"line":156,"column":21},"end":{"line":156,"column":40}},"83":{"start":{"line":159,"column":10},"end":{"line":163,"column":11}},"84":{"start":{"line":164,"column":10},"end":{"line":166,"column":11}},"85":{"start":{"line":165,"column":12},"end":{"line":165,"column":33}},"86":{"start":{"line":167,"column":10},"end":{"line":167,"column":30}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":18,"column":4}},{"start":{"line":18,"column":4},"end":{"line":18,"column":4}}]},"2":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":6},"end":{"line":77,"column":6}},{"start":{"line":77,"column":6},"end":{"line":77,"column":6}}]},"3":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":6},"end":{"line":102,"column":6}},{"start":{"line":102,"column":6},"end":{"line":102,"column":6}}]},"4":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":6},"end":{"line":113,"column":6}},{"start":{"line":113,"column":6},"end":{"line":113,"column":6}}]},"5":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":4},"end":{"line":123,"column":4}},{"start":{"line":123,"column":4},"end":{"line":123,"column":4}}]},"6":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":8},"end":{"line":125,"column":8}},{"start":{"line":125,"column":8},"end":{"line":125,"column":8}}]},"7":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":10},"end":{"line":164,"column":10}},{"start":{"line":164,"column":10},"end":{"line":164,"column":10}}]}},"code":["'use strict'","","const leftPad = require('left-pad')","const whilst = require('async/whilst')","const waterfall = require('async/waterfall')","const CID = require('cids')","const dagPB = require('ipld-dag-pb')","const UnixFS = require('ipfs-unixfs')","const DAGLink = dagPB.DAGLink","const DAGNode = dagPB.DAGNode","const multihashing = require('multihashing-async')","const Dir = require('./dir')","","const Bucket = require('../hamt')","","const hashFn = function (value, callback) {","  multihashing(value, 'murmur3-128', (err, hash) => {","    if (err) {","      callback(err)","    } else {","      // Multihashing inserts preamble of 2 bytes. Remove it.","      // Also, murmur3 outputs 128 bit but, accidently, IPFS Go's","      // implementation only uses the first 64, so we must do the same","      // for parity..","      const justHash = hash.slice(2, 10)","      const length = justHash.length","      const result = new Buffer(length)","      // TODO: invert buffer because that's how Go impl does it","      for (let i = 0; i < length; i++) {","        result[length - i - 1] = justHash[i]","      }","      callback(null, result)","    }","  })","}","hashFn.code = 0x22 // TODO: get this from multihashing-async?","","const defaultOptions = {","  hashFn: hashFn","}","","class DirSharded extends Dir {","  constructor (props, _options) {","    super()","    const options = Object.assign({}, defaultOptions, _options)","    this._options = options","    this._bucket = Bucket(options)","    Object.assign(this, props)","  }","","  put (name, value, callback) {","    this._bucket.put(name, value, callback)","  }","","  get (name, callback) {","    this._bucket.get(name, callback)","  }","","  childCount () {","    return this._bucket.leafCount()","  }","","  directChildrenCount () {","    return this._bucket.childrenCount()","  }","","  onlyChild (callback) {","    this._bucket.onlyChild(callback)","  }","","  eachChildSeries (iterator, callback) {","    this._bucket.eachLeafSeries(iterator, callback)","  }","","  flush (path, ipldResolver, source, callback) {","    flush(this._options, this._bucket, path, ipldResolver, source, (err, node) => {","      if (err) {","        callback(err)","      } else {","        this.multihash = node.multihash","        this.size = node.size","      }","      callback(null, node)","    })","  }","}","","module.exports = createDirSharded","","function createDirSharded (props) {","  return new DirSharded(props)","}","","function flush (options, bucket, path, ipldResolver, source, callback) {","  const children = bucket._children // TODO: intromission","  let index = 0","  const links = []","  whilst(","    () => index < children.length,","    (callback) => {","      const child = children.get(index)","      if (child) {","        collectChild(child, index, (err) => {","          index++","          callback(err)","        })","      } else {","        index++","        callback()","      }","    },","    (err) => {","      if (err) {","        callback(err)","        return // early","      }","      haveLinks(links)","    }","  )","","  function collectChild (child, index, callback) {","    const labelPrefix = leftPad(index.toString(16).toUpperCase(), 2, '0')","    if (Bucket.isBucket(child)) {","      flush(options, child, path, ipldResolver, null, (err, node) => {","        if (err) {","          callback(err)","          return // early","        }","        links.push(new DAGLink(labelPrefix, node.size, node.multihash))","        callback()","      })","    } else {","      const value = child.value","      const label = labelPrefix + child.key","      links.push(new DAGLink(label, value.size, value.multihash))","      callback()","    }","  }","","  function haveLinks (links) {","    // go-ipfs uses little endian, that's why we have to","    // reverse the bit field before storing it","    const data = new Buffer(children.bitField().reverse())","    const dir = new UnixFS('hamt-sharded-directory', data)","    dir.fanout = bucket.tableSize()","    dir.hashType = options.hashFn.code","    waterfall(","      [","        (callback) => DAGNode.create(dir.marshal(), links, callback),","        (node, callback) => {","          ipldResolver.put(","            node,","            {","              cid: new CID(node.multihash)","            },","            (err) => callback(err, node))","        },","        (node, callback) => {","          const pushable = {","            path: path,","            multihash: node.multihash,","            size: node.size","          }","          if (source) {","            source.push(pushable)","          }","          callback(null, node)","        }","      ],","      callback)","  }","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"14":1,"16":1,"17":0,"18":0,"19":0,"25":0,"26":0,"27":0,"29":0,"30":0,"32":0,"36":1,"38":1,"44":0,"45":0,"46":0,"47":0,"48":0,"52":0,"56":0,"60":0,"64":0,"68":0,"72":0,"76":0,"77":0,"78":0,"80":0,"81":0,"83":0,"88":1,"90":1,"91":0,"94":1,"95":0,"96":0,"97":0,"98":0,"99":0,"101":0,"102":0,"103":0,"104":0,"105":0,"108":0,"109":0,"113":0,"114":0,"115":0,"117":0,"121":1,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"129":0,"130":0,"133":0,"134":0,"135":0,"136":0,"140":1,"143":0,"144":0,"145":0,"146":0,"147":0,"149":0,"151":0,"156":0,"159":0,"164":0,"165":0,"167":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/hamt/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/hamt/index.js","s":{"1":1,"2":1,"3":0,"4":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"createHAMT","line":5,"loc":{"start":{"line":5,"column":17},"end":{"line":5,"column":47}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":5,"column":0},"end":{"line":7,"column":1}},"3":{"start":{"line":6,"column":2},"end":{"line":6,"column":28}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":41}}},"branchMap":{},"code":["'use strict'","","const Bucket = require('./bucket')","","module.exports = function createHAMT (options) {","  return new Bucket(options)","}","","module.exports.isBucket = Bucket.isBucket",""],"l":{"3":1,"5":1,"6":0,"9":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/hamt/bucket.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/hamt/bucket.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":1,"107":0,"108":1,"109":0,"110":1,"111":0,"112":1,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":14},"end":{"line":15,"column":45}}},"2":{"name":"(anonymous_2)","line":32,"loc":{"start":{"line":32,"column":18},"end":{"line":32,"column":22}}},"3":{"name":"(anonymous_3)","line":36,"loc":{"start":{"line":36,"column":6},"end":{"line":36,"column":29}}},"4":{"name":"(anonymous_4)","line":48,"loc":{"start":{"line":48,"column":6},"end":{"line":48,"column":22}}},"5":{"name":"(anonymous_5)","line":58,"loc":{"start":{"line":58,"column":6},"end":{"line":58,"column":22}}},"6":{"name":"(anonymous_6)","line":72,"loc":{"start":{"line":72,"column":12},"end":{"line":72,"column":15}}},"7":{"name":"(anonymous_7)","line":81,"loc":{"start":{"line":81,"column":16},"end":{"line":81,"column":19}}},"8":{"name":"(anonymous_8)","line":85,"loc":{"start":{"line":85,"column":12},"end":{"line":85,"column":23}}},"9":{"name":"(anonymous_9)","line":89,"loc":{"start":{"line":89,"column":17},"end":{"line":89,"column":38}}},"10":{"name":"(anonymous_10)","line":102,"loc":{"start":{"line":102,"column":12},"end":{"line":102,"column":26}}},"11":{"name":"(anonymous_11)","line":116,"loc":{"start":{"line":116,"column":17},"end":{"line":116,"column":51}}},"12":{"name":"(anonymous_12)","line":120,"loc":{"start":{"line":120,"column":9},"end":{"line":120,"column":12}}},"13":{"name":"(anonymous_13)","line":124,"loc":{"start":{"line":124,"column":14},"end":{"line":124,"column":17}}},"14":{"name":"(anonymous_14)","line":128,"loc":{"start":{"line":128,"column":12},"end":{"line":128,"column":15}}},"15":{"name":"(anonymous_15)","line":132,"loc":{"start":{"line":132,"column":13},"end":{"line":132,"column":29}}},"16":{"name":"(anonymous_16)","line":148,"loc":{"start":{"line":148,"column":13},"end":{"line":148,"column":29}}},"17":{"name":"(anonymous_17)","line":170,"loc":{"start":{"line":170,"column":23},"end":{"line":170,"column":39}}},"18":{"name":"(anonymous_18)","line":200,"loc":{"start":{"line":200,"column":9},"end":{"line":200,"column":29}}},"19":{"name":"(anonymous_19)","line":208,"loc":{"start":{"line":208,"column":15},"end":{"line":208,"column":29}}},"20":{"name":"(anonymous_20)","line":215,"loc":{"start":{"line":215,"column":9},"end":{"line":215,"column":15}}},"21":{"name":"(anonymous_21)","line":223,"loc":{"start":{"line":223,"column":9},"end":{"line":223,"column":12}}},"22":{"name":"(anonymous_22)","line":243,"loc":{"start":{"line":243,"column":6},"end":{"line":243,"column":14}}},"23":{"name":"exists","line":248,"loc":{"start":{"line":248,"column":0},"end":{"line":248,"column":20}}},"24":{"name":"mapNode","line":252,"loc":{"start":{"line":252,"column":0},"end":{"line":252,"column":31}}},"25":{"name":"reduceNodes","line":256,"loc":{"start":{"line":256,"column":0},"end":{"line":256,"column":29}}},"26":{"name":"asyncTransformBucket","line":260,"loc":{"start":{"line":260,"column":0},"end":{"line":260,"column":72}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":43}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":32}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":46}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":45}},"5":{"start":{"line":8,"column":0},"end":{"line":10,"column":1}},"6":{"start":{"line":16,"column":4},"end":{"line":16,"column":62}},"7":{"start":{"line":17,"column":4},"end":{"line":17,"column":22}},"8":{"start":{"line":18,"column":4},"end":{"line":18,"column":25}},"9":{"start":{"line":19,"column":4},"end":{"line":19,"column":35}},"10":{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},"11":{"start":{"line":22,"column":6},"end":{"line":22,"column":56}},"12":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"13":{"start":{"line":27,"column":6},"end":{"line":27,"column":57}},"14":{"start":{"line":29,"column":4},"end":{"line":29,"column":38}},"15":{"start":{"line":33,"column":4},"end":{"line":33,"column":30}},"16":{"start":{"line":37,"column":4},"end":{"line":45,"column":6}},"17":{"start":{"line":38,"column":6},"end":{"line":41,"column":7}},"18":{"start":{"line":39,"column":8},"end":{"line":39,"column":21}},"19":{"start":{"line":40,"column":8},"end":{"line":40,"column":14}},"20":{"start":{"line":43,"column":6},"end":{"line":43,"column":44}},"21":{"start":{"line":44,"column":6},"end":{"line":44,"column":16}},"22":{"start":{"line":49,"column":4},"end":{"line":55,"column":6}},"23":{"start":{"line":50,"column":6},"end":{"line":54,"column":7}},"24":{"start":{"line":51,"column":8},"end":{"line":51,"column":21}},"25":{"start":{"line":53,"column":8},"end":{"line":53,"column":44}},"26":{"start":{"line":59,"column":4},"end":{"line":69,"column":6}},"27":{"start":{"line":60,"column":6},"end":{"line":63,"column":7}},"28":{"start":{"line":61,"column":8},"end":{"line":61,"column":21}},"29":{"start":{"line":62,"column":8},"end":{"line":62,"column":14}},"30":{"start":{"line":64,"column":6},"end":{"line":64,"column":47}},"31":{"start":{"line":65,"column":6},"end":{"line":67,"column":7}},"32":{"start":{"line":66,"column":8},"end":{"line":66,"column":38}},"33":{"start":{"line":68,"column":6},"end":{"line":68,"column":20}},"34":{"start":{"line":73,"column":4},"end":{"line":78,"column":9}},"35":{"start":{"line":74,"column":6},"end":{"line":76,"column":7}},"36":{"start":{"line":75,"column":8},"end":{"line":75,"column":38}},"37":{"start":{"line":77,"column":6},"end":{"line":77,"column":20}},"38":{"start":{"line":82,"column":4},"end":{"line":82,"column":32}},"39":{"start":{"line":86,"column":4},"end":{"line":86,"column":65}},"40":{"start":{"line":86,"column":27},"end":{"line":86,"column":64}},"41":{"start":{"line":90,"column":4},"end":{"line":99,"column":15}},"42":{"start":{"line":93,"column":8},"end":{"line":97,"column":9}},"43":{"start":{"line":94,"column":10},"end":{"line":94,"column":44}},"44":{"start":{"line":96,"column":10},"end":{"line":96,"column":46}},"45":{"start":{"line":104,"column":4},"end":{"line":113,"column":11}},"46":{"start":{"line":105,"column":6},"end":{"line":111,"column":7}},"47":{"start":{"line":106,"column":8},"end":{"line":110,"column":9}},"48":{"start":{"line":107,"column":10},"end":{"line":107,"column":48}},"49":{"start":{"line":109,"column":10},"end":{"line":109,"column":37}},"50":{"start":{"line":112,"column":6},"end":{"line":112,"column":16}},"51":{"start":{"line":117,"column":4},"end":{"line":117,"column":63}},"52":{"start":{"line":121,"column":4},"end":{"line":121,"column":47}},"53":{"start":{"line":125,"column":4},"end":{"line":125,"column":52}},"54":{"start":{"line":129,"column":4},"end":{"line":129,"column":42}},"55":{"start":{"line":133,"column":4},"end":{"line":145,"column":6}},"56":{"start":{"line":134,"column":6},"end":{"line":137,"column":7}},"57":{"start":{"line":135,"column":8},"end":{"line":135,"column":21}},"58":{"start":{"line":136,"column":8},"end":{"line":136,"column":14}},"59":{"start":{"line":139,"column":6},"end":{"line":139,"column":49}},"60":{"start":{"line":140,"column":6},"end":{"line":144,"column":7}},"61":{"start":{"line":141,"column":8},"end":{"line":141,"column":29}},"62":{"start":{"line":143,"column":8},"end":{"line":143,"column":33}},"63":{"start":{"line":149,"column":4},"end":{"line":149,"column":45}},"64":{"start":{"line":150,"column":4},"end":{"line":167,"column":6}},"65":{"start":{"line":151,"column":6},"end":{"line":154,"column":7}},"66":{"start":{"line":152,"column":8},"end":{"line":152,"column":21}},"67":{"start":{"line":153,"column":8},"end":{"line":153,"column":14}},"68":{"start":{"line":156,"column":6},"end":{"line":156,"column":45}},"69":{"start":{"line":157,"column":6},"end":{"line":166,"column":7}},"70":{"start":{"line":158,"column":8},"end":{"line":158,"column":45}},"71":{"start":{"line":160,"column":8},"end":{"line":164,"column":9}},"72":{"start":{"line":165,"column":8},"end":{"line":165,"column":29}},"73":{"start":{"line":171,"column":4},"end":{"line":197,"column":6}},"74":{"start":{"line":172,"column":6},"end":{"line":175,"column":7}},"75":{"start":{"line":173,"column":8},"end":{"line":173,"column":21}},"76":{"start":{"line":174,"column":8},"end":{"line":174,"column":14}},"77":{"start":{"line":176,"column":6},"end":{"line":176,"column":47}},"78":{"start":{"line":177,"column":6},"end":{"line":196,"column":7}},"79":{"start":{"line":180,"column":8},"end":{"line":180,"column":73}},"80":{"start":{"line":181,"column":8},"end":{"line":181,"column":52}},"81":{"start":{"line":184,"column":8},"end":{"line":192,"column":10}},"82":{"start":{"line":185,"column":10},"end":{"line":188,"column":11}},"83":{"start":{"line":186,"column":12},"end":{"line":186,"column":25}},"84":{"start":{"line":187,"column":12},"end":{"line":187,"column":18}},"85":{"start":{"line":190,"column":10},"end":{"line":190,"column":66}},"86":{"start":{"line":191,"column":10},"end":{"line":191,"column":59}},"87":{"start":{"line":195,"column":8},"end":{"line":195,"column":29}},"88":{"start":{"line":201,"column":4},"end":{"line":205,"column":6}},"89":{"start":{"line":209,"column":4},"end":{"line":211,"column":5}},"90":{"start":{"line":210,"column":6},"end":{"line":210,"column":22}},"91":{"start":{"line":212,"column":4},"end":{"line":212,"column":35}},"92":{"start":{"line":216,"column":4},"end":{"line":218,"column":5}},"93":{"start":{"line":217,"column":6},"end":{"line":217,"column":22}},"94":{"start":{"line":219,"column":4},"end":{"line":219,"column":29}},"95":{"start":{"line":220,"column":4},"end":{"line":220,"column":17}},"96":{"start":{"line":224,"column":4},"end":{"line":240,"column":5}},"97":{"start":{"line":225,"column":6},"end":{"line":239,"column":7}},"98":{"start":{"line":227,"column":8},"end":{"line":227,"column":53}},"99":{"start":{"line":228,"column":8},"end":{"line":236,"column":9}},"100":{"start":{"line":229,"column":10},"end":{"line":229,"column":37}},"101":{"start":{"line":230,"column":10},"end":{"line":230,"column":41}},"102":{"start":{"line":231,"column":10},"end":{"line":234,"column":11}},"103":{"start":{"line":235,"column":10},"end":{"line":235,"column":68}},"104":{"start":{"line":238,"column":8},"end":{"line":238,"column":46}},"105":{"start":{"line":244,"column":4},"end":{"line":244,"column":36}},"106":{"start":{"line":248,"column":0},"end":{"line":250,"column":1}},"107":{"start":{"line":249,"column":2},"end":{"line":249,"column":19}},"108":{"start":{"line":252,"column":0},"end":{"line":254,"column":1}},"109":{"start":{"line":253,"column":2},"end":{"line":253,"column":17}},"110":{"start":{"line":256,"column":0},"end":{"line":258,"column":1}},"111":{"start":{"line":257,"column":2},"end":{"line":257,"column":14}},"112":{"start":{"line":260,"column":0},"end":{"line":287,"column":1}},"113":{"start":{"line":261,"column":2},"end":{"line":286,"column":3}},"114":{"start":{"line":264,"column":6},"end":{"line":277,"column":7}},"115":{"start":{"line":265,"column":8},"end":{"line":265,"column":68}},"116":{"start":{"line":267,"column":8},"end":{"line":276,"column":10}},"117":{"start":{"line":268,"column":10},"end":{"line":275,"column":11}},"118":{"start":{"line":269,"column":12},"end":{"line":269,"column":25}},"119":{"start":{"line":271,"column":12},"end":{"line":274,"column":14}},"120":{"start":{"line":280,"column":6},"end":{"line":284,"column":7}},"121":{"start":{"line":281,"column":8},"end":{"line":281,"column":21}},"122":{"start":{"line":283,"column":8},"end":{"line":283,"column":45}},"123":{"start":{"line":289,"column":0},"end":{"line":289,"column":23}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":4}},{"start":{"line":21,"column":4},"end":{"line":21,"column":4}}]},"2":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]},"3":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":6},"end":{"line":38,"column":6}},{"start":{"line":38,"column":6},"end":{"line":38,"column":6}}]},"4":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":6},"end":{"line":50,"column":6}},{"start":{"line":50,"column":6},"end":{"line":50,"column":6}}]},"5":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":23},"end":{"line":53,"column":28}},{"start":{"line":53,"column":32},"end":{"line":53,"column":43}}]},"6":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":6},"end":{"line":60,"column":6}},{"start":{"line":60,"column":6},"end":{"line":60,"column":6}}]},"7":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":6},"end":{"line":65,"column":6}},{"start":{"line":65,"column":6},"end":{"line":65,"column":6}}]},"8":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":10},"end":{"line":65,"column":15}},{"start":{"line":65,"column":19},"end":{"line":65,"column":36}}]},"9":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":6},"end":{"line":74,"column":6}},{"start":{"line":74,"column":6},"end":{"line":74,"column":6}}]},"10":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":8},"end":{"line":93,"column":8}},{"start":{"line":93,"column":8},"end":{"line":93,"column":8}}]},"11":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":6},"end":{"line":105,"column":6}},{"start":{"line":105,"column":6},"end":{"line":105,"column":6}}]},"12":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":8},"end":{"line":106,"column":8}},{"start":{"line":106,"column":8},"end":{"line":106,"column":8}}]},"13":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":6},"end":{"line":134,"column":6}},{"start":{"line":134,"column":6},"end":{"line":134,"column":6}}]},"14":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":6},"end":{"line":140,"column":6}},{"start":{"line":140,"column":6},"end":{"line":140,"column":6}}]},"15":{"line":140,"type":"binary-expr","locations":[{"start":{"line":140,"column":10},"end":{"line":140,"column":15}},{"start":{"line":140,"column":19},"end":{"line":140,"column":36}}]},"16":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":6},"end":{"line":151,"column":6}},{"start":{"line":151,"column":6},"end":{"line":151,"column":6}}]},"17":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":6},"end":{"line":157,"column":6}},{"start":{"line":157,"column":6},"end":{"line":157,"column":6}}]},"18":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":6},"end":{"line":172,"column":6}},{"start":{"line":172,"column":6},"end":{"line":172,"column":6}}]},"19":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":6},"end":{"line":177,"column":6}},{"start":{"line":177,"column":6},"end":{"line":177,"column":6}}]},"20":{"line":177,"type":"binary-expr","locations":[{"start":{"line":177,"column":10},"end":{"line":177,"column":15}},{"start":{"line":177,"column":19},"end":{"line":177,"column":36}}]},"21":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":10},"end":{"line":185,"column":10}},{"start":{"line":185,"column":10},"end":{"line":185,"column":10}}]},"22":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":4},"end":{"line":209,"column":4}},{"start":{"line":209,"column":4},"end":{"line":209,"column":4}}]},"23":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":4},"end":{"line":216,"column":4}},{"start":{"line":216,"column":4},"end":{"line":216,"column":4}}]},"24":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":4},"end":{"line":224,"column":4}},{"start":{"line":224,"column":4},"end":{"line":224,"column":4}}]},"25":{"line":224,"type":"binary-expr","locations":[{"start":{"line":224,"column":8},"end":{"line":224,"column":20}},{"start":{"line":224,"column":24},"end":{"line":224,"column":43}}]},"26":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":6},"end":{"line":225,"column":6}},{"start":{"line":225,"column":6},"end":{"line":225,"column":6}}]},"27":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":8},"end":{"line":228,"column":8}},{"start":{"line":228,"column":8},"end":{"line":228,"column":8}}]},"28":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":6},"end":{"line":264,"column":6}},{"start":{"line":264,"column":6},"end":{"line":264,"column":6}}]},"29":{"line":268,"type":"if","locations":[{"start":{"line":268,"column":10},"end":{"line":268,"column":10}},{"start":{"line":268,"column":10},"end":{"line":268,"column":10}}]},"30":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":6},"end":{"line":280,"column":6}},{"start":{"line":280,"column":6},"end":{"line":280,"column":6}}]}},"code":["'use strict'","","const SparseArray = require('sparse-array')","const map = require('async/map')","const eachSeries = require('async/eachSeries')","const wrapHash = require('./consumable-hash')","","const defaultOptions = {","  bits: 8","}","","// TODO: make HAMT a generic NPM package","","class Bucket {","  constructor (options, parent, posAtParent) {","    this._options = Object.assign({}, defaultOptions, options)","    this._popCount = 0","    this._parent = parent","    this._posAtParent = posAtParent","","    if (!this._options.hashFn) {","      throw new Error('please define an options.hashFn')","    }","","    // make sure we only wrap options.hashFn once in the whole tree","    if (!this._options.hash) {","      this._options.hash = wrapHash(this._options.hashFn)","    }","    this._children = new SparseArray()","  }","","  static isBucket (o) {","    return o instanceof Bucket","  }","","  put (key, value, callback) {","    this._findNewBucketAndPos(key, (err, place) => {","      if (err) {","        callback(err)","        return // early","      }","","      place.bucket._putAt(place, key, value)","      callback()","    })","  }","","  get (key, callback) {","    this._findChild(key, (err, child) => {","      if (err) {","        callback(err)","      } else {","        callback(null, child && child.value)","      }","    })","  }","","  del (key, callback) {","    this._findPlace(key, (err, place) => {","      if (err) {","        callback(err)","        return // early","      }","      const child = place.bucket._at(place.pos)","      if (child && child.key === key) {","        place.bucket._delAt(place.pos)","      }","      callback(null)","    })","  }","","  leafCount () {","    this._children.reduce((acc, child) => {","      if (child instanceof Bucket) {","        return acc + child.leafCount()","      }","      return acc + 1","    }, 0)","  }","","  childrenCount () {","    return this._children.length","  }","","  onlyChild (callback) {","    process.nextTick(() => callback(null, this._children.get(0)))","  }","","  eachLeafSeries (iterator, callback) {","    eachSeries(","      this._children.compactArray(),","      (child, cb) => {","        if (child instanceof Bucket) {","          child.eachLeafSeries(iterator, cb)","        } else {","          iterator(child.key, child.value, cb)","        }","      },","      callback)","  }","","  serialize (map, reduce) {","    // serialize to a custom non-sparse representation","    return reduce(this._children.reduce((acc, child, index) => {","      if (child) {","        if (child instanceof Bucket) {","          acc.push(child.serialize(map, reduce))","        } else {","          acc.push(map(child, index))","        }","      }","      return acc","    }, []))","  }","","  asyncTransform (asyncMap, asyncReduce, callback) {","    asyncTransformBucket(this, asyncMap, asyncReduce, callback)","  }","","  toJSON () {","    return this.serialize(mapNode, reduceNodes)","  }","","  prettyPrint () {","    return JSON.stringify(this.toJSON(), null, '  ')","  }","","  tableSize () {","    return Math.pow(2, this._options.bits)","  }","","  _findChild (key, callback) {","    this._findPlace(key, (err, result) => {","      if (err) {","        callback(err)","        return // early","      }","","      const child = result.bucket._at(result.pos)","      if (child && child.key === key) {","        callback(null, child)","      } else {","        callback(null, undefined)","      }","    })","  }","","  _findPlace (key, callback) {","    const hashValue = this._options.hash(key)","    hashValue.take(this._options.bits, (err, index) => {","      if (err) {","        callback(err)","        return // early","      }","","      const child = this._children.get(index)","      if (child instanceof Bucket) {","        child._findPlace(hashValue, callback)","      } else {","        const place = {","          bucket: this,","          pos: index,","          hash: hashValue","        }","        callback(null, place)","      }","    })","  }","","  _findNewBucketAndPos (key, callback) {","    this._findPlace(key, (err, place) => {","      if (err) {","        callback(err)","        return // early","      }","      const child = place.bucket._at(place.pos)","      if (child && child.key !== key) {","        // conflict","","        const bucket = new Bucket(this._options, place.bucket, place.pos)","        place.bucket._putObjectAt(place.pos, bucket)","","        // put the previous value","        bucket._findPlace(child.hash, (err, newPlace) => {","          if (err) {","            callback(err)","            return // early","          }","","          newPlace.bucket._putAt(newPlace, child.key, child.value)","          bucket._findNewBucketAndPos(place.hash, callback)","        })","      } else {","        // no conflict, we found the place","        callback(null, place)","      }","    })","  }","","  _putAt (place, key, value) {","    this._putObjectAt(place.pos, {","      key: key,","      value: value,","      hash: place.hash","    })","  }","","  _putObjectAt (pos, object) {","    if (!this._children.get(pos)) {","      this._popCount++","    }","    this._children.set(pos, object)","  }","","  _delAt (pos) {","    if (this._children.get(pos)) {","      this._popCount--","    }","    this._children.unset(pos)","    this._level()","  }","","  _level () {","    if (this._parent && this._popCount <= 1) {","      if (this._popCount === 1) {","        // remove myself from parent, replacing me with my only child","        const onlyChild = this._children.find(exists)","        if (!(onlyChild instanceof Bucket)) {","          const hash = onlyChild.hash","          hash.untake(this._options.bits)","          const place = {","            pos: this._posAtParent,","            hash: hash","          }","          this._parent._putAt(place, onlyChild.key, onlyChild.value)","        }","      } else {","        this._parent._delAt(this._posAtParent)","      }","    }","  }","","  _at (index) {","    return this._children.get(index)","  }","}","","function exists (o) {","  return Boolean(o)","}","","function mapNode (node, index) {","  return node.key","}","","function reduceNodes (nodes) {","  return nodes","}","","function asyncTransformBucket (bucket, asyncMap, asyncReduce, callback) {","  map(","    bucket._children.compactArray(),","    (child, callback) => {","      if (child instanceof Bucket) {","        asyncTransformBucket(child, asyncMap, asyncReduce, callback)","      } else {","        asyncMap(child, (err, mappedChildren) => {","          if (err) {","            callback(err)","          } else {","            callback(null, {","              bitField: bucket._children.bitField(),","              children: mappedChildren","            })","          }","        })","      }","    },","    (err, mappedChildren) => {","      if (err) {","        callback(err)","      } else {","        asyncReduce(mappedChildren, callback)","      }","    }","  )","}","","module.exports = Bucket",""],"l":{"3":1,"4":1,"5":1,"6":1,"8":1,"16":0,"17":0,"18":0,"19":0,"21":0,"22":0,"26":0,"27":0,"29":0,"33":0,"37":0,"38":0,"39":0,"40":0,"43":0,"44":0,"49":0,"50":0,"51":0,"53":0,"59":0,"60":0,"61":0,"62":0,"64":0,"65":0,"66":0,"68":0,"73":0,"74":0,"75":0,"77":0,"82":0,"86":0,"90":0,"93":0,"94":0,"96":0,"104":0,"105":0,"106":0,"107":0,"109":0,"112":0,"117":0,"121":0,"125":0,"129":0,"133":0,"134":0,"135":0,"136":0,"139":0,"140":0,"141":0,"143":0,"149":0,"150":0,"151":0,"152":0,"153":0,"156":0,"157":0,"158":0,"160":0,"165":0,"171":0,"172":0,"173":0,"174":0,"176":0,"177":0,"180":0,"181":0,"184":0,"185":0,"186":0,"187":0,"190":0,"191":0,"195":0,"201":0,"209":0,"210":0,"212":0,"216":0,"217":0,"219":0,"220":0,"224":0,"225":0,"227":0,"228":0,"229":0,"230":0,"231":0,"235":0,"238":0,"244":0,"248":1,"249":0,"252":1,"253":0,"256":1,"257":0,"260":1,"261":0,"264":0,"265":0,"267":0,"268":0,"269":0,"271":0,"280":0,"281":0,"283":0,"289":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/hamt/consumable-hash.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/hamt/consumable-hash.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"wrapHash","line":6,"loc":{"start":{"line":6,"column":17},"end":{"line":6,"column":44}}},"2":{"name":"hashing","line":7,"loc":{"start":{"line":7,"column":9},"end":{"line":7,"column":34}}},"3":{"name":"(anonymous_3)","line":18,"loc":{"start":{"line":18,"column":14},"end":{"line":18,"column":30}}},"4":{"name":"(anonymous_4)","line":30,"loc":{"start":{"line":30,"column":7},"end":{"line":30,"column":24}}},"5":{"name":"(anonymous_5)","line":73,"loc":{"start":{"line":73,"column":9},"end":{"line":73,"column":16}}},"6":{"name":"(anonymous_6)","line":88,"loc":{"start":{"line":88,"column":19},"end":{"line":88,"column":30}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":55}},"3":{"start":{"line":6,"column":0},"end":{"line":15,"column":1}},"4":{"start":{"line":7,"column":2},"end":{"line":14,"column":3}},"5":{"start":{"line":8,"column":4},"end":{"line":13,"column":5}},"6":{"start":{"line":10,"column":6},"end":{"line":10,"column":18}},"7":{"start":{"line":12,"column":6},"end":{"line":12,"column":44}},"8":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"9":{"start":{"line":20,"column":6},"end":{"line":20,"column":57}},"10":{"start":{"line":22,"column":4},"end":{"line":22,"column":23}},"11":{"start":{"line":23,"column":4},"end":{"line":23,"column":25}},"12":{"start":{"line":24,"column":4},"end":{"line":24,"column":20}},"13":{"start":{"line":25,"column":4},"end":{"line":25,"column":27}},"14":{"start":{"line":26,"column":4},"end":{"line":26,"column":32}},"15":{"start":{"line":27,"column":4},"end":{"line":27,"column":22}},"16":{"start":{"line":31,"column":4},"end":{"line":31,"column":26}},"17":{"start":{"line":32,"column":4},"end":{"line":70,"column":5}},"18":{"start":{"line":33,"column":12},"end":{"line":33,"column":45}},"19":{"start":{"line":35,"column":8},"end":{"line":35,"column":39}},"20":{"start":{"line":38,"column":8},"end":{"line":41,"column":9}},"21":{"start":{"line":39,"column":10},"end":{"line":39,"column":23}},"22":{"start":{"line":40,"column":10},"end":{"line":40,"column":16}},"23":{"start":{"line":43,"column":8},"end":{"line":43,"column":22}},"24":{"start":{"line":46,"column":8},"end":{"line":68,"column":9}},"25":{"start":{"line":47,"column":16},"end":{"line":47,"column":31}},"26":{"start":{"line":49,"column":12},"end":{"line":49,"column":64}},"27":{"start":{"line":50,"column":12},"end":{"line":50,"column":73}},"28":{"start":{"line":51,"column":12},"end":{"line":51,"column":45}},"29":{"start":{"line":52,"column":12},"end":{"line":52,"column":49}},"30":{"start":{"line":53,"column":12},"end":{"line":53,"column":36}},"31":{"start":{"line":54,"column":12},"end":{"line":54,"column":44}},"32":{"start":{"line":55,"column":12},"end":{"line":57,"column":13}},"33":{"start":{"line":56,"column":14},"end":{"line":56,"column":40}},"34":{"start":{"line":58,"column":12},"end":{"line":58,"column":22}},"35":{"start":{"line":61,"column":12},"end":{"line":64,"column":13}},"36":{"start":{"line":62,"column":14},"end":{"line":62,"column":27}},"37":{"start":{"line":63,"column":14},"end":{"line":63,"column":20}},"38":{"start":{"line":66,"column":12},"end":{"line":66,"column":58}},"39":{"start":{"line":66,"column":35},"end":{"line":66,"column":57}},"40":{"start":{"line":74,"column":4},"end":{"line":74,"column":26}},"41":{"start":{"line":75,"column":4},"end":{"line":85,"column":5}},"42":{"start":{"line":76,"column":6},"end":{"line":76,"column":58}},"43":{"start":{"line":77,"column":6},"end":{"line":77,"column":95}},"44":{"start":{"line":78,"column":6},"end":{"line":78,"column":37}},"45":{"start":{"line":79,"column":6},"end":{"line":79,"column":39}},"46":{"start":{"line":80,"column":6},"end":{"line":80,"column":47}},"47":{"start":{"line":81,"column":6},"end":{"line":84,"column":7}},"48":{"start":{"line":82,"column":8},"end":{"line":82,"column":21}},"49":{"start":{"line":83,"column":8},"end":{"line":83,"column":34}},"50":{"start":{"line":89,"column":4},"end":{"line":89,"column":17}},"51":{"start":{"line":90,"column":4},"end":{"line":90,"column":71}},"52":{"start":{"line":91,"column":4},"end":{"line":101,"column":6}},"53":{"start":{"line":92,"column":6},"end":{"line":95,"column":7}},"54":{"start":{"line":93,"column":8},"end":{"line":93,"column":21}},"55":{"start":{"line":94,"column":8},"end":{"line":94,"column":14}},"56":{"start":{"line":97,"column":6},"end":{"line":97,"column":52}},"57":{"start":{"line":98,"column":6},"end":{"line":98,"column":32}},"58":{"start":{"line":99,"column":6},"end":{"line":99,"column":51}},"59":{"start":{"line":100,"column":6},"end":{"line":100,"column":16}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":8,"column":4}},{"start":{"line":8,"column":4},"end":{"line":8,"column":4}}]},"2":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":4}},{"start":{"line":19,"column":4},"end":{"line":19,"column":4}}]},"3":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":35}},{"start":{"line":19,"column":39},"end":{"line":19,"column":62}}]},"4":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":38,"column":8}},{"start":{"line":38,"column":8},"end":{"line":38,"column":8}}]},"5":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":12},"end":{"line":55,"column":12}},{"start":{"line":55,"column":12},"end":{"line":55,"column":12}}]},"6":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":12},"end":{"line":61,"column":12}},{"start":{"line":61,"column":12},"end":{"line":61,"column":12}}]},"7":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":6},"end":{"line":81,"column":6}},{"start":{"line":81,"column":6},"end":{"line":81,"column":6}}]},"8":{"line":81,"type":"binary-expr","locations":[{"start":{"line":81,"column":10},"end":{"line":81,"column":38}},{"start":{"line":81,"column":42},"end":{"line":81,"column":83}}]},"9":{"line":90,"type":"cond-expr","locations":[{"start":{"line":90,"column":32},"end":{"line":90,"column":57}},{"start":{"line":90,"column":60},"end":{"line":90,"column":71}}]},"10":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":6},"end":{"line":92,"column":6}},{"start":{"line":92,"column":6},"end":{"line":92,"column":6}}]}},"code":["'use strict'","","const whilst = require('async/whilst')","const ConsumableBuffer = require('./consumable-buffer')","","module.exports = function wrapHash (hashFn) {","  return function hashing (value) {","    if (value instanceof InfiniteHash) {","      // already a hash. return it","      return value","    } else {","      return new InfiniteHash(value, hashFn)","    }","  }","}","","class InfiniteHash {","  constructor (value, hashFn) {","    if ((typeof value) !== 'string' && !Buffer.isBuffer(value)) {","      throw new Error('can only hash strings or buffers')","    }","    this._value = value","    this._hashFn = hashFn","    this._depth = -1","    this._availableBits = 0","    this._currentBufferIndex = 0","    this._buffers = []","  }","","  take (bits, callback) {","    let pendingBits = bits","    whilst(","      () => this._availableBits < pendingBits,","      (callback) => {","        this._produceMoreBits(callback)","      },","      (err) => {","        if (err) {","          callback(err)","          return // early","        }","","        let result = 0","","        // TODO: this is sync, no need to use whilst","        whilst(","          () => pendingBits > 0,","          (callback) => {","            const hash = this._buffers[this._currentBufferIndex]","            const available = Math.min(hash.availableBits(), pendingBits)","            const took = hash.take(available)","            result = (result << available) + took","            pendingBits -= available","            this._availableBits -= available","            if (hash.availableBits() === 0) {","              this._currentBufferIndex++","            }","            callback()","          },","          (err) => {","            if (err) {","              callback(err)","              return // early","            }","","            process.nextTick(() => callback(null, result))","          }","        )","      }","    )","  }","","  untake (bits) {","    let pendingBits = bits","    while (pendingBits > 0) {","      const hash = this._buffers[this._currentBufferIndex]","      const availableForUntake = Math.min(hash.totalBits() - hash.availableBits(), pendingBits)","      hash.untake(availableForUntake)","      pendingBits -= availableForUntake","      this._availableBits += availableForUntake","      if (this._currentBufferIndex > 0 && hash.totalBits() === hash.availableBits()) {","        this._depth--","        this._currentBufferIndex--","      }","    }","  }","","  _produceMoreBits (callback) {","    this._depth++","    const value = this._depth ? this._value + this._depth : this._value","    this._hashFn(value, (err, hashValue) => {","      if (err) {","        callback(err)","        return // early","      }","","      const buffer = new ConsumableBuffer(hashValue)","      this._buffers.push(buffer)","      this._availableBits += buffer.availableBits()","      callback()","    })","  }","}",""],"l":{"3":1,"4":1,"6":1,"7":0,"8":0,"10":0,"12":0,"19":0,"20":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"31":0,"32":0,"33":0,"35":0,"38":0,"39":0,"40":0,"43":0,"46":0,"47":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"58":0,"61":0,"62":0,"63":0,"66":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"97":0,"98":0,"99":0,"100":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/hamt/consumable-buffer.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/hamt/consumable-buffer.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":1,"32":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":14},"end":{"line":26,"column":22}}},"2":{"name":"(anonymous_2)","line":32,"loc":{"start":{"line":32,"column":16},"end":{"line":32,"column":19}}},"3":{"name":"(anonymous_3)","line":36,"loc":{"start":{"line":36,"column":12},"end":{"line":36,"column":15}}},"4":{"name":"(anonymous_4)","line":40,"loc":{"start":{"line":40,"column":7},"end":{"line":40,"column":14}}},"5":{"name":"(anonymous_5)","line":62,"loc":{"start":{"line":62,"column":9},"end":{"line":62,"column":16}}},"6":{"name":"(anonymous_6)","line":70,"loc":{"start":{"line":70,"column":12},"end":{"line":70,"column":15}}},"7":{"name":"byteBitsToInt","line":75,"loc":{"start":{"line":75,"column":0},"end":{"line":75,"column":45}}},"8":{"name":"maskFor","line":80,"loc":{"start":{"line":80,"column":0},"end":{"line":80,"column":33}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":12,"column":1}},"2":{"start":{"line":14,"column":0},"end":{"line":23,"column":1}},"3":{"start":{"line":25,"column":0},"end":{"line":73,"column":1}},"4":{"start":{"line":27,"column":4},"end":{"line":27,"column":23}},"5":{"start":{"line":28,"column":4},"end":{"line":28,"column":43}},"6":{"start":{"line":29,"column":4},"end":{"line":29,"column":27}},"7":{"start":{"line":33,"column":4},"end":{"line":33,"column":61}},"8":{"start":{"line":37,"column":4},"end":{"line":37,"column":33}},"9":{"start":{"line":41,"column":4},"end":{"line":41,"column":26}},"10":{"start":{"line":42,"column":4},"end":{"line":42,"column":18}},"11":{"start":{"line":43,"column":4},"end":{"line":57,"column":5}},"12":{"start":{"line":44,"column":6},"end":{"line":44,"column":52}},"13":{"start":{"line":45,"column":6},"end":{"line":45,"column":51}},"14":{"start":{"line":46,"column":6},"end":{"line":46,"column":57}},"15":{"start":{"line":47,"column":6},"end":{"line":47,"column":71}},"16":{"start":{"line":48,"column":6},"end":{"line":48,"column":41}},"17":{"start":{"line":50,"column":6},"end":{"line":50,"column":27}},"18":{"start":{"line":52,"column":6},"end":{"line":52,"column":35}},"19":{"start":{"line":53,"column":6},"end":{"line":56,"column":7}},"20":{"start":{"line":54,"column":8},"end":{"line":54,"column":31}},"21":{"start":{"line":55,"column":8},"end":{"line":55,"column":31}},"22":{"start":{"line":59,"column":4},"end":{"line":59,"column":17}},"23":{"start":{"line":63,"column":4},"end":{"line":63,"column":31}},"24":{"start":{"line":64,"column":4},"end":{"line":67,"column":5}},"25":{"start":{"line":65,"column":6},"end":{"line":65,"column":30}},"26":{"start":{"line":66,"column":6},"end":{"line":66,"column":31}},"27":{"start":{"line":71,"column":4},"end":{"line":71,"column":36}},"28":{"start":{"line":75,"column":0},"end":{"line":78,"column":1}},"29":{"start":{"line":76,"column":2},"end":{"line":76,"column":37}},"30":{"start":{"line":77,"column":2},"end":{"line":77,"column":32}},"31":{"start":{"line":80,"column":0},"end":{"line":82,"column":1}},"32":{"start":{"line":81,"column":2},"end":{"line":81,"column":73}}},"branchMap":{"1":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":11},"end":{"line":43,"column":22}},{"start":{"line":43,"column":26},"end":{"line":43,"column":42}}]},"2":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":6},"end":{"line":53,"column":6}},{"start":{"line":53,"column":6},"end":{"line":53,"column":6}}]}},"code":["'use strict'","","const START_MASKS = [","  0b11111111,","  0b11111110,","  0b11111100,","  0b11111000,","  0b11110000,","  0b11100000,","  0b11000000,","  0b10000000","]","","const STOP_MASKS = [","  0b00000001,","  0b00000011,","  0b00000111,","  0b00001111,","  0b00011111,","  0b00111111,","  0b01111111,","  0b11111111","]","","module.exports = class ConsumableBuffer {","  constructor (value) {","    this._value = value","    this._currentBytePos = value.length - 1","    this._currentBitPos = 7","  }","","  availableBits () {","    return this._currentBitPos + 1 + this._currentBytePos * 8","  }","","  totalBits () {","    return this._value.length * 8","  }","","  take (bits) {","    let pendingBits = bits","    let result = 0","    while (pendingBits && this._haveBits()) {","      const byte = this._value[this._currentBytePos]","      const availableBits = this._currentBitPos + 1","      const taking = Math.min(availableBits, pendingBits)","      const value = byteBitsToInt(byte, availableBits - taking, taking)","      result = (result << taking) + value","","      pendingBits -= taking","","      this._currentBitPos -= taking","      if (this._currentBitPos < 0) {","        this._currentBitPos = 7","        this._currentBytePos --","      }","    }","","    return result","  }","","  untake (bits) {","    this._currentBitPos += bits","    while (this._currentBitPos > 7) {","      this._currentBitPos -= 8","      this._currentBytePos += 1","    }","  }","","  _haveBits () {","    return this._currentBytePos >= 0","  }","}","","function byteBitsToInt (byte, start, length) {","  const mask = maskFor(start, length)","  return (byte & mask) >>> start","}","","function maskFor (start, length) {","  return START_MASKS[start] & STOP_MASKS[Math.min(length + start - 1, 7)]","}",""],"l":{"3":1,"14":1,"25":1,"27":0,"28":0,"29":0,"33":0,"37":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"50":0,"52":0,"53":0,"54":0,"55":0,"59":0,"63":0,"64":0,"65":0,"66":0,"71":0,"75":1,"76":0,"77":0,"80":1,"81":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/chunker/fixed-size.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/chunker/fixed-size.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{"1":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":39}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":1}},"3":{"start":{"line":6,"column":2},"end":{"line":6,"column":78}},"4":{"start":{"line":7,"column":2},"end":{"line":7,"column":68}}},"branchMap":{"1":{"line":6,"type":"cond-expr","locations":[{"start":{"line":6,"column":48},"end":{"line":6,"column":55}},{"start":{"line":6,"column":58},"end":{"line":6,"column":78}}]}},"code":["'use strict'","","const pullBlock = require('pull-block')","","module.exports = (options) => {","  let maxSize = (typeof options === 'number') ? options : options.maxChunkSize","  return pullBlock(maxSize, { zeroPadding: false, emitEmpty: true })","}",""],"l":{"3":1,"5":1,"6":0,"7":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/exporter/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/exporter/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":27}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":33}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":51}},"6":{"start":{"line":10,"column":0},"end":{"line":23,"column":1}},"7":{"start":{"line":11,"column":2},"end":{"line":13,"column":3}},"8":{"start":{"line":12,"column":4},"end":{"line":12,"column":55}},"9":{"start":{"line":15,"column":2},"end":{"line":15,"column":29}},"10":{"start":{"line":17,"column":2},"end":{"line":22,"column":3}},"11":{"start":{"line":19,"column":25},"end":{"line":19,"column":37}},"12":{"start":{"line":20,"column":23},"end":{"line":20,"column":56}}},"branchMap":{"1":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":2},"end":{"line":11,"column":2}},{"start":{"line":11,"column":2},"end":{"line":11,"column":2}}]}},"code":["'use strict'","","const pull = require('pull-stream')","const CID = require('cids')","const isIPFS = require('is-ipfs')","","const resolve = require('./resolve').resolve","const cleanMultihash = require('./clean-multihash')","","module.exports = (hash, ipldResolver) => {","  if (!isIPFS.multihash(hash)) {","    return pull.error(new Error('not valid multihash'))","  }","","  hash = cleanMultihash(hash)","","  return pull(","    ipldResolver.getStream(new CID(hash)),","    pull.map((result) => result.value),","    pull.map((node) => resolve(node, hash, ipldResolver)),","    pull.flatten()","  )","}",""],"l":{"3":1,"4":1,"5":1,"7":1,"8":1,"10":1,"11":0,"12":0,"15":0,"17":0,"19":0,"20":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/exporter/resolve.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/exporter/resolve.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"resolve","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":56}}},"2":{"name":"typeOf","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":23}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":37}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":35}},"3":{"start":{"line":6,"column":0},"end":{"line":10,"column":1}},"4":{"start":{"line":12,"column":0},"end":{"line":15,"column":13}},"5":{"start":{"line":17,"column":0},"end":{"line":25,"column":1}},"6":{"start":{"line":18,"column":2},"end":{"line":18,"column":27}},"7":{"start":{"line":19,"column":2},"end":{"line":19,"column":34}},"8":{"start":{"line":20,"column":2},"end":{"line":22,"column":3}},"9":{"start":{"line":21,"column":4},"end":{"line":21,"column":60}},"10":{"start":{"line":23,"column":2},"end":{"line":23,"column":70}},"11":{"start":{"line":24,"column":2},"end":{"line":24,"column":15}},"12":{"start":{"line":27,"column":0},"end":{"line":30,"column":1}},"13":{"start":{"line":28,"column":2},"end":{"line":28,"column":42}},"14":{"start":{"line":29,"column":2},"end":{"line":29,"column":18}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]}},"code":["'use strict'","","const UnixFS = require('ipfs-unixfs')","const pull = require('pull-stream')","","const resolvers = {","  directory: require('./dir-flat'),","  'hamt-sharded-directory': require('./dir-hamt-sharded'),","  file: require('./file')","}","","module.exports = Object.assign({","  resolve: resolve,","  typeOf: typeOf","}, resolvers)","","function resolve (node, name, ipldResolver, parentNode) {","  const type = typeOf(node)","  const resolver = resolvers[type]","  if (!resolver) {","    return pull.error(new Error('Unkown node type ' + type))","  }","  let stream = resolver(node, name, ipldResolver, resolve, parentNode)","  return stream","}","","function typeOf (node) {","  const data = UnixFS.unmarshal(node.data)","  return data.type","}",""],"l":{"3":1,"4":1,"6":1,"12":1,"17":1,"18":0,"19":0,"20":0,"21":0,"23":0,"24":0,"27":1,"28":0,"29":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/exporter/dir-flat.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/exporter/dir-flat.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"dirExporter","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":65}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":39}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":28}},"7":{"start":{"line":12,"column":0},"end":{"line":36,"column":1}},"8":{"start":{"line":13,"column":2},"end":{"line":16,"column":3}},"9":{"start":{"line":18,"column":2},"end":{"line":35,"column":4}},"10":{"start":{"line":22,"column":26},"end":{"line":25,"column":7}},"11":{"start":{"line":26,"column":28},"end":{"line":32,"column":8}},"12":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"13":{"start":{"line":28,"column":10},"end":{"line":28,"column":24}},"14":{"start":{"line":31,"column":8},"end":{"line":31,"column":73}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":27,"column":8}},{"start":{"line":27,"column":8},"end":{"line":27,"column":8}}]}},"code":["'use strict'","","const path = require('path')","const pull = require('pull-stream')","const paramap = require('pull-paramap')","const CID = require('cids')","const cat = require('pull-cat')","","// Logic to export a unixfs directory.","module.exports = dirExporter","","function dirExporter (node, name, ipldResolver, resolve, parent) {","  const dir = {","    path: name,","    hash: node.multihash","  }","","  return cat([","    pull.values([dir]),","    pull(","      pull.values(node.links),","      pull.map((link) => ({","        path: path.join(name, link.name),","        hash: link.multihash","      })),","      paramap((item, cb) => ipldResolver.get(new CID(item.hash), (err, n) => {","        if (err) {","          return cb(err)","        }","","        cb(null, resolve(n.value, item.path, ipldResolver, name, parent))","      })),","      pull.flatten()","    )","  ])","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"10":1,"12":1,"13":0,"18":0,"22":0,"26":0,"27":0,"28":0,"31":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/exporter/dir-hamt-sharded.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/exporter/dir-hamt-sharded.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0]},"f":{"1":0},"fnMap":{"1":{"name":"shardedDirExporter","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":72}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":39}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":46}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":35}},"8":{"start":{"line":13,"column":0},"end":{"line":48,"column":1}},"9":{"start":{"line":14,"column":2},"end":{"line":14,"column":9}},"10":{"start":{"line":15,"column":2},"end":{"line":20,"column":3}},"11":{"start":{"line":16,"column":4},"end":{"line":19,"column":6}},"12":{"start":{"line":22,"column":2},"end":{"line":47,"column":4}},"13":{"start":{"line":28,"column":8},"end":{"line":28,"column":38}},"14":{"start":{"line":30,"column":8},"end":{"line":30,"column":41}},"15":{"start":{"line":32,"column":8},"end":{"line":36,"column":9}},"16":{"start":{"line":38,"column":28},"end":{"line":44,"column":8}},"17":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"18":{"start":{"line":40,"column":10},"end":{"line":40,"column":24}},"19":{"start":{"line":43,"column":8},"end":{"line":43,"column":86}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":2},"end":{"line":15,"column":2}},{"start":{"line":15,"column":2},"end":{"line":15,"column":2}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":6},"end":{"line":15,"column":13}},{"start":{"line":15,"column":17},"end":{"line":15,"column":37}}]},"3":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":16},"end":{"line":30,"column":34}},{"start":{"line":30,"column":37},"end":{"line":30,"column":41}}]},"4":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":39,"column":8}},{"start":{"line":39,"column":8},"end":{"line":39,"column":8}}]},"5":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":60},"end":{"line":43,"column":63}},{"start":{"line":43,"column":67},"end":{"line":43,"column":73}},{"start":{"line":43,"column":78},"end":{"line":43,"column":84}}]}},"code":["'use strict'","","const path = require('path')","const pull = require('pull-stream')","const paramap = require('pull-paramap')","const CID = require('cids')","const cat = require('pull-cat')","const cleanHash = require('./clean-multihash')","","// Logic to export a unixfs directory.","module.exports = shardedDirExporter","","function shardedDirExporter (node, name, ipldResolver, resolve, parent) {","  let dir","  if (!parent || parent.path !== name) {","    dir = [{","      path: name,","      hash: cleanHash(node.multihash)","    }]","  }","","  return cat([","    pull.values(dir),","    pull(","      pull.values(node.links),","      pull.map((link) => {","        // remove the link prefix (2 chars for the bucket index)","        let p = link.name.substring(2)","        // another sharded dir or file?","        p = p ? path.join(name, p) : name","","        return {","          name: link.name,","          path: p,","          hash: link.multihash","        }","      }),","      paramap((item, cb) => ipldResolver.get(new CID(item.hash), (err, n) => {","        if (err) {","          return cb(err)","        }","","        cb(null, resolve(n.value, item.path, ipldResolver, (dir && dir[0]) || parent))","      })),","      pull.flatten()","    )","  ])","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"11":1,"13":1,"14":0,"15":0,"16":0,"22":0,"28":0,"30":0,"32":0,"38":0,"39":0,"40":0,"43":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/exporter/clean-multihash.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/exporter/clean-multihash.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{"1":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"2":{"start":{"line":5,"column":0},"end":{"line":11,"column":1}},"3":{"start":{"line":6,"column":2},"end":{"line":8,"column":3}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":36}},"5":{"start":{"line":10,"column":2},"end":{"line":10,"column":18}}},"branchMap":{"1":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":2},"end":{"line":6,"column":2}},{"start":{"line":6,"column":2},"end":{"line":6,"column":2}}]}},"code":["'use strict'","","const mh = require('multihashes')","","module.exports = (multihash) => {","  if (Buffer.isBuffer(multihash)) {","    return mh.toB58String(multihash)","  }","","  return multihash","}",""],"l":{"3":1,"5":1,"6":0,"7":0,"10":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/exporter/file.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-unixfs-engine/src/exporter/file.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"getData","line":11,"loc":{"start":{"line":11,"column":2},"end":{"line":11,"column":26}}},"2":{"name":"visitor","line":20,"loc":{"start":{"line":20,"column":2},"end":{"line":20,"column":26}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":41}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":37}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":27}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":35}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":39}},"6":{"start":{"line":10,"column":0},"end":{"line":39,"column":1}},"7":{"start":{"line":11,"column":2},"end":{"line":18,"column":3}},"8":{"start":{"line":12,"column":4},"end":{"line":17,"column":5}},"9":{"start":{"line":13,"column":6},"end":{"line":13,"column":46}},"10":{"start":{"line":14,"column":6},"end":{"line":14,"column":39}},"11":{"start":{"line":16,"column":6},"end":{"line":16,"column":49}},"12":{"start":{"line":20,"column":2},"end":{"line":26,"column":3}},"13":{"start":{"line":21,"column":4},"end":{"line":25,"column":5}},"14":{"start":{"line":23,"column":28},"end":{"line":23,"column":73}},"15":{"start":{"line":24,"column":27},"end":{"line":24,"column":39}},"16":{"start":{"line":28,"column":2},"end":{"line":31,"column":3}},"17":{"start":{"line":33,"column":2},"end":{"line":33,"column":42}},"18":{"start":{"line":34,"column":2},"end":{"line":38,"column":5}}},"branchMap":{"1":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":13},"end":{"line":14,"column":22}},{"start":{"line":14,"column":26},"end":{"line":14,"column":39}}]}},"code":["'use strict'","","const traverse = require('pull-traverse')","const UnixFS = require('ipfs-unixfs')","const CID = require('cids')","const pull = require('pull-stream')","const paramap = require('pull-paramap')","","// Logic to export a single (possibly chunked) unixfs file.","module.exports = (node, name, ipldResolver) => {","  function getData (node) {","    try {","      const file = UnixFS.unmarshal(node.data)","      return file.data || new Buffer(0)","    } catch (err) {","      throw new Error('Failed to unmarshal node')","    }","  }","","  function visitor (node) {","    return pull(","      pull.values(node.links),","      paramap((link, cb) => ipldResolver.get(new CID(link.multihash), cb)),","      pull.map((result) => result.value)","    )","  }","","  let content = pull(","    traverse.depthFirst(node, visitor),","    pull.map(getData)","  )","","  const file = UnixFS.unmarshal(node.data)","  return pull.values([{","    content: content,","    path: name,","    size: file.fileSize()","  }])","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"10":1,"11":1,"12":0,"13":0,"14":0,"16":0,"20":1,"21":0,"23":0,"24":0,"28":0,"33":0,"34":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/bootstrap.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/bootstrap.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"bootstrap","line":9,"loc":{"start":{"line":9,"column":17},"end":{"line":9,"column":43}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":37}},"2":{"start":{"line":5,"column":0},"end":{"line":7,"column":69}},"3":{"start":{"line":9,"column":0},"end":{"line":74,"column":1}},"4":{"start":{"line":10,"column":2},"end":{"line":73,"column":3}},"5":{"start":{"line":12,"column":6},"end":{"line":17,"column":8}},"6":{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},"7":{"start":{"line":14,"column":10},"end":{"line":14,"column":30}},"8":{"start":{"line":16,"column":8},"end":{"line":16,"column":49}},"9":{"start":{"line":20,"column":6},"end":{"line":23,"column":7}},"10":{"start":{"line":21,"column":8},"end":{"line":21,"column":23}},"11":{"start":{"line":22,"column":8},"end":{"line":22,"column":31}},"12":{"start":{"line":24,"column":6},"end":{"line":42,"column":8}},"13":{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},"14":{"start":{"line":26,"column":10},"end":{"line":26,"column":30}},"15":{"start":{"line":28,"column":8},"end":{"line":32,"column":9}},"16":{"start":{"line":29,"column":10},"end":{"line":29,"column":41}},"17":{"start":{"line":30,"column":15},"end":{"line":32,"column":9}},"18":{"start":{"line":31,"column":10},"end":{"line":31,"column":42}},"19":{"start":{"line":33,"column":8},"end":{"line":41,"column":10}},"20":{"start":{"line":34,"column":10},"end":{"line":36,"column":11}},"21":{"start":{"line":35,"column":12},"end":{"line":35,"column":32}},"22":{"start":{"line":38,"column":10},"end":{"line":40,"column":12}},"23":{"start":{"line":45,"column":6},"end":{"line":48,"column":7}},"24":{"start":{"line":46,"column":8},"end":{"line":46,"column":23}},"25":{"start":{"line":47,"column":8},"end":{"line":47,"column":27}},"26":{"start":{"line":49,"column":6},"end":{"line":71,"column":8}},"27":{"start":{"line":50,"column":8},"end":{"line":52,"column":9}},"28":{"start":{"line":51,"column":10},"end":{"line":51,"column":30}},"29":{"start":{"line":53,"column":8},"end":{"line":57,"column":9}},"30":{"start":{"line":54,"column":10},"end":{"line":54,"column":31}},"31":{"start":{"line":56,"column":10},"end":{"line":56,"column":78}},"32":{"start":{"line":56,"column":61},"end":{"line":56,"column":77}},"33":{"start":{"line":59,"column":8},"end":{"line":70,"column":10}},"34":{"start":{"line":60,"column":10},"end":{"line":62,"column":11}},"35":{"start":{"line":61,"column":12},"end":{"line":61,"column":32}},"36":{"start":{"line":64,"column":10},"end":{"line":64,"column":24}},"37":{"start":{"line":65,"column":10},"end":{"line":67,"column":11}},"38":{"start":{"line":66,"column":12},"end":{"line":66,"column":31}},"39":{"start":{"line":69,"column":10},"end":{"line":69,"column":38}}},"branchMap":{"1":{"line":5,"type":"cond-expr","locations":[{"start":{"line":6,"column":4},"end":{"line":6,"column":66}},{"start":{"line":7,"column":4},"end":{"line":7,"column":69}}]},"2":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":8},"end":{"line":13,"column":8}},{"start":{"line":13,"column":8},"end":{"line":13,"column":8}}]},"3":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":6},"end":{"line":20,"column":6}},{"start":{"line":20,"column":6},"end":{"line":20,"column":6}}]},"4":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":8},"end":{"line":25,"column":8}},{"start":{"line":25,"column":8},"end":{"line":25,"column":8}}]},"5":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":28,"column":8}},{"start":{"line":28,"column":8},"end":{"line":28,"column":8}}]},"6":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":15},"end":{"line":30,"column":15}},{"start":{"line":30,"column":15},"end":{"line":30,"column":15}}]},"7":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":10},"end":{"line":34,"column":10}},{"start":{"line":34,"column":10},"end":{"line":34,"column":10}}]},"8":{"line":39,"type":"cond-expr","locations":[{"start":{"line":39,"column":34},"end":{"line":39,"column":46}},{"start":{"line":39,"column":49},"end":{"line":39,"column":60}}]},"9":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":6},"end":{"line":45,"column":6}},{"start":{"line":45,"column":6},"end":{"line":45,"column":6}}]},"10":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":50,"column":8}},{"start":{"line":50,"column":8},"end":{"line":50,"column":8}}]},"11":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":8},"end":{"line":53,"column":8}},{"start":{"line":53,"column":8},"end":{"line":53,"column":8}}]},"12":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":10},"end":{"line":60,"column":10}},{"start":{"line":60,"column":10},"end":{"line":60,"column":10}}]},"13":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":10},"end":{"line":65,"column":10}},{"start":{"line":65,"column":10},"end":{"line":65,"column":10}}]},"14":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":14},"end":{"line":65,"column":23}},{"start":{"line":65,"column":27},"end":{"line":65,"column":36}}]}},"code":["'use strict'","","const isNode = require('detect-node')","","const defaultNodes = isNode","  ? require('../../init-files/default-config-node.json').Bootstrap","  : require('../../init-files/default-config-browser.json').Bootstrap","","module.exports = function bootstrap (self) {","  return {","    list: (callback) => {","      self._repo.config.get((err, config) => {","        if (err) {","          return callback(err)","        }","        callback(null, {Peers: config.Bootstrap})","      })","    },","    add: (multiaddr, args, callback) => {","      if (typeof args === 'function') {","        callback = args","        args = {default: false}","      }","      self._repo.config.get((err, config) => {","        if (err) {","          return callback(err)","        }","        if (args.default) {","          config.Bootstrap = defaultNodes","        } else if (multiaddr) {","          config.Bootstrap.push(multiaddr)","        }","        self._repo.config.set(config, (err) => {","          if (err) {","            return callback(err)","          }","","          callback(null, {","            Peers: args.default ? defaultNodes : [multiaddr]","          })","        })","      })","    },","    rm: (multiaddr, args, callback) => {","      if (typeof args === 'function') {","        callback = args","        args = {all: false}","      }","      self._repo.config.get((err, config) => {","        if (err) {","          return callback(err)","        }","        if (args.all) {","          config.Bootstrap = []","        } else {","          config.Bootstrap = config.Bootstrap.filter((mh) => mh !== multiaddr)","        }","","        self._repo.config.set(config, (err) => {","          if (err) {","            return callback(err)","          }","","          const res = []","          if (!args.all && multiaddr) {","            res.push(multiaddr)","          }","","          callback(null, {Peers: res})","        })","      })","    }","  }","}",""],"l":{"3":1,"5":1,"9":1,"10":0,"12":0,"13":0,"14":0,"16":0,"20":0,"21":0,"22":0,"24":0,"25":0,"26":0,"28":0,"29":0,"30":0,"31":0,"33":0,"34":0,"35":0,"38":0,"45":0,"46":0,"47":0,"49":0,"50":0,"51":0,"53":0,"54":0,"56":0,"59":0,"60":0,"61":0,"64":0,"65":0,"66":0,"69":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/config.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/config.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"config","line":8,"loc":{"start":{"line":8,"column":17},"end":{"line":8,"column":40}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":34}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"5":{"start":{"line":8,"column":0},"end":{"line":57,"column":1}},"6":{"start":{"line":9,"column":2},"end":{"line":56,"column":3}},"7":{"start":{"line":11,"column":6},"end":{"line":14,"column":7}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":22}},"9":{"start":{"line":13,"column":8},"end":{"line":13,"column":23}},"10":{"start":{"line":16,"column":6},"end":{"line":18,"column":7}},"11":{"start":{"line":17,"column":8},"end":{"line":17,"column":46}},"12":{"start":{"line":20,"column":6},"end":{"line":22,"column":7}},"13":{"start":{"line":21,"column":8},"end":{"line":21,"column":54}},"14":{"start":{"line":24,"column":6},"end":{"line":34,"column":8}},"15":{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},"16":{"start":{"line":26,"column":10},"end":{"line":26,"column":30}},"17":{"start":{"line":28,"column":8},"end":{"line":33,"column":9}},"18":{"start":{"line":29,"column":10},"end":{"line":29,"column":52}},"19":{"start":{"line":30,"column":10},"end":{"line":30,"column":31}},"20":{"start":{"line":32,"column":10},"end":{"line":32,"column":61}},"21":{"start":{"line":37,"column":6},"end":{"line":39,"column":7}},"22":{"start":{"line":38,"column":8},"end":{"line":38,"column":54}},"23":{"start":{"line":41,"column":6},"end":{"line":43,"column":7}},"24":{"start":{"line":42,"column":8},"end":{"line":42,"column":56}},"25":{"start":{"line":45,"column":6},"end":{"line":51,"column":8}},"26":{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},"27":{"start":{"line":47,"column":10},"end":{"line":47,"column":30}},"28":{"start":{"line":49,"column":8},"end":{"line":49,"column":32}},"29":{"start":{"line":50,"column":8},"end":{"line":50,"column":45}},"30":{"start":{"line":54,"column":6},"end":{"line":54,"column":45}}},"branchMap":{"1":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":6},"end":{"line":11,"column":6}},{"start":{"line":11,"column":6},"end":{"line":11,"column":6}}]},"2":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":6},"end":{"line":16,"column":6}},{"start":{"line":16,"column":6},"end":{"line":16,"column":6}}]},"3":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":6},"end":{"line":20,"column":6}},{"start":{"line":20,"column":6},"end":{"line":20,"column":6}}]},"4":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":8},"end":{"line":25,"column":8}},{"start":{"line":25,"column":8},"end":{"line":25,"column":8}}]},"5":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":28,"column":8}},{"start":{"line":28,"column":8},"end":{"line":28,"column":8}}]},"6":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":6},"end":{"line":37,"column":6}},{"start":{"line":37,"column":6},"end":{"line":37,"column":6}}]},"7":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":10},"end":{"line":37,"column":14}},{"start":{"line":37,"column":18},"end":{"line":37,"column":41}}]},"8":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":6},"end":{"line":41,"column":6}},{"start":{"line":41,"column":6},"end":{"line":41,"column":6}}]},"9":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":10},"end":{"line":41,"column":29}},{"start":{"line":41,"column":33},"end":{"line":41,"column":55}}]},"10":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":46,"column":8}},{"start":{"line":46,"column":8},"end":{"line":46,"column":8}}]}},"code":["'use strict'","","const promisify = require('promisify-es6')","const _get = require('lodash.get')","const _has = require('lodash.has')","const _set = require('lodash.set')","","module.exports = function config (self) {","  return {","    get: promisify((key, callback) => {","      if (typeof key === 'function') {","        callback = key","        key = undefined","      }","","      if (!key) {","        return self._repo.config.get(callback)","      }","","      if (typeof key !== 'string') {","        return callback(new Error('Invalid key type'))","      }","","      self._repo.config.get((err, config) => {","        if (err) {","          return callback(err)","        }","        if (_has(config, key)) {","          const value = _get(config, key, undefined)","          callback(null, value)","        } else {","          callback(new Error('Key does not exist in config'))","        }","      })","    }),","    set: promisify((key, value, callback) => {","      if (!key || typeof key !== 'string') {","        return callback(new Error('Invalid key type'))","      }","","      if (value === undefined || Buffer.isBuffer(value)) {","        return callback(new Error('Invalid value type'))","      }","","      self._repo.config.get((err, config) => {","        if (err) {","          return callback(err)","        }","        _set(config, key, value)","        self.config.replace(config, callback)","      })","    }),","    replace: promisify((config, callback) => {","      self._repo.config.set(config, callback)","    })","  }","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"8":1,"9":0,"11":0,"12":0,"13":0,"16":0,"17":0,"20":0,"21":0,"24":0,"25":0,"26":0,"28":0,"29":0,"30":0,"32":0,"37":0,"38":0,"41":0,"42":0,"45":0,"46":0,"47":0,"49":0,"50":0,"54":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/block.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/block.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"block","line":9,"loc":{"start":{"line":9,"column":17},"end":{"line":9,"column":39}}},"2":{"name":"cleanCid","line":62,"loc":{"start":{"line":62,"column":0},"end":{"line":62,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":40}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":50}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"6":{"start":{"line":9,"column":0},"end":{"line":60,"column":1}},"7":{"start":{"line":10,"column":2},"end":{"line":59,"column":3}},"8":{"start":{"line":12,"column":6},"end":{"line":12,"column":25}},"9":{"start":{"line":13,"column":6},"end":{"line":13,"column":43}},"10":{"start":{"line":16,"column":6},"end":{"line":18,"column":7}},"11":{"start":{"line":17,"column":8},"end":{"line":17,"column":60}},"12":{"start":{"line":20,"column":6},"end":{"line":40,"column":18}},"13":{"start":{"line":22,"column":10},"end":{"line":24,"column":11}},"14":{"start":{"line":23,"column":12},"end":{"line":23,"column":34}},"15":{"start":{"line":26,"column":10},"end":{"line":32,"column":12}},"16":{"start":{"line":27,"column":12},"end":{"line":29,"column":13}},"17":{"start":{"line":28,"column":14},"end":{"line":28,"column":28}},"18":{"start":{"line":31,"column":12},"end":{"line":31,"column":58}},"19":{"start":{"line":34,"column":23},"end":{"line":39,"column":10}},"20":{"start":{"line":35,"column":10},"end":{"line":37,"column":11}},"21":{"start":{"line":36,"column":12},"end":{"line":36,"column":26}},"22":{"start":{"line":38,"column":10},"end":{"line":38,"column":25}},"23":{"start":{"line":43,"column":6},"end":{"line":43,"column":25}},"24":{"start":{"line":44,"column":6},"end":{"line":44,"column":46}},"25":{"start":{"line":47,"column":6},"end":{"line":47,"column":25}},"26":{"start":{"line":49,"column":6},"end":{"line":57,"column":8}},"27":{"start":{"line":50,"column":8},"end":{"line":52,"column":9}},"28":{"start":{"line":51,"column":10},"end":{"line":51,"column":30}},"29":{"start":{"line":53,"column":8},"end":{"line":56,"column":10}},"30":{"start":{"line":62,"column":0},"end":{"line":69,"column":1}},"31":{"start":{"line":63,"column":2},"end":{"line":65,"column":3}},"32":{"start":{"line":64,"column":4},"end":{"line":64,"column":14}},"33":{"start":{"line":68,"column":2},"end":{"line":68,"column":21}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":6},"end":{"line":16,"column":6}},{"start":{"line":16,"column":6},"end":{"line":16,"column":6}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":10},"end":{"line":22,"column":10}},{"start":{"line":22,"column":10},"end":{"line":22,"column":10}}]},"3":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":12},"end":{"line":27,"column":12}},{"start":{"line":27,"column":12},"end":{"line":27,"column":12}}]},"4":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":10},"end":{"line":35,"column":10}},{"start":{"line":35,"column":10},"end":{"line":35,"column":10}}]},"5":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":50,"column":8}},{"start":{"line":50,"column":8},"end":{"line":50,"column":8}}]},"6":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":2},"end":{"line":63,"column":2}},{"start":{"line":63,"column":2},"end":{"line":63,"column":2}}]}},"code":["'use strict'","","const Block = require('ipfs-block')","const multihash = require('multihashes')","const multihashing = require('multihashing-async')","const CID = require('cids')","const waterfall = require('async/waterfall')","","module.exports = function block (self) {","  return {","    get: (cid, callback) => {","      cid = cleanCid(cid)","      self._blockService.get(cid, callback)","    },","    put: (block, callback) => {","      if (Array.isArray(block)) {","        return callback(new Error('Array is not supported'))","      }","","      waterfall([","        (cb) => {","          if (Block.isBlock(block)) {","            return cb(null, block)","          }","","          multihashing(block, 'sha2-256', (err, multihash) => {","            if (err) {","              return cb(err)","            }","","            cb(null, new Block(block, new CID(multihash)))","          })","        },","        (block, cb) => self._blockService.put(block, (err) => {","          if (err) {","            return cb(err)","          }","          cb(null, block)","        })","      ], callback)","    },","    rm: (cid, callback) => {","      cid = cleanCid(cid)","      self._blockService.delete(cid, callback)","    },","    stat: (cid, callback) => {","      cid = cleanCid(cid)","","      self._blockService.get(cid, (err, block) => {","        if (err) {","          return callback(err)","        }","        callback(null, {","          key: multihash.toB58String(cid.multihash),","          size: block.data.length","        })","      })","    }","  }","}","","function cleanCid (cid) {","  if (CID.isCID(cid)) {","    return cid","  }","","  // CID constructor knows how to do the cleaning :)","  return new CID(cid)","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"9":1,"10":0,"12":0,"13":0,"16":0,"17":0,"20":0,"22":0,"23":0,"26":0,"27":0,"28":0,"31":0,"34":0,"35":0,"36":0,"38":0,"43":0,"44":0,"47":0,"49":0,"50":0,"51":0,"53":0,"62":1,"63":0,"64":0,"68":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/object.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/object.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":1,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":1,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"normalizeMultihash","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":45}}},"2":{"name":"parseBuffer","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":47}}},"3":{"name":"parseJSONBuffer","line":38,"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":41}}},"4":{"name":"parseProtoBuffer","line":60,"loc":{"start":{"line":60,"column":0},"end":{"line":60,"column":42}}},"5":{"name":"object","line":64,"loc":{"start":{"line":64,"column":17},"end":{"line":64,"column":40}}},"6":{"name":"editAndSave","line":65,"loc":{"start":{"line":65,"column":2},"end":{"line":65,"column":30}}},"7":{"name":"next","line":168,"loc":{"start":{"line":168,"column":6},"end":{"line":168,"column":23}}},"8":{"name":"(anonymous_8)","line":270,"loc":{"start":{"line":270,"column":14},"end":{"line":270,"column":51}}},"9":{"name":"(anonymous_9)","line":276,"loc":{"start":{"line":276,"column":13},"end":{"line":276,"column":53}}},"10":{"name":"(anonymous_10)","line":286,"loc":{"start":{"line":286,"column":17},"end":{"line":286,"column":54}}},"11":{"name":"(anonymous_11)","line":293,"loc":{"start":{"line":293,"column":14},"end":{"line":293,"column":51}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":44}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":36}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":29}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":27}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":33}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":37}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":32}},"10":{"start":{"line":13,"column":0},"end":{"line":25,"column":1}},"11":{"start":{"line":14,"column":2},"end":{"line":24,"column":3}},"12":{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},"13":{"start":{"line":16,"column":6},"end":{"line":16,"column":22}},"14":{"start":{"line":19,"column":4},"end":{"line":19,"column":37}},"15":{"start":{"line":20,"column":9},"end":{"line":24,"column":3}},"16":{"start":{"line":21,"column":4},"end":{"line":21,"column":20}},"17":{"start":{"line":23,"column":4},"end":{"line":23,"column":44}},"18":{"start":{"line":27,"column":0},"end":{"line":36,"column":1}},"19":{"start":{"line":28,"column":2},"end":{"line":35,"column":3}},"20":{"start":{"line":30,"column":6},"end":{"line":30,"column":43}},"21":{"start":{"line":32,"column":6},"end":{"line":32,"column":44}},"22":{"start":{"line":34,"column":6},"end":{"line":34,"column":57}},"23":{"start":{"line":38,"column":0},"end":{"line":58,"column":1}},"24":{"start":{"line":39,"column":2},"end":{"line":39,"column":10}},"25":{"start":{"line":40,"column":2},"end":{"line":40,"column":11}},"26":{"start":{"line":42,"column":2},"end":{"line":55,"column":3}},"27":{"start":{"line":43,"column":4},"end":{"line":43,"column":45}},"28":{"start":{"line":45,"column":4},"end":{"line":51,"column":6}},"29":{"start":{"line":46,"column":6},"end":{"line":50,"column":7}},"30":{"start":{"line":52,"column":4},"end":{"line":52,"column":34}},"31":{"start":{"line":54,"column":4},"end":{"line":54,"column":62}},"32":{"start":{"line":57,"column":2},"end":{"line":57,"column":39}},"33":{"start":{"line":60,"column":0},"end":{"line":62,"column":1}},"34":{"start":{"line":61,"column":2},"end":{"line":61,"column":39}},"35":{"start":{"line":64,"column":0},"end":{"line":300,"column":1}},"36":{"start":{"line":65,"column":2},"end":{"line":92,"column":3}},"37":{"start":{"line":66,"column":4},"end":{"line":91,"column":5}},"38":{"start":{"line":67,"column":6},"end":{"line":70,"column":7}},"39":{"start":{"line":68,"column":8},"end":{"line":68,"column":26}},"40":{"start":{"line":69,"column":8},"end":{"line":69,"column":20}},"41":{"start":{"line":72,"column":6},"end":{"line":90,"column":18}},"42":{"start":{"line":74,"column":10},"end":{"line":74,"column":49}},"43":{"start":{"line":79,"column":10},"end":{"line":88,"column":12}},"44":{"start":{"line":80,"column":12},"end":{"line":82,"column":13}},"45":{"start":{"line":81,"column":14},"end":{"line":81,"column":28}},"46":{"start":{"line":83,"column":12},"end":{"line":87,"column":14}},"47":{"start":{"line":86,"column":14},"end":{"line":86,"column":27}},"48":{"start":{"line":94,"column":2},"end":{"line":299,"column":3}},"49":{"start":{"line":96,"column":6},"end":{"line":99,"column":7}},"50":{"start":{"line":97,"column":8},"end":{"line":97,"column":27}},"51":{"start":{"line":98,"column":8},"end":{"line":98,"column":28}},"52":{"start":{"line":101,"column":6},"end":{"line":101,"column":14}},"53":{"start":{"line":103,"column":6},"end":{"line":108,"column":7}},"54":{"start":{"line":104,"column":8},"end":{"line":104,"column":60}},"55":{"start":{"line":105,"column":8},"end":{"line":105,"column":50}},"56":{"start":{"line":107,"column":8},"end":{"line":107,"column":28}},"57":{"start":{"line":110,"column":6},"end":{"line":123,"column":8}},"58":{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},"59":{"start":{"line":112,"column":10},"end":{"line":112,"column":30}},"60":{"start":{"line":114,"column":8},"end":{"line":122,"column":10}},"61":{"start":{"line":117,"column":10},"end":{"line":119,"column":11}},"62":{"start":{"line":118,"column":12},"end":{"line":118,"column":32}},"63":{"start":{"line":121,"column":10},"end":{"line":121,"column":30}},"64":{"start":{"line":126,"column":6},"end":{"line":129,"column":7}},"65":{"start":{"line":127,"column":8},"end":{"line":127,"column":26}},"66":{"start":{"line":128,"column":8},"end":{"line":128,"column":20}},"67":{"start":{"line":131,"column":6},"end":{"line":131,"column":34}},"68":{"start":{"line":132,"column":6},"end":{"line":132,"column":14}},"69":{"start":{"line":134,"column":6},"end":{"line":166,"column":7}},"70":{"start":{"line":135,"column":8},"end":{"line":151,"column":9}},"71":{"start":{"line":136,"column":10},"end":{"line":142,"column":12}},"72":{"start":{"line":137,"column":12},"end":{"line":139,"column":13}},"73":{"start":{"line":138,"column":14},"end":{"line":138,"column":34}},"74":{"start":{"line":140,"column":12},"end":{"line":140,"column":24}},"75":{"start":{"line":141,"column":12},"end":{"line":141,"column":18}},"76":{"start":{"line":144,"column":10},"end":{"line":150,"column":12}},"77":{"start":{"line":145,"column":12},"end":{"line":147,"column":13}},"78":{"start":{"line":146,"column":14},"end":{"line":146,"column":34}},"79":{"start":{"line":148,"column":12},"end":{"line":148,"column":24}},"80":{"start":{"line":149,"column":12},"end":{"line":149,"column":18}},"81":{"start":{"line":152,"column":13},"end":{"line":166,"column":7}},"82":{"start":{"line":154,"column":8},"end":{"line":154,"column":18}},"83":{"start":{"line":155,"column":8},"end":{"line":155,"column":14}},"84":{"start":{"line":156,"column":13},"end":{"line":166,"column":7}},"85":{"start":{"line":157,"column":8},"end":{"line":163,"column":10}},"86":{"start":{"line":158,"column":10},"end":{"line":160,"column":11}},"87":{"start":{"line":159,"column":12},"end":{"line":159,"column":32}},"88":{"start":{"line":161,"column":10},"end":{"line":161,"column":22}},"89":{"start":{"line":162,"column":10},"end":{"line":162,"column":16}},"90":{"start":{"line":165,"column":8},"end":{"line":165,"column":56}},"91":{"start":{"line":168,"column":6},"end":{"line":178,"column":7}},"92":{"start":{"line":169,"column":8},"end":{"line":177,"column":10}},"93":{"start":{"line":172,"column":10},"end":{"line":174,"column":11}},"94":{"start":{"line":173,"column":12},"end":{"line":173,"column":32}},"95":{"start":{"line":176,"column":10},"end":{"line":176,"column":51}},"96":{"start":{"line":182,"column":6},"end":{"line":185,"column":7}},"97":{"start":{"line":183,"column":8},"end":{"line":183,"column":26}},"98":{"start":{"line":184,"column":8},"end":{"line":184,"column":20}},"99":{"start":{"line":187,"column":6},"end":{"line":187,"column":12}},"100":{"start":{"line":189,"column":6},"end":{"line":193,"column":7}},"101":{"start":{"line":190,"column":8},"end":{"line":190,"column":55}},"102":{"start":{"line":192,"column":8},"end":{"line":192,"column":28}},"103":{"start":{"line":194,"column":6},"end":{"line":194,"column":29}},"104":{"start":{"line":196,"column":6},"end":{"line":204,"column":8}},"105":{"start":{"line":197,"column":8},"end":{"line":199,"column":9}},"106":{"start":{"line":198,"column":10},"end":{"line":198,"column":30}},"107":{"start":{"line":201,"column":8},"end":{"line":201,"column":33}},"108":{"start":{"line":203,"column":8},"end":{"line":203,"column":28}},"109":{"start":{"line":208,"column":6},"end":{"line":211,"column":7}},"110":{"start":{"line":209,"column":8},"end":{"line":209,"column":26}},"111":{"start":{"line":210,"column":8},"end":{"line":210,"column":20}},"112":{"start":{"line":213,"column":6},"end":{"line":218,"column":8}},"113":{"start":{"line":214,"column":8},"end":{"line":216,"column":9}},"114":{"start":{"line":215,"column":10},"end":{"line":215,"column":30}},"115":{"start":{"line":217,"column":8},"end":{"line":217,"column":33}},"116":{"start":{"line":222,"column":6},"end":{"line":225,"column":7}},"117":{"start":{"line":223,"column":8},"end":{"line":223,"column":26}},"118":{"start":{"line":224,"column":8},"end":{"line":224,"column":20}},"119":{"start":{"line":227,"column":6},"end":{"line":233,"column":8}},"120":{"start":{"line":228,"column":8},"end":{"line":230,"column":9}},"121":{"start":{"line":229,"column":10},"end":{"line":229,"column":30}},"122":{"start":{"line":232,"column":8},"end":{"line":232,"column":34}},"123":{"start":{"line":237,"column":6},"end":{"line":240,"column":7}},"124":{"start":{"line":238,"column":8},"end":{"line":238,"column":26}},"125":{"start":{"line":239,"column":8},"end":{"line":239,"column":20}},"126":{"start":{"line":242,"column":6},"end":{"line":266,"column":8}},"127":{"start":{"line":243,"column":8},"end":{"line":245,"column":9}},"128":{"start":{"line":244,"column":10},"end":{"line":244,"column":30}},"129":{"start":{"line":247,"column":8},"end":{"line":265,"column":10}},"130":{"start":{"line":248,"column":10},"end":{"line":250,"column":11}},"131":{"start":{"line":249,"column":12},"end":{"line":249,"column":32}},"132":{"start":{"line":252,"column":10},"end":{"line":252,"column":45}},"133":{"start":{"line":253,"column":10},"end":{"line":253,"column":71}},"134":{"start":{"line":253,"column":57},"end":{"line":253,"column":67}},"135":{"start":{"line":255,"column":10},"end":{"line":255,"column":40}},"136":{"start":{"line":257,"column":10},"end":{"line":264,"column":12}},"137":{"start":{"line":271,"column":8},"end":{"line":273,"column":40}},"138":{"start":{"line":272,"column":10},"end":{"line":272,"column":41}},"139":{"start":{"line":277,"column":8},"end":{"line":283,"column":40}},"140":{"start":{"line":278,"column":10},"end":{"line":281,"column":11}},"141":{"start":{"line":280,"column":12},"end":{"line":280,"column":35}},"142":{"start":{"line":282,"column":10},"end":{"line":282,"column":43}},"143":{"start":{"line":287,"column":8},"end":{"line":290,"column":40}},"144":{"start":{"line":288,"column":10},"end":{"line":288,"column":58}},"145":{"start":{"line":289,"column":10},"end":{"line":289,"column":49}},"146":{"start":{"line":294,"column":8},"end":{"line":296,"column":40}},"147":{"start":{"line":295,"column":10},"end":{"line":295,"column":46}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":2},"end":{"line":14,"column":2}},{"start":{"line":14,"column":2},"end":{"line":14,"column":2}}]},"2":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":4}},{"start":{"line":15,"column":4},"end":{"line":15,"column":4}}]},"3":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":9},"end":{"line":20,"column":9}},{"start":{"line":20,"column":9},"end":{"line":20,"column":9}}]},"4":{"line":28,"type":"switch","locations":[{"start":{"line":29,"column":4},"end":{"line":30,"column":43}},{"start":{"line":31,"column":4},"end":{"line":32,"column":44}},{"start":{"line":33,"column":4},"end":{"line":34,"column":57}}]},"5":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":13},"end":{"line":45,"column":25}},{"start":{"line":45,"column":29},"end":{"line":45,"column":31}}]},"6":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":8},"end":{"line":47,"column":17}},{"start":{"line":47,"column":21},"end":{"line":47,"column":30}}]},"7":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":8},"end":{"line":48,"column":17}},{"start":{"line":48,"column":21},"end":{"line":48,"column":30}}]},"8":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":25},"end":{"line":49,"column":34}},{"start":{"line":49,"column":38},"end":{"line":49,"column":47}},{"start":{"line":49,"column":51},"end":{"line":49,"column":65}}]},"9":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":6},"end":{"line":67,"column":6}},{"start":{"line":67,"column":6},"end":{"line":67,"column":6}}]},"10":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":12},"end":{"line":80,"column":12}},{"start":{"line":80,"column":12},"end":{"line":80,"column":12}}]},"11":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":6},"end":{"line":96,"column":6}},{"start":{"line":96,"column":6},"end":{"line":96,"column":6}}]},"12":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":6},"end":{"line":103,"column":6}},{"start":{"line":103,"column":6},"end":{"line":103,"column":6}}]},"13":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":111,"column":8}},{"start":{"line":111,"column":8},"end":{"line":111,"column":8}}]},"14":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":10},"end":{"line":117,"column":10}},{"start":{"line":117,"column":10},"end":{"line":117,"column":10}}]},"15":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":6},"end":{"line":126,"column":6}},{"start":{"line":126,"column":6},"end":{"line":126,"column":6}}]},"16":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":6},"end":{"line":134,"column":6}},{"start":{"line":134,"column":6},"end":{"line":134,"column":6}}]},"17":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":8},"end":{"line":135,"column":8}},{"start":{"line":135,"column":8},"end":{"line":135,"column":8}}]},"18":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":12},"end":{"line":137,"column":12}},{"start":{"line":137,"column":12},"end":{"line":137,"column":12}}]},"19":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":12},"end":{"line":145,"column":12}},{"start":{"line":145,"column":12},"end":{"line":145,"column":12}}]},"20":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":13},"end":{"line":152,"column":13}},{"start":{"line":152,"column":13},"end":{"line":152,"column":13}}]},"21":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":13},"end":{"line":156,"column":13}},{"start":{"line":156,"column":13},"end":{"line":156,"column":13}}]},"22":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":10},"end":{"line":158,"column":10}},{"start":{"line":158,"column":10},"end":{"line":158,"column":10}}]},"23":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":10},"end":{"line":172,"column":10}},{"start":{"line":172,"column":10},"end":{"line":172,"column":10}}]},"24":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":6},"end":{"line":182,"column":6}},{"start":{"line":182,"column":6},"end":{"line":182,"column":6}}]},"25":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":8},"end":{"line":197,"column":8}},{"start":{"line":197,"column":8},"end":{"line":197,"column":8}}]},"26":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":6},"end":{"line":208,"column":6}},{"start":{"line":208,"column":6},"end":{"line":208,"column":6}}]},"27":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":8},"end":{"line":214,"column":8}},{"start":{"line":214,"column":8},"end":{"line":214,"column":8}}]},"28":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":6},"end":{"line":222,"column":6}},{"start":{"line":222,"column":6},"end":{"line":222,"column":6}}]},"29":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":8},"end":{"line":228,"column":8}},{"start":{"line":228,"column":8},"end":{"line":228,"column":8}}]},"30":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":6},"end":{"line":237,"column":6}},{"start":{"line":237,"column":6},"end":{"line":237,"column":6}}]},"31":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":8},"end":{"line":243,"column":8}},{"start":{"line":243,"column":8},"end":{"line":243,"column":8}}]},"32":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":10},"end":{"line":248,"column":10}},{"start":{"line":248,"column":10},"end":{"line":248,"column":10}}]},"33":{"line":278,"type":"if","locations":[{"start":{"line":278,"column":10},"end":{"line":278,"column":10}},{"start":{"line":278,"column":10},"end":{"line":278,"column":10}}]},"34":{"line":278,"type":"binary-expr","locations":[{"start":{"line":278,"column":14},"end":{"line":278,"column":33}},{"start":{"line":279,"column":14},"end":{"line":279,"column":52}}]}},"code":["'use strict'","","const waterfall = require('async/waterfall')","const promisify = require('promisify-es6')","const dagPB = require('ipld-dag-pb')","const DAGNode = dagPB.DAGNode","const DAGLink = dagPB.DAGLink","const CID = require('cids')","const mh = require('multihashes')","const Unixfs = require('ipfs-unixfs')","const assert = require('assert')","","function normalizeMultihash (multihash, enc) {","  if (typeof multihash === 'string') {","    if (enc === 'base58') {","      return multihash","    }","","    return new Buffer(multihash, enc)","  } else if (Buffer.isBuffer(multihash)) {","    return multihash","  } else {","    throw new Error('unsupported multihash')","  }","}","","function parseBuffer (buf, encoding, callback) {","  switch (encoding) {","    case 'json':","      return parseJSONBuffer(buf, callback)","    case 'protobuf':","      return parseProtoBuffer(buf, callback)","    default:","      callback(new Error(`unkown encoding: ${encoding}`))","  }","}","","function parseJSONBuffer (buf, callback) {","  let data","  let links","","  try {","    const parsed = JSON.parse(buf.toString())","","    links = (parsed.Links || []).map((link) => {","      return new DAGLink(","        link.Name || link.name,","        link.Size || link.size,","        mh.fromB58String(link.Hash || link.hash || link.multihash)","      )","    })","    data = new Buffer(parsed.Data)","  } catch (err) {","    return callback(new Error('failed to parse JSON: ' + err))","  }","","  DAGNode.create(data, links, callback)","}","","function parseProtoBuffer (buf, callback) {","  dagPB.util.deserialize(buf, callback)","}","","module.exports = function object (self) {","  function editAndSave (edit) {","    return (multihash, options, callback) => {","      if (typeof options === 'function') {","        callback = options","        options = {}","      }","","      waterfall([","        (cb) => {","          self.object.get(multihash, options, cb)","        },","        (node, cb) => {","          // edit applies the edit func passed to","          // editAndSave","          edit(node, (err, node) => {","            if (err) {","              return cb(err)","            }","            self._ipldResolver.put(node, {","              cid: new CID(node.multihash)","            }, (err) => {","              cb(err, node)","            })","          })","        }","      ], callback)","    }","  }","","  return {","    new: promisify((template, callback) => {","      if (typeof template === 'function') {","        callback = template","        template = undefined","      }","","      let data","","      if (template) {","        assert(template === 'unixfs-dir', 'unkown template')","        data = (new Unixfs('directory')).marshal()","      } else {","        data = new Buffer(0)","      }","","      DAGNode.create(data, (err, node) => {","        if (err) {","          return callback(err)","        }","        self._ipldResolver.put(node, {","          cid: new CID(node.multihash)","        }, (err) => {","          if (err) {","            return callback(err)","          }","","          callback(null, node)","        })","      })","    }),","    put: promisify((obj, options, callback) => {","      if (typeof options === 'function') {","        callback = options","        options = {}","      }","","      const encoding = options.enc","      let node","","      if (Buffer.isBuffer(obj)) {","        if (encoding) {","          parseBuffer(obj, encoding, (err, _node) => {","            if (err) {","              return callback(err)","            }","            node = _node","            next()","          })","        } else {","          DAGNode.create(obj, (err, _node) => {","            if (err) {","              return callback(err)","            }","            node = _node","            next()","          })","        }","      } else if (obj.multihash) {","        // already a dag node","        node = obj","        next()","      } else if (typeof obj === 'object') {","        DAGNode.create(obj.Data, obj.Links, (err, _node) => {","          if (err) {","            return callback(err)","          }","          node = _node","          next()","        })","      } else {","        return callback(new Error('obj not recognized'))","      }","","      function next () {","        self._ipldResolver.put(node, {","          cid: new CID(node.multihash)","        }, (err) => {","          if (err) {","            return callback(err)","          }","","          self.object.get(node.multihash, callback)","        })","      }","    }),","","    get: promisify((multihash, options, callback) => {","      if (typeof options === 'function') {","        callback = options","        options = {}","      }","","      let mh","","      try {","        mh = normalizeMultihash(multihash, options.enc)","      } catch (err) {","        return callback(err)","      }","      const cid = new CID(mh)","","      self._ipldResolver.get(cid, (err, result) => {","        if (err) {","          return callback(err)","        }","","        const node = result.value","","        callback(null, node)","      })","    }),","","    data: promisify((multihash, options, callback) => {","      if (typeof options === 'function') {","        callback = options","        options = {}","      }","","      self.object.get(multihash, options, (err, node) => {","        if (err) {","          return callback(err)","        }","        callback(null, node.data)","      })","    }),","","    links: promisify((multihash, options, callback) => {","      if (typeof options === 'function') {","        callback = options","        options = {}","      }","","      self.object.get(multihash, options, (err, node) => {","        if (err) {","          return callback(err)","        }","","        callback(null, node.links)","      })","    }),","","    stat: promisify((multihash, options, callback) => {","      if (typeof options === 'function') {","        callback = options","        options = {}","      }","","      self.object.get(multihash, options, (err, node) => {","        if (err) {","          return callback(err)","        }","","        dagPB.util.serialize(node, (err, serialized) => {","          if (err) {","            return callback(err)","          }","","          const blockSize = serialized.length","          const linkLength = node.links.reduce((a, l) => a + l.size, 0)","","          const nodeJSON = node.toJSON()","","          callback(null, {","            Hash: nodeJSON.multihash,","            NumLinks: node.links.length,","            BlockSize: blockSize,","            LinksSize: blockSize - node.data.length,","            DataSize: node.data.length,","            CumulativeSize: blockSize + linkLength","          })","        })","      })","    }),","","    patch: promisify({","      addLink (multihash, link, options, callback) {","        editAndSave((node, cb) => {","          DAGNode.addLink(node, link, cb)","        })(multihash, options, callback)","      },","","      rmLink (multihash, linkRef, options, callback) {","        editAndSave((node, cb) => {","          if (linkRef.constructor &&","              linkRef.constructor.name === 'DAGLink') {","            linkRef = linkRef._name","          }","          DAGNode.rmLink(node, linkRef, cb)","        })(multihash, options, callback)","      },","","      appendData (multihash, data, options, callback) {","        editAndSave((node, cb) => {","          const newData = Buffer.concat([node.data, data])","          DAGNode.create(newData, node.links, cb)","        })(multihash, options, callback)","      },","","      setData (multihash, data, options, callback) {","        editAndSave((node, cb) => {","          DAGNode.create(data, node.links, cb)","        })(multihash, options, callback)","      }","    })","  }","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"13":1,"14":0,"15":0,"16":0,"19":0,"20":0,"21":0,"23":0,"27":1,"28":0,"30":0,"32":0,"34":0,"38":1,"39":0,"40":0,"42":0,"43":0,"45":0,"46":0,"52":0,"54":0,"57":0,"60":1,"61":0,"64":1,"65":1,"66":0,"67":0,"68":0,"69":0,"72":0,"74":0,"79":0,"80":0,"81":0,"83":0,"86":0,"94":0,"96":0,"97":0,"98":0,"101":0,"103":0,"104":0,"105":0,"107":0,"110":0,"111":0,"112":0,"114":0,"117":0,"118":0,"121":0,"126":0,"127":0,"128":0,"131":0,"132":0,"134":0,"135":0,"136":0,"137":0,"138":0,"140":0,"141":0,"144":0,"145":0,"146":0,"148":0,"149":0,"152":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"161":0,"162":0,"165":0,"168":1,"169":0,"172":0,"173":0,"176":0,"182":0,"183":0,"184":0,"187":0,"189":0,"190":0,"192":0,"194":0,"196":0,"197":0,"198":0,"201":0,"203":0,"208":0,"209":0,"210":0,"213":0,"214":0,"215":0,"217":0,"222":0,"223":0,"224":0,"227":0,"228":0,"229":0,"232":0,"237":0,"238":0,"239":0,"242":0,"243":0,"244":0,"247":0,"248":0,"249":0,"252":0,"253":0,"255":0,"257":0,"271":0,"272":0,"277":0,"278":0,"280":0,"282":0,"287":0,"288":0,"289":0,"294":0,"295":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/dag.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/dag.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"dag","line":7,"loc":{"start":{"line":7,"column":17},"end":{"line":7,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":27}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"4":{"start":{"line":7,"column":0},"end":{"line":78,"column":1}},"5":{"start":{"line":8,"column":2},"end":{"line":77,"column":3}},"6":{"start":{"line":10,"column":6},"end":{"line":10,"column":56}},"7":{"start":{"line":14,"column":6},"end":{"line":17,"column":7}},"8":{"start":{"line":15,"column":8},"end":{"line":15,"column":23}},"9":{"start":{"line":16,"column":8},"end":{"line":16,"column":24}},"10":{"start":{"line":19,"column":6},"end":{"line":22,"column":7}},"11":{"start":{"line":20,"column":8},"end":{"line":20,"column":26}},"12":{"start":{"line":21,"column":8},"end":{"line":21,"column":20}},"13":{"start":{"line":24,"column":6},"end":{"line":24,"column":29}},"14":{"start":{"line":26,"column":6},"end":{"line":36,"column":7}},"15":{"start":{"line":27,"column":8},"end":{"line":27,"column":36}},"16":{"start":{"line":28,"column":8},"end":{"line":28,"column":31}},"17":{"start":{"line":29,"column":8},"end":{"line":29,"column":21}},"18":{"start":{"line":31,"column":8},"end":{"line":35,"column":9}},"19":{"start":{"line":32,"column":10},"end":{"line":32,"column":32}},"20":{"start":{"line":34,"column":10},"end":{"line":34,"column":20}},"21":{"start":{"line":38,"column":6},"end":{"line":38,"column":58}},"22":{"start":{"line":42,"column":6},"end":{"line":46,"column":7}},"23":{"start":{"line":43,"column":8},"end":{"line":43,"column":26}},"24":{"start":{"line":44,"column":8},"end":{"line":44,"column":22}},"25":{"start":{"line":45,"column":8},"end":{"line":45,"column":24}},"26":{"start":{"line":48,"column":6},"end":{"line":51,"column":7}},"27":{"start":{"line":49,"column":8},"end":{"line":49,"column":23}},"28":{"start":{"line":50,"column":8},"end":{"line":50,"column":24}},"29":{"start":{"line":53,"column":6},"end":{"line":56,"column":7}},"30":{"start":{"line":54,"column":8},"end":{"line":54,"column":26}},"31":{"start":{"line":55,"column":8},"end":{"line":55,"column":20}},"32":{"start":{"line":58,"column":6},"end":{"line":58,"column":29}},"33":{"start":{"line":60,"column":6},"end":{"line":70,"column":7}},"34":{"start":{"line":61,"column":8},"end":{"line":61,"column":36}},"35":{"start":{"line":62,"column":8},"end":{"line":62,"column":31}},"36":{"start":{"line":63,"column":8},"end":{"line":63,"column":21}},"37":{"start":{"line":65,"column":8},"end":{"line":69,"column":9}},"38":{"start":{"line":66,"column":10},"end":{"line":66,"column":32}},"39":{"start":{"line":68,"column":10},"end":{"line":68,"column":26}},"40":{"start":{"line":72,"column":6},"end":{"line":75,"column":7}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":6},"end":{"line":14,"column":6}},{"start":{"line":14,"column":6},"end":{"line":14,"column":6}}]},"2":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":6},"end":{"line":19,"column":6}},{"start":{"line":19,"column":6},"end":{"line":19,"column":6}}]},"3":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":16},"end":{"line":24,"column":23}},{"start":{"line":24,"column":27},"end":{"line":24,"column":29}}]},"4":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":6},"end":{"line":26,"column":6}},{"start":{"line":26,"column":6},"end":{"line":26,"column":6}}]},"5":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":8},"end":{"line":31,"column":8}},{"start":{"line":31,"column":8},"end":{"line":31,"column":8}}]},"6":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":6},"end":{"line":42,"column":6}},{"start":{"line":42,"column":6},"end":{"line":42,"column":6}}]},"7":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":6},"end":{"line":48,"column":6}},{"start":{"line":48,"column":6},"end":{"line":48,"column":6}}]},"8":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":6},"end":{"line":53,"column":6}},{"start":{"line":53,"column":6},"end":{"line":53,"column":6}}]},"9":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":16},"end":{"line":58,"column":23}},{"start":{"line":58,"column":27},"end":{"line":58,"column":29}}]},"10":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":6},"end":{"line":60,"column":6}},{"start":{"line":60,"column":6},"end":{"line":60,"column":6}}]},"11":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":65,"column":8}},{"start":{"line":65,"column":8},"end":{"line":65,"column":8}}]}},"code":["'use strict'","","const promisify = require('promisify-es6')","const CID = require('cids')","const pull = require('pull-stream')","","module.exports = function dag (self) {","  return {","    put: promisify((dagNode, options, callback) => {","      self._ipldResolver.put(dagNode, options, callback)","    }),","","    get: promisify((cid, path, options, callback) => {","      if (typeof path === 'function') {","        callback = path","        path = undefined","      }","","      if (typeof options === 'function') {","        callback = options","        options = {}","      }","","      options = options || {}","","      if (typeof cid === 'string') {","        const split = cid.split('/')","        cid = new CID(split[0])","        split.shift()","","        if (split.length > 0) {","          path = split.join('/')","        } else {","          path = '/'","        }","      }","","      self._ipldResolver.get(cid, path, options, callback)","    }),","","    tree: promisify((cid, path, options, callback) => {","      if (typeof path === 'object') {","        callback = options","        options = path","        path = undefined","      }","","      if (typeof path === 'function') {","        callback = path","        path = undefined","      }","","      if (typeof options === 'function') {","        callback = options","        options = {}","      }","","      options = options || {}","","      if (typeof cid === 'string') {","        const split = cid.split('/')","        cid = new CID(split[0])","        split.shift()","","        if (split.length > 0) {","          path = split.join('/')","        } else {","          path = undefined","        }","      }","","      pull(","        self._ipldResolver.treeStream(cid, path, options),","        pull.collect(callback)","      )","    })","  }","}",""],"l":{"3":1,"4":1,"5":1,"7":1,"8":0,"10":0,"14":0,"15":0,"16":0,"19":0,"20":0,"21":0,"24":0,"26":0,"27":0,"28":0,"29":0,"31":0,"32":0,"34":0,"38":0,"42":0,"43":0,"44":0,"45":0,"48":0,"49":0,"50":0,"53":0,"54":0,"55":0,"58":0,"60":0,"61":0,"62":0,"63":0,"65":0,"66":0,"68":0,"72":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/libp2p.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/libp2p.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"libp2p","line":7,"loc":{"start":{"line":7,"column":17},"end":{"line":7,"column":40}}},"2":{"name":"gotConfig","line":12,"loc":{"start":{"line":12,"column":6},"end":{"line":12,"column":39}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":33}},"4":{"start":{"line":7,"column":0},"end":{"line":52,"column":1}},"5":{"start":{"line":8,"column":2},"end":{"line":51,"column":3}},"6":{"start":{"line":10,"column":6},"end":{"line":10,"column":32}},"7":{"start":{"line":12,"column":6},"end":{"line":46,"column":7}},"8":{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},"9":{"start":{"line":14,"column":10},"end":{"line":14,"column":30}},"10":{"start":{"line":17,"column":8},"end":{"line":21,"column":9}},"11":{"start":{"line":23,"column":8},"end":{"line":23,"column":80}},"12":{"start":{"line":25,"column":8},"end":{"line":45,"column":10}},"13":{"start":{"line":26,"column":10},"end":{"line":28,"column":11}},"14":{"start":{"line":27,"column":12},"end":{"line":27,"column":32}},"15":{"start":{"line":30,"column":10},"end":{"line":32,"column":12}},"16":{"start":{"line":31,"column":12},"end":{"line":31,"column":60}},"17":{"start":{"line":34,"column":10},"end":{"line":39,"column":12}},"18":{"start":{"line":35,"column":12},"end":{"line":38,"column":13}},"19":{"start":{"line":36,"column":14},"end":{"line":36,"column":46}},"20":{"start":{"line":37,"column":14},"end":{"line":37,"column":65}},"21":{"start":{"line":40,"column":10},"end":{"line":42,"column":12}},"22":{"start":{"line":41,"column":12},"end":{"line":41,"column":44}},"23":{"start":{"line":44,"column":10},"end":{"line":44,"column":20}},"24":{"start":{"line":49,"column":6},"end":{"line":49,"column":37}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":8},"end":{"line":13,"column":8}},{"start":{"line":13,"column":8},"end":{"line":13,"column":8}}]},"2":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":10},"end":{"line":26,"column":10}},{"start":{"line":26,"column":10},"end":{"line":26,"column":10}}]},"3":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":12},"end":{"line":35,"column":12}},{"start":{"line":35,"column":12},"end":{"line":35,"column":12}}]}},"code":["'use strict'","","const Node = require('libp2p-ipfs-nodejs')","const promisify = require('promisify-es6')","const get = require('lodash.get')","","module.exports = function libp2p (self) {","  return {","    start: promisify((callback) => {","      self.config.get(gotConfig)","","      function gotConfig (err, config) {","        if (err) {","          return callback(err)","        }","","        const options = {","          mdns: get(config, 'Discovery.MDNS.Enabled'),","          webRTCStar: get(config, 'Discovery.webRTCStar.Enabled'),","          bootstrap: get(config, 'Bootstrap')","        }","","        self._libp2pNode = new Node(self._peerInfo, self._peerInfoBook, options)","","        self._libp2pNode.start((err) => {","          if (err) {","            return callback(err)","          }","","          self._libp2pNode.peerInfo.multiaddrs.forEach((ma) => {","            console.log('Swarm listening on', ma.toString())","          })","","          self._libp2pNode.discovery.on('peer', (peerInfo) => {","            if (self.isOnline()) {","              self._peerInfoBook.put(peerInfo)","              self._libp2pNode.dialByPeerInfo(peerInfo, () => {})","            }","          })","          self._libp2pNode.swarm.on('peer-mux-established', (peerInfo) => {","            self._peerInfoBook.put(peerInfo)","          })","","          callback()","        })","      }","    }),","    stop: promisify((callback) => {","      self._libp2pNode.stop(callback)","    })","  }","}",""],"l":{"3":1,"4":1,"5":1,"7":1,"8":0,"10":0,"12":1,"13":0,"14":0,"17":0,"23":0,"25":0,"26":0,"27":0,"30":0,"31":0,"34":0,"35":0,"36":0,"37":0,"40":0,"41":0,"44":0,"49":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/swarm.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/swarm.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"swarm","line":10,"loc":{"start":{"line":10,"column":17},"end":{"line":10,"column":39}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":41}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":39}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":55}},"6":{"start":{"line":10,"column":0},"end":{"line":96,"column":1}},"7":{"start":{"line":11,"column":2},"end":{"line":95,"column":3}},"8":{"start":{"line":13,"column":6},"end":{"line":16,"column":7}},"9":{"start":{"line":14,"column":8},"end":{"line":14,"column":23}},"10":{"start":{"line":15,"column":8},"end":{"line":15,"column":17}},"11":{"start":{"line":18,"column":6},"end":{"line":20,"column":7}},"12":{"start":{"line":19,"column":8},"end":{"line":19,"column":38}},"13":{"start":{"line":22,"column":6},"end":{"line":22,"column":44}},"14":{"start":{"line":26,"column":6},"end":{"line":26,"column":47}},"15":{"start":{"line":27,"column":6},"end":{"line":27,"column":37}},"16":{"start":{"line":29,"column":6},"end":{"line":44,"column":8}},"17":{"start":{"line":30,"column":8},"end":{"line":30,"column":30}},"18":{"start":{"line":32,"column":8},"end":{"line":43,"column":10}},"19":{"start":{"line":33,"column":10},"end":{"line":36,"column":11}},"20":{"start":{"line":38,"column":10},"end":{"line":40,"column":11}},"21":{"start":{"line":39,"column":12},"end":{"line":39,"column":35}},"22":{"start":{"line":42,"column":10},"end":{"line":42,"column":20}},"23":{"start":{"line":46,"column":6},"end":{"line":46,"column":30}},"24":{"start":{"line":51,"column":6},"end":{"line":53,"column":7}},"25":{"start":{"line":52,"column":8},"end":{"line":52,"column":38}},"26":{"start":{"line":55,"column":6},"end":{"line":55,"column":55}},"27":{"start":{"line":56,"column":6},"end":{"line":56,"column":27}},"28":{"start":{"line":60,"column":6},"end":{"line":62,"column":7}},"29":{"start":{"line":61,"column":8},"end":{"line":61,"column":38}},"30":{"start":{"line":64,"column":6},"end":{"line":64,"column":58}},"31":{"start":{"line":68,"column":6},"end":{"line":70,"column":7}},"32":{"start":{"line":69,"column":8},"end":{"line":69,"column":38}},"33":{"start":{"line":72,"column":6},"end":{"line":74,"column":7}},"34":{"start":{"line":73,"column":8},"end":{"line":73,"column":32}},"35":{"start":{"line":76,"column":6},"end":{"line":76,"column":55}},"36":{"start":{"line":80,"column":6},"end":{"line":82,"column":7}},"37":{"start":{"line":81,"column":8},"end":{"line":81,"column":38}},"38":{"start":{"line":84,"column":6},"end":{"line":86,"column":7}},"39":{"start":{"line":85,"column":8},"end":{"line":85,"column":32}},"40":{"start":{"line":88,"column":6},"end":{"line":88,"column":57}},"41":{"start":{"line":93,"column":6},"end":{"line":93,"column":40}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":6},"end":{"line":13,"column":6}},{"start":{"line":13,"column":6},"end":{"line":13,"column":6}}]},"2":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":6},"end":{"line":18,"column":6}},{"start":{"line":18,"column":6},"end":{"line":18,"column":6}}]},"3":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":22},"end":{"line":22,"column":28}},{"start":{"line":22,"column":32},"end":{"line":22,"column":44}}]},"4":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":10},"end":{"line":38,"column":10}},{"start":{"line":38,"column":10},"end":{"line":38,"column":10}}]},"5":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":6},"end":{"line":51,"column":6}},{"start":{"line":51,"column":6},"end":{"line":51,"column":6}}]},"6":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":6},"end":{"line":60,"column":6}},{"start":{"line":60,"column":6},"end":{"line":60,"column":6}}]},"7":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":6},"end":{"line":68,"column":6}},{"start":{"line":68,"column":6},"end":{"line":68,"column":6}}]},"8":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":6},"end":{"line":72,"column":6}},{"start":{"line":72,"column":6},"end":{"line":72,"column":6}}]},"9":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":6},"end":{"line":80,"column":6}},{"start":{"line":80,"column":6},"end":{"line":80,"column":6}}]},"10":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":6},"end":{"line":84,"column":6}},{"start":{"line":84,"column":6},"end":{"line":84,"column":6}}]}},"code":["'use strict'","","const multiaddr = require('multiaddr')","const promisify = require('promisify-es6')","const flatMap = require('lodash.flatmap')","const values = require('lodash.values')","","const OFFLINE_ERROR = require('../utils').OFFLINE_ERROR","","module.exports = function swarm (self) {","  return {","    peers: promisify((opts, callback) => {","      if (typeof opts === 'function') {","        callback = opts","        opts = {}","      }","","      if (!self.isOnline()) {","        return callback(OFFLINE_ERROR)","      }","","      const verbose = opts.v || opts.verbose","      // TODO: return latency and streams when verbose is set","      // we currently don't have this information","","      const peers = self._peerInfoBook.getAll()","      const keys = Object.keys(peers)","","      const peerList = flatMap(keys, (id) => {","        const peer = peers[id]","","        return peer.multiaddrs.map((addr) => {","          const res = {","            addr: addr,","            peer: peers[id]","          }","","          if (verbose) {","            res.latency = 'unknown'","          }","","          return res","        })","      })","","      callback(null, peerList)","    }),","","    // all the addrs we know","    addrs: promisify((callback) => {","      if (!self.isOnline()) {","        return callback(OFFLINE_ERROR)","      }","","      const peers = values(self._peerInfoBook.getAll())","      callback(null, peers)","    }),","","    localAddrs: promisify((callback) => {","      if (!self.isOnline()) {","        return callback(OFFLINE_ERROR)","      }","","      callback(null, self._libp2pNode.peerInfo.multiaddrs)","    }),","","    connect: promisify((maddr, callback) => {","      if (!self.isOnline()) {","        return callback(OFFLINE_ERROR)","      }","","      if (typeof maddr === 'string') {","        maddr = multiaddr(maddr)","      }","","      self._libp2pNode.dialByMultiaddr(maddr, callback)","    }),","","    disconnect: promisify((maddr, callback) => {","      if (!self.isOnline()) {","        return callback(OFFLINE_ERROR)","      }","","      if (typeof maddr === 'string') {","        maddr = multiaddr(maddr)","      }","","      self._libp2pNode.hangUpByMultiaddr(maddr, callback)","    }),","","    filters: promisify((callback) => {","      // TODO","      throw new Error('Not implemented')","    })","  }","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"8":1,"10":1,"11":0,"13":0,"14":0,"15":0,"18":0,"19":0,"22":0,"26":0,"27":0,"29":0,"30":0,"32":0,"33":0,"38":0,"39":0,"42":0,"46":0,"51":0,"52":0,"55":0,"56":0,"60":0,"61":0,"64":0,"68":0,"69":0,"72":0,"73":0,"76":0,"80":0,"81":0,"84":0,"85":0,"88":0,"93":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/utils.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":112}}},"branchMap":{},"code":["'use strict'","","exports.OFFLINE_ERROR = new Error('This command must be run in online mode. Try running \\'ipfs daemon\\' first.')",""],"l":{"3":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/ping.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/ping.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"ping","line":5,"loc":{"start":{"line":5,"column":17},"end":{"line":5,"column":38}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"2":{"start":{"line":5,"column":0},"end":{"line":9,"column":1}},"3":{"start":{"line":6,"column":2},"end":{"line":8,"column":4}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}}},"branchMap":{},"code":["'use strict'","","const promisify = require('promisify-es6')","","module.exports = function ping (self) {","  return promisify((callback) => {","    callback(new Error('Not implemented'))","  })","}",""],"l":{"3":1,"5":1,"6":0,"7":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/files.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/files.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":1,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"files","line":19,"loc":{"start":{"line":19,"column":17},"end":{"line":19,"column":39}}},"2":{"name":"prepareFile","line":129,"loc":{"start":{"line":129,"column":0},"end":{"line":129,"column":44}}},"3":{"name":"normalizeContent","line":144,"loc":{"start":{"line":144,"column":0},"end":{"line":144,"column":36}}},"4":{"name":"noop","line":180,"loc":{"start":{"line":180,"column":0},"end":{"line":180,"column":17}}},"5":{"name":"(anonymous_5)","line":183,"loc":{"start":{"line":183,"column":14},"end":{"line":183,"column":42}}},"6":{"name":"(anonymous_6)","line":190,"loc":{"start":{"line":190,"column":8},"end":{"line":190,"column":11}}},"7":{"name":"(anonymous_7)","line":206,"loc":{"start":{"line":206,"column":9},"end":{"line":206,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":50}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":38}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":38}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":37}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":42}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":42}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":35}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":33}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":41}},"10":{"start":{"line":12,"column":0},"end":{"line":12,"column":49}},"11":{"start":{"line":13,"column":0},"end":{"line":13,"column":47}},"12":{"start":{"line":14,"column":0},"end":{"line":14,"column":27}},"13":{"start":{"line":15,"column":0},"end":{"line":15,"column":44}},"14":{"start":{"line":16,"column":0},"end":{"line":16,"column":36}},"15":{"start":{"line":17,"column":0},"end":{"line":17,"column":39}},"16":{"start":{"line":19,"column":0},"end":{"line":127,"column":1}},"17":{"start":{"line":20,"column":2},"end":{"line":27,"column":3}},"18":{"start":{"line":21,"column":4},"end":{"line":26,"column":5}},"19":{"start":{"line":29,"column":2},"end":{"line":126,"column":3}},"20":{"start":{"line":31,"column":6},"end":{"line":34,"column":7}},"21":{"start":{"line":32,"column":8},"end":{"line":32,"column":26}},"22":{"start":{"line":33,"column":8},"end":{"line":33,"column":27}},"23":{"start":{"line":36,"column":6},"end":{"line":36,"column":56}},"24":{"start":{"line":37,"column":6},"end":{"line":37,"column":26}},"25":{"start":{"line":38,"column":6},"end":{"line":41,"column":7}},"26":{"start":{"line":43,"column":6},"end":{"line":43,"column":49}},"27":{"start":{"line":45,"column":6},"end":{"line":45,"column":45}},"28":{"start":{"line":45,"column":37},"end":{"line":45,"column":44}},"29":{"start":{"line":47,"column":6},"end":{"line":47,"column":31}},"30":{"start":{"line":53,"column":6},"end":{"line":58,"column":7}},"31":{"start":{"line":54,"column":8},"end":{"line":54,"column":26}},"32":{"start":{"line":55,"column":8},"end":{"line":55,"column":27}},"33":{"start":{"line":56,"column":13},"end":{"line":58,"column":7}},"34":{"start":{"line":57,"column":8},"end":{"line":57,"column":23}},"35":{"start":{"line":60,"column":6},"end":{"line":64,"column":7}},"36":{"start":{"line":63,"column":8},"end":{"line":63,"column":106}},"37":{"start":{"line":66,"column":6},"end":{"line":76,"column":7}},"38":{"start":{"line":71,"column":10},"end":{"line":71,"column":39}},"39":{"start":{"line":71,"column":31},"end":{"line":71,"column":39}},"40":{"start":{"line":72,"column":10},"end":{"line":72,"column":40}},"41":{"start":{"line":72,"column":31},"end":{"line":72,"column":40}},"42":{"start":{"line":73,"column":10},"end":{"line":73,"column":18}},"43":{"start":{"line":80,"column":6},"end":{"line":82,"column":7}},"44":{"start":{"line":81,"column":8},"end":{"line":81,"column":65}},"45":{"start":{"line":84,"column":6},"end":{"line":106,"column":8}},"46":{"start":{"line":85,"column":8},"end":{"line":87,"column":9}},"47":{"start":{"line":86,"column":10},"end":{"line":86,"column":30}},"48":{"start":{"line":89,"column":8},"end":{"line":89,"column":33}},"49":{"start":{"line":91,"column":8},"end":{"line":91,"column":48}},"50":{"start":{"line":93,"column":8},"end":{"line":95,"column":9}},"51":{"start":{"line":94,"column":10},"end":{"line":94,"column":68}},"52":{"start":{"line":97,"column":8},"end":{"line":105,"column":9}},"53":{"start":{"line":100,"column":12},"end":{"line":102,"column":13}},"54":{"start":{"line":101,"column":14},"end":{"line":101,"column":34}},"55":{"start":{"line":103,"column":12},"end":{"line":103,"column":61}},"56":{"start":{"line":110,"column":6},"end":{"line":120,"column":9}},"57":{"start":{"line":113,"column":10},"end":{"line":116,"column":11}},"58":{"start":{"line":114,"column":12},"end":{"line":114,"column":56}},"59":{"start":{"line":115,"column":12},"end":{"line":115,"column":32}},"60":{"start":{"line":118,"column":10},"end":{"line":118,"column":21}},"61":{"start":{"line":124,"column":6},"end":{"line":124,"column":56}},"62":{"start":{"line":129,"column":0},"end":{"line":142,"column":1}},"63":{"start":{"line":130,"column":2},"end":{"line":130,"column":56}},"64":{"start":{"line":132,"column":2},"end":{"line":141,"column":14}},"65":{"start":{"line":133,"column":12},"end":{"line":133,"column":47}},"66":{"start":{"line":135,"column":6},"end":{"line":139,"column":8}},"67":{"start":{"line":144,"column":0},"end":{"line":178,"column":1}},"68":{"start":{"line":145,"column":2},"end":{"line":147,"column":3}},"69":{"start":{"line":146,"column":4},"end":{"line":146,"column":23}},"70":{"start":{"line":149,"column":2},"end":{"line":177,"column":4}},"71":{"start":{"line":151,"column":4},"end":{"line":156,"column":5}},"72":{"start":{"line":152,"column":6},"end":{"line":155,"column":7}},"73":{"start":{"line":159,"column":4},"end":{"line":164,"column":5}},"74":{"start":{"line":160,"column":6},"end":{"line":163,"column":7}},"75":{"start":{"line":166,"column":4},"end":{"line":174,"column":5}},"76":{"start":{"line":167,"column":6},"end":{"line":169,"column":7}},"77":{"start":{"line":168,"column":8},"end":{"line":168,"column":50}},"78":{"start":{"line":171,"column":6},"end":{"line":173,"column":7}},"79":{"start":{"line":172,"column":8},"end":{"line":172,"column":50}},"80":{"start":{"line":176,"column":4},"end":{"line":176,"column":15}},"81":{"start":{"line":180,"column":0},"end":{"line":180,"column":19}},"82":{"start":{"line":184,"column":4},"end":{"line":184,"column":55}},"83":{"start":{"line":185,"column":4},"end":{"line":185,"column":33}},"84":{"start":{"line":186,"column":4},"end":{"line":186,"column":25}},"85":{"start":{"line":187,"column":4},"end":{"line":187,"column":31}},"86":{"start":{"line":191,"column":4},"end":{"line":203,"column":6}},"87":{"start":{"line":192,"column":6},"end":{"line":195,"column":7}},"88":{"start":{"line":193,"column":8},"end":{"line":193,"column":49}},"89":{"start":{"line":194,"column":8},"end":{"line":194,"column":12}},"90":{"start":{"line":196,"column":6},"end":{"line":202,"column":7}},"91":{"start":{"line":197,"column":8},"end":{"line":199,"column":9}},"92":{"start":{"line":198,"column":10},"end":{"line":198,"column":33}},"93":{"start":{"line":201,"column":8},"end":{"line":201,"column":23}},"94":{"start":{"line":207,"column":4},"end":{"line":207,"column":41}},"95":{"start":{"line":208,"column":4},"end":{"line":208,"column":30}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":6},"end":{"line":31,"column":6}},{"start":{"line":31,"column":6},"end":{"line":31,"column":6}}]},"2":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":6},"end":{"line":53,"column":6}},{"start":{"line":53,"column":6},"end":{"line":53,"column":6}}]},"3":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":13},"end":{"line":56,"column":13}},{"start":{"line":56,"column":13},"end":{"line":56,"column":13}}]},"4":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":17},"end":{"line":56,"column":26}},{"start":{"line":56,"column":30},"end":{"line":56,"column":60}}]},"5":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":6},"end":{"line":60,"column":6}},{"start":{"line":60,"column":6},"end":{"line":60,"column":6}}]},"6":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":10},"end":{"line":60,"column":34}},{"start":{"line":61,"column":10},"end":{"line":61,"column":32}},{"start":{"line":62,"column":10},"end":{"line":62,"column":25}}]},"7":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":10},"end":{"line":71,"column":10}},{"start":{"line":71,"column":10},"end":{"line":71,"column":10}}]},"8":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":10},"end":{"line":72,"column":10}},{"start":{"line":72,"column":10},"end":{"line":72,"column":10}}]},"9":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":6},"end":{"line":80,"column":6}},{"start":{"line":80,"column":6},"end":{"line":80,"column":6}}]},"10":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":8},"end":{"line":85,"column":8}},{"start":{"line":85,"column":8},"end":{"line":85,"column":8}}]},"11":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":8},"end":{"line":93,"column":8}},{"start":{"line":93,"column":8},"end":{"line":93,"column":8}}]},"12":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":12},"end":{"line":100,"column":12}},{"start":{"line":100,"column":12},"end":{"line":100,"column":12}}]},"13":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":10},"end":{"line":113,"column":10}},{"start":{"line":113,"column":10},"end":{"line":113,"column":10}}]},"14":{"line":136,"type":"binary-expr","locations":[{"start":{"line":136,"column":14},"end":{"line":136,"column":23}},{"start":{"line":136,"column":27},"end":{"line":136,"column":33}}]},"15":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":2},"end":{"line":145,"column":2}},{"start":{"line":145,"column":2},"end":{"line":145,"column":2}}]},"16":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":4},"end":{"line":151,"column":4}},{"start":{"line":151,"column":4},"end":{"line":151,"column":4}}]},"17":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":4},"end":{"line":159,"column":4}},{"start":{"line":159,"column":4},"end":{"line":159,"column":4}}]},"18":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":4},"end":{"line":166,"column":4}},{"start":{"line":166,"column":4},"end":{"line":166,"column":4}}]},"19":{"line":166,"type":"binary-expr","locations":[{"start":{"line":166,"column":8},"end":{"line":166,"column":12}},{"start":{"line":166,"column":16},"end":{"line":166,"column":28}},{"start":{"line":166,"column":32},"end":{"line":166,"column":66}}]},"20":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":6},"end":{"line":167,"column":6}},{"start":{"line":167,"column":6},"end":{"line":167,"column":6}}]},"21":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":6},"end":{"line":171,"column":6}},{"start":{"line":171,"column":6},"end":{"line":171,"column":6}}]},"22":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":6},"end":{"line":196,"column":6}},{"start":{"line":196,"column":6},"end":{"line":196,"column":6}}]},"23":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":8},"end":{"line":197,"column":8}},{"start":{"line":197,"column":8},"end":{"line":197,"column":8}}]}},"code":["'use strict'","","const unixfsEngine = require('ipfs-unixfs-engine')","const importer = unixfsEngine.importer","const exporter = unixfsEngine.exporter","const UnixFS = require('ipfs-unixfs')","const promisify = require('promisify-es6')","const multihashes = require('multihashes')","const pull = require('pull-stream')","const sort = require('pull-sort')","const pushable = require('pull-pushable')","const toStream = require('pull-stream-to-stream')","const toPull = require('stream-to-pull-stream')","const CID = require('cids')","const waterfall = require('async/waterfall')","const isStream = require('isstream')","const Duplex = require('stream').Duplex","","module.exports = function files (self) {","  const createAddPullStream = (options) => {","    return pull(","      pull.map(normalizeContent),","      pull.flatten(),","      importer(self._ipldResolver, options),","      pull.asyncMap(prepareFile.bind(null, self))","    )","  }","","  return {","    createAddStream: (options, callback) => {","      if (typeof options === 'function') {","        callback = options","        options = undefined","      }","","      const addPullStream = createAddPullStream(options)","      const p = pushable()","      const s = pull(","        p,","        addPullStream","      )","","      const retStream = new AddStreamDuplex(s, p)","","      retStream.once('finish', () => p.end())","","      callback(null, retStream)","    },","","    createAddPullStream: createAddPullStream,","","    add: promisify((data, options, callback) => {","      if (typeof options === 'function') {","        callback = options","        options = undefined","      } else if (!callback || typeof callback !== 'function') {","        callback = noop","      }","","      if (typeof data !== 'object' &&","          !Buffer.isBuffer(data) &&","          !isStream(data)) {","        return callback(new Error('Invalid arguments, data must be an object, Buffer or readable stream'))","      }","","      pull(","        pull.values(normalizeContent(data)),","        importer(self._ipldResolver, options),","        pull.asyncMap(prepareFile.bind(null, self)),","        sort((a, b) => {","          if (a.path < b.path) return 1","          if (a.path > b.path) return -1","          return 0","        }),","        pull.collect(callback)","      )","    }),","","    cat: promisify((hash, callback) => {","      if (typeof hash === 'function') {","        return callback(new Error('You must supply a multihash'))","      }","","      self._ipldResolver.get(new CID(hash), (err, result) => {","        if (err) {","          return callback(err)","        }","","        const node = result.value","","        const data = UnixFS.unmarshal(node.data)","","        if (data.type === 'directory') {","          return callback(new Error('This dag node is a directory'))","        }","","        pull(","          exporter(hash, self._ipldResolver),","          pull.collect((err, files) => {","            if (err) {","              return callback(err)","            }","            callback(null, toStream.source(files[0].content))","          })","        )","      })","    }),","","    get: promisify((hash, callback) => {","      callback(null, toStream.source(pull(","        exporter(hash, self._ipldResolver),","        pull.map((file) => {","          if (file.content) {","            file.content = toStream.source(file.content)","            file.content.pause()","          }","","          return file","        })","      )))","    }),","","    getPull: promisify((hash, callback) => {","      callback(null, exporter(hash, self._ipldResolver))","    })","  }","}","","function prepareFile (self, file, callback) {","  const bs58mh = multihashes.toB58String(file.multihash)","","  waterfall([","    (cb) => self.object.get(file.multihash, cb),","    (node, cb) => {","      cb(null, {","        path: file.path || bs58mh,","        hash: bs58mh,","        size: node.size","      })","    }","  ], callback)","}","","function normalizeContent (content) {","  if (!Array.isArray(content)) {","    content = [content]","  }","","  return content.map((data) => {","    // Buffer input","    if (Buffer.isBuffer(data)) {","      data = {","        path: '',","        content: pull.values([data])","      }","    }","","    // Readable stream input","    if (isStream.isReadable(data)) {","      data = {","        path: '',","        content: toPull.source(data)","      }","    }","","    if (data && data.content && typeof data.content !== 'function') {","      if (Buffer.isBuffer(data.content)) {","        data.content = pull.values([data.content])","      }","","      if (isStream.isReadable(data.content)) {","        data.content = toPull.source(data.content)","      }","    }","","    return data","  })","}","","function noop () {}","","class AddStreamDuplex extends Duplex {","  constructor (pullStream, push, options) {","    super(Object.assign({ objectMode: true }, options))","    this._pullStream = pullStream","    this._pushable = push","    this._waitingPullFlush = []","  }","","  _read () {","    this._pullStream(null, (end, data) => {","      while (this._waitingPullFlush.length) {","        const cb = this._waitingPullFlush.shift()","        cb()","      }","      if (end) {","        if (end instanceof Error) {","          this.emit('error', end)","        }","      } else {","        this.push(data)","      }","    })","  }","","  _write (chunk, encoding, callback) {","    this._waitingPullFlush.push(callback)","    this._pushable.push(chunk)","  }","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"19":1,"20":0,"21":0,"29":0,"31":0,"32":0,"33":0,"36":0,"37":0,"38":0,"43":0,"45":0,"47":0,"53":0,"54":0,"55":0,"56":0,"57":0,"60":0,"63":0,"66":0,"71":0,"72":0,"73":0,"80":0,"81":0,"84":0,"85":0,"86":0,"89":0,"91":0,"93":0,"94":0,"97":0,"100":0,"101":0,"103":0,"110":0,"113":0,"114":0,"115":0,"118":0,"124":0,"129":1,"130":0,"132":0,"133":0,"135":0,"144":1,"145":0,"146":0,"149":0,"151":0,"152":0,"159":0,"160":0,"166":0,"167":0,"168":0,"171":0,"172":0,"176":0,"180":1,"184":0,"185":0,"186":0,"187":0,"191":0,"192":0,"193":0,"194":0,"196":0,"197":0,"198":0,"201":0,"207":0,"208":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/bitswap.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/bitswap.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"formatWantlist","line":5,"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":31}}},"2":{"name":"bitswap","line":9,"loc":{"start":{"line":9,"column":17},"end":{"line":9,"column":41}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":55}},"2":{"start":{"line":5,"column":0},"end":{"line":7,"column":1}},"3":{"start":{"line":6,"column":2},"end":{"line":6,"column":42}},"4":{"start":{"line":6,"column":37},"end":{"line":6,"column":41}},"5":{"start":{"line":9,"column":0},"end":{"line":38,"column":1}},"6":{"start":{"line":10,"column":2},"end":{"line":37,"column":3}},"7":{"start":{"line":12,"column":6},"end":{"line":14,"column":7}},"8":{"start":{"line":13,"column":8},"end":{"line":13,"column":27}},"9":{"start":{"line":16,"column":6},"end":{"line":16,"column":46}},"10":{"start":{"line":17,"column":6},"end":{"line":17,"column":33}},"11":{"start":{"line":20,"column":6},"end":{"line":22,"column":7}},"12":{"start":{"line":21,"column":8},"end":{"line":21,"column":27}},"13":{"start":{"line":24,"column":6},"end":{"line":24,"column":40}},"14":{"start":{"line":25,"column":6},"end":{"line":25,"column":53}},"15":{"start":{"line":26,"column":6},"end":{"line":26,"column":61}},"16":{"start":{"line":26,"column":44},"end":{"line":26,"column":60}},"17":{"start":{"line":28,"column":6},"end":{"line":28,"column":18}},"18":{"start":{"line":31,"column":6},"end":{"line":33,"column":7}},"19":{"start":{"line":32,"column":8},"end":{"line":32,"column":27}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":6},"end":{"line":12,"column":6}},{"start":{"line":12,"column":6},"end":{"line":12,"column":6}}]},"2":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":6},"end":{"line":20,"column":6}},{"start":{"line":20,"column":6},"end":{"line":20,"column":6}}]},"3":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":6},"end":{"line":31,"column":6}},{"start":{"line":31,"column":6},"end":{"line":31,"column":6}}]}},"code":["'use strict'","","const OFFLINE_ERROR = require('../utils').OFFLINE_ERROR","","function formatWantlist (list) {","  return Array.from(list).map((e) => e[1])","}","","module.exports = function bitswap (self) {","  return {","    wantlist: () => {","      if (!self.isOnline()) {","        throw OFFLINE_ERROR","      }","","      const list = self._bitswap.getWantlist()","      return formatWantlist(list)","    },","    stat: () => {","      if (!self.isOnline()) {","        throw OFFLINE_ERROR","      }","","      const stats = self._bitswap.stat()","      stats.wantlist = formatWantlist(stats.wantlist)","      stats.peers = stats.peers.map((id) => id.toB58String())","","      return stats","    },","    unwant: (key) => {","      if (!self.isOnline()) {","        throw OFFLINE_ERROR","      }","","      // TODO: implement when https://github.com/ipfs/js-ipfs-bitswap/pull/10 is merged","    }","  }","}",""],"l":{"3":1,"5":1,"6":0,"9":1,"10":0,"12":0,"13":0,"16":0,"17":0,"20":0,"21":0,"24":0,"25":0,"26":0,"28":0,"31":0,"32":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/pubsub.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/components/pubsub.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"pubsub","line":8,"loc":{"start":{"line":8,"column":17},"end":{"line":8,"column":40}}},"2":{"name":"(anonymous_2)","line":82,"loc":{"start":{"line":82,"column":20},"end":{"line":82,"column":24}}},"3":{"name":"subscribe","line":87,"loc":{"start":{"line":87,"column":2},"end":{"line":87,"column":57}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":50}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":55}},"4":{"start":{"line":8,"column":0},"end":{"line":97,"column":1}},"5":{"start":{"line":9,"column":2},"end":{"line":85,"column":3}},"6":{"start":{"line":11,"column":6},"end":{"line":13,"column":7}},"7":{"start":{"line":12,"column":8},"end":{"line":12,"column":27}},"8":{"start":{"line":15,"column":6},"end":{"line":19,"column":7}},"9":{"start":{"line":16,"column":8},"end":{"line":16,"column":26}},"10":{"start":{"line":17,"column":8},"end":{"line":17,"column":25}},"11":{"start":{"line":18,"column":8},"end":{"line":18,"column":20}},"12":{"start":{"line":21,"column":6},"end":{"line":30,"column":7}},"13":{"start":{"line":22,"column":8},"end":{"line":29,"column":10}},"14":{"start":{"line":23,"column":10},"end":{"line":28,"column":12}},"15":{"start":{"line":24,"column":12},"end":{"line":26,"column":13}},"16":{"start":{"line":25,"column":14},"end":{"line":25,"column":32}},"17":{"start":{"line":27,"column":12},"end":{"line":27,"column":21}},"18":{"start":{"line":32,"column":6},"end":{"line":32,"column":50}},"19":{"start":{"line":36,"column":6},"end":{"line":36,"column":29}},"20":{"start":{"line":38,"column":6},"end":{"line":38,"column":39}},"21":{"start":{"line":40,"column":6},"end":{"line":42,"column":7}},"22":{"start":{"line":41,"column":8},"end":{"line":41,"column":29}},"23":{"start":{"line":46,"column":6},"end":{"line":48,"column":7}},"24":{"start":{"line":47,"column":8},"end":{"line":47,"column":58}},"25":{"start":{"line":47,"column":34},"end":{"line":47,"column":57}},"26":{"start":{"line":50,"column":6},"end":{"line":52,"column":7}},"27":{"start":{"line":51,"column":8},"end":{"line":51,"column":79}},"28":{"start":{"line":51,"column":34},"end":{"line":51,"column":78}},"29":{"start":{"line":54,"column":6},"end":{"line":54,"column":39}},"30":{"start":{"line":55,"column":6},"end":{"line":55,"column":36}},"31":{"start":{"line":55,"column":25},"end":{"line":55,"column":35}},"32":{"start":{"line":59,"column":6},"end":{"line":61,"column":7}},"33":{"start":{"line":60,"column":8},"end":{"line":60,"column":58}},"34":{"start":{"line":60,"column":34},"end":{"line":60,"column":57}},"35":{"start":{"line":63,"column":6},"end":{"line":65,"column":7}},"36":{"start":{"line":67,"column":6},"end":{"line":67,"column":55}},"37":{"start":{"line":67,"column":25},"end":{"line":67,"column":54}},"38":{"start":{"line":71,"column":6},"end":{"line":73,"column":7}},"39":{"start":{"line":72,"column":8},"end":{"line":72,"column":58}},"40":{"start":{"line":72,"column":34},"end":{"line":72,"column":57}},"41":{"start":{"line":75,"column":6},"end":{"line":77,"column":52}},"42":{"start":{"line":76,"column":28},"end":{"line":76,"column":50}},"43":{"start":{"line":77,"column":25},"end":{"line":77,"column":51}},"44":{"start":{"line":79,"column":6},"end":{"line":79,"column":47}},"45":{"start":{"line":79,"column":25},"end":{"line":79,"column":46}},"46":{"start":{"line":83,"column":6},"end":{"line":83,"column":44}},"47":{"start":{"line":87,"column":2},"end":{"line":96,"column":3}},"48":{"start":{"line":88,"column":4},"end":{"line":88,"column":27}},"49":{"start":{"line":90,"column":4},"end":{"line":92,"column":5}},"50":{"start":{"line":91,"column":6},"end":{"line":91,"column":25}},"51":{"start":{"line":94,"column":4},"end":{"line":94,"column":25}},"52":{"start":{"line":95,"column":4},"end":{"line":95,"column":34}},"53":{"start":{"line":95,"column":23},"end":{"line":95,"column":33}}},"branchMap":{"1":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":6},"end":{"line":11,"column":6}},{"start":{"line":11,"column":6},"end":{"line":11,"column":6}}]},"2":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":6},"end":{"line":15,"column":6}},{"start":{"line":15,"column":6},"end":{"line":15,"column":6}}]},"3":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":6},"end":{"line":21,"column":6}},{"start":{"line":21,"column":6},"end":{"line":21,"column":6}}]},"4":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":12},"end":{"line":24,"column":12}},{"start":{"line":24,"column":12},"end":{"line":24,"column":12}}]},"5":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":6},"end":{"line":40,"column":6}},{"start":{"line":40,"column":6},"end":{"line":40,"column":6}}]},"6":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":6},"end":{"line":46,"column":6}},{"start":{"line":46,"column":6},"end":{"line":46,"column":6}}]},"7":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":6},"end":{"line":50,"column":6}},{"start":{"line":50,"column":6},"end":{"line":50,"column":6}}]},"8":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":6},"end":{"line":59,"column":6}},{"start":{"line":59,"column":6},"end":{"line":59,"column":6}}]},"9":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":6},"end":{"line":71,"column":6}},{"start":{"line":71,"column":6},"end":{"line":71,"column":6}}]},"10":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":4},"end":{"line":90,"column":4}},{"start":{"line":90,"column":4},"end":{"line":90,"column":4}}]}},"code":["'use strict'","","const promisify = require('promisify-es6')","const setImmediate = require('async/setImmediate')","","const OFFLINE_ERROR = require('../utils').OFFLINE_ERROR","","module.exports = function pubsub (self) {","  return {","    subscribe: (topic, options, handler, callback) => {","      if (!self.isOnline()) {","        throw OFFLINE_ERROR","      }","","      if (typeof options === 'function') {","        callback = handler","        handler = options","        options = {}","      }","","      if (!callback) {","        return new Promise((resolve, reject) => {","          subscribe(topic, options, handler, (err) => {","            if (err) {","              return reject(err)","            }","            resolve()","          })","        })","      }","","      subscribe(topic, options, handler, callback)","    },","","    unsubscribe: (topic, handler) => {","      const ps = self._pubsub","","      ps.removeListener(topic, handler)","","      if (ps.listenerCount(topic) === 0) {","        ps.unsubscribe(topic)","      }","    },","","    publish: promisify((topic, data, callback) => {","      if (!self.isOnline()) {","        return setImmediate(() => callback(OFFLINE_ERROR))","      }","","      if (!Buffer.isBuffer(data)) {","        return setImmediate(() => callback(new Error('data must be a Buffer')))","      }","","      self._pubsub.publish(topic, data)","      setImmediate(() => callback())","    }),","","    ls: promisify((callback) => {","      if (!self.isOnline()) {","        return setImmediate(() => callback(OFFLINE_ERROR))","      }","","      const subscriptions = Array.from(","        self._pubsub.subscriptions","      )","","      setImmediate(() => callback(null, subscriptions))","    }),","","    peers: promisify((topic, callback) => {","      if (!self.isOnline()) {","        return setImmediate(() => callback(OFFLINE_ERROR))","      }","","      const peers = Array.from(self._pubsub.peers.values())","          .filter((peer) => peer.topics.has(topic))","          .map((peer) => peer.info.id.toB58String())","","      setImmediate(() => callback(null, peers))","    }),","","    setMaxListeners (n) {","      return self._pubsub.setMaxListeners(n)","    }","  }","","  function subscribe (topic, options, handler, callback) {","    const ps = self._pubsub","","    if (ps.listenerCount(topic) === 0) {","      ps.subscribe(topic)","    }","","    ps.on(topic, handler)","    setImmediate(() => callback())","  }","}",""],"l":{"3":1,"4":1,"6":1,"8":1,"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"21":0,"22":0,"23":0,"24":0,"25":0,"27":0,"32":0,"36":0,"38":0,"40":0,"41":0,"46":0,"47":0,"50":0,"51":0,"54":0,"55":0,"59":0,"60":0,"63":0,"67":0,"71":0,"72":0,"75":0,"76":0,"77":0,"79":0,"83":0,"87":1,"88":0,"90":0,"91":0,"94":0,"95":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/.aegir.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/.aegir.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":12,"column":1}}},"branchMap":{},"code":["'use strict'","","module.exports = {","  karma: {","    files: [{","      pattern: 'node_modules/interface-ipfs-core/test/fixtures/**/*',","      watched: false,","      served: true,","      included: false","    }]","  }","}",""],"l":{"3":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/gulpfile.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/gulpfile.js","s":{"1":2,"2":2,"3":2,"4":2,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"spawnDaemon","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":38}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":66}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":41}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":14}},"8":{"start":{"line":15,"column":0},"end":{"line":38,"column":1}},"9":{"start":{"line":16,"column":2},"end":{"line":16,"column":26}},"10":{"start":{"line":18,"column":2},"end":{"line":33,"column":3}},"11":{"start":{"line":35,"column":2},"end":{"line":35,"column":54}},"12":{"start":{"line":36,"column":2},"end":{"line":36,"column":20}},"13":{"start":{"line":37,"column":2},"end":{"line":37,"column":30}},"14":{"start":{"line":40,"column":0},"end":{"line":48,"column":2}},"15":{"start":{"line":41,"column":2},"end":{"line":41,"column":12}},"16":{"start":{"line":42,"column":2},"end":{"line":47,"column":10}},"17":{"start":{"line":43,"column":12},"end":{"line":43,"column":30}},"18":{"start":{"line":44,"column":12},"end":{"line":44,"column":30}},"19":{"start":{"line":45,"column":12},"end":{"line":45,"column":31}},"20":{"start":{"line":46,"column":12},"end":{"line":46,"column":31}},"21":{"start":{"line":50,"column":0},"end":{"line":54,"column":2}},"22":{"start":{"line":51,"column":2},"end":{"line":53,"column":11}},"23":{"start":{"line":51,"column":29},"end":{"line":53,"column":3}},"24":{"start":{"line":52,"column":4},"end":{"line":52,"column":40}},"25":{"start":{"line":52,"column":21},"end":{"line":52,"column":34}},"26":{"start":{"line":56,"column":0},"end":{"line":56,"column":51}},"27":{"start":{"line":57,"column":0},"end":{"line":57,"column":48}},"28":{"start":{"line":58,"column":0},"end":{"line":58,"column":49}},"29":{"start":{"line":59,"column":0},"end":{"line":59,"column":46}},"30":{"start":{"line":61,"column":0},"end":{"line":61,"column":27}}},"branchMap":{},"code":["'use strict'","","const gulp = require('gulp')","const parallel = require('async/parallel')","const series = require('async/series')","const createTempRepo = require('./test/utils/create-repo-node.js')","const HTTPAPI = require('./src/http-api')","const leftPad = require('left-pad')","","let nodes = []","","/*"," * spawns a daemon with ports numbers starting in 10 and ending in `num`"," */","function spawnDaemon (num, callback) {","  num = leftPad(num, 3, 0)","","  const config = {","    Addresses: {","      Swarm: [","        `/ip4/127.0.0.1/tcp/10${num}`,","        `/ip4/127.0.0.1/tcp/20${num}/ws`","      ],","      API: `/ip4/127.0.0.1/tcp/31${num}`,","      Gateway: `/ip4/127.0.0.1/tcp/32${num}`","    },","    Bootstrap: [],","    Discovery: {","      MDNS: {","        Enabled: false","      }","    }","  }","","  const daemon = new HTTPAPI(createTempRepo(), config)","  nodes.push(daemon)","  daemon.start(true, callback)","}","","gulp.task('libnode:start', (done) => {","  nodes = []","  parallel([","    (cb) => spawnDaemon(7, cb),","    (cb) => spawnDaemon(8, cb),","    (cb) => spawnDaemon(12, cb),","    (cb) => spawnDaemon(13, cb)","  ], done)","})","","gulp.task('libnode:stop', (done) => {","  series(nodes.map((node) => (cb) => {","    setTimeout(() => node.stop(cb), 100)","  }), done)","})","","gulp.task('test:browser:before', ['libnode:start'])","gulp.task('test:node:before', ['libnode:start'])","gulp.task('test:browser:after', ['libnode:stop'])","gulp.task('test:node:after', ['libnode:stop'])","","require('aegir/gulp')(gulp)",""],"l":{"3":2,"4":2,"5":2,"6":2,"7":0,"8":0,"10":0,"15":1,"16":0,"18":0,"35":0,"36":0,"37":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"50":0,"51":0,"52":0,"56":0,"57":0,"58":0,"59":0,"61":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/index.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":31}}},"branchMap":{},"code":["'use strict'","","const IPFS = require('./core')","","exports = module.exports = IPFS",""],"l":{"3":1,"5":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/utils.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"isDaemonOn","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":23}}},"2":{"name":"getAPICtl","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":24}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":34}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":38}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":28}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":30}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":24}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":30}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":24}},"11":{"start":{"line":15,"column":0},"end":{"line":15,"column":31}},"12":{"start":{"line":16,"column":0},"end":{"line":25,"column":1}},"13":{"start":{"line":17,"column":2},"end":{"line":24,"column":3}},"14":{"start":{"line":18,"column":4},"end":{"line":18,"column":60}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":23}},"16":{"start":{"line":20,"column":4},"end":{"line":20,"column":15}},"17":{"start":{"line":22,"column":4},"end":{"line":22,"column":24}},"18":{"start":{"line":23,"column":4},"end":{"line":23,"column":16}},"19":{"start":{"line":27,"column":0},"end":{"line":27,"column":29}},"20":{"start":{"line":28,"column":0},"end":{"line":35,"column":1}},"21":{"start":{"line":29,"column":2},"end":{"line":31,"column":3}},"22":{"start":{"line":30,"column":4},"end":{"line":30,"column":39}},"23":{"start":{"line":32,"column":2},"end":{"line":32,"column":57}},"24":{"start":{"line":33,"column":2},"end":{"line":33,"column":64}},"25":{"start":{"line":34,"column":2},"end":{"line":34,"column":35}},"26":{"start":{"line":37,"column":0},"end":{"line":66,"column":1}},"27":{"start":{"line":38,"column":2},"end":{"line":40,"column":3}},"28":{"start":{"line":39,"column":4},"end":{"line":39,"column":52}},"29":{"start":{"line":39,"column":47},"end":{"line":39,"column":51}},"30":{"start":{"line":42,"column":2},"end":{"line":49,"column":4}},"31":{"start":{"line":51,"column":2},"end":{"line":57,"column":3}},"32":{"start":{"line":52,"column":4},"end":{"line":56,"column":5}},"33":{"start":{"line":53,"column":6},"end":{"line":53,"column":34}},"34":{"start":{"line":53,"column":29},"end":{"line":53,"column":33}},"35":{"start":{"line":55,"column":6},"end":{"line":55,"column":10}},"36":{"start":{"line":59,"column":2},"end":{"line":61,"column":4}},"37":{"start":{"line":60,"column":4},"end":{"line":60,"column":13}},"38":{"start":{"line":63,"column":2},"end":{"line":65,"column":4}},"39":{"start":{"line":64,"column":4},"end":{"line":64,"column":33}},"40":{"start":{"line":68,"column":0},"end":{"line":70,"column":1}},"41":{"start":{"line":69,"column":2},"end":{"line":69,"column":59}},"42":{"start":{"line":72,"column":0},"end":{"line":85,"column":1}},"43":{"start":{"line":73,"column":2},"end":{"line":84,"column":3}},"44":{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},"45":{"start":{"line":75,"column":6},"end":{"line":75,"column":20}},"46":{"start":{"line":77,"column":4},"end":{"line":83,"column":5}},"47":{"start":{"line":78,"column":6},"end":{"line":80,"column":7}},"48":{"start":{"line":79,"column":8},"end":{"line":79,"column":16}},"49":{"start":{"line":81,"column":6},"end":{"line":81,"column":38}},"50":{"start":{"line":82,"column":6},"end":{"line":82,"column":31}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"2":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"3":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"4":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":8},"end":{"line":52,"column":12}},{"start":{"line":52,"column":16},"end":{"line":52,"column":26}},{"start":{"line":52,"column":30},"end":{"line":52,"column":48}}]},"5":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":9},"end":{"line":69,"column":30}},{"start":{"line":69,"column":34},"end":{"line":69,"column":59}}]},"6":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":74,"column":4}},{"start":{"line":74,"column":4},"end":{"line":74,"column":4}}]},"7":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":4},"end":{"line":77,"column":4}},{"start":{"line":77,"column":4},"end":{"line":77,"column":4}}]},"8":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":6},"end":{"line":78,"column":6}},{"start":{"line":78,"column":6},"end":{"line":78,"column":6}}]},"9":{"line":81,"type":"cond-expr","locations":[{"start":{"line":81,"column":22},"end":{"line":81,"column":32}},{"start":{"line":81,"column":35},"end":{"line":81,"column":38}}]}},"code":["'use strict'","","const fs = require('fs')","const os = require('os')","const APIctl = require('ipfs-api')","const multiaddr = require('multiaddr')","const IPFS = require('../core')","const path = require('path')","const debug = require('debug')","const log = debug('cli')","log.error = debug('cli:error')","","exports = module.exports","","exports.isDaemonOn = isDaemonOn","function isDaemonOn () {","  try {","    fs.readFileSync(path.join(exports.getRepoPath(), 'api'))","    log('daemon is on')","    return true","  } catch (err) {","    log('daemon is off')","    return false","  }","}","","exports.getAPICtl = getAPICtl","function getAPICtl () {","  if (!isDaemonOn()) {","    throw new Error('daemon is not on')","  }","  const apiPath = path.join(exports.getRepoPath(), 'api')","  const apiAddr = multiaddr(fs.readFileSync(apiPath).toString())","  return APIctl(apiAddr.toString())","}","","exports.getIPFS = (callback) => {","  if (isDaemonOn()) {","    return callback(null, getAPICtl(), (cb) => cb())","  }","","  const node = new IPFS({","    repo: exports.getRepoPath(),","    init: false,","    start: false,","    EXPERIMENTAL: {","      pubsub: true","    }","  })","","  const cleanup = (cb) => {","    if (node && node._repo && !node._repo.closed) {","      node._repo.close(() => cb())","    } else {","      cb()","    }","  }","","  node.on('error', (err) => {","    throw err","  })","","  node.once('ready', () => {","    callback(null, node, cleanup)","  })","}","","exports.getRepoPath = () => {","  return process.env.IPFS_PATH || os.homedir() + '/.jsipfs'","}","","exports.createLogger = (visible) => {","  return (msg, newline) => {","    if (newline === undefined) {","      newline = true","    }","    if (visible) {","      if (msg === undefined) {","        msg = ''","      }","      msg = newline ? msg + '\\n' : msg","      process.stdout.write(msg)","    }","  }","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"13":1,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"22":0,"23":0,"27":1,"28":1,"29":0,"30":0,"32":0,"33":0,"34":0,"37":1,"38":0,"39":0,"42":0,"51":0,"52":0,"53":0,"55":0,"59":0,"60":0,"63":0,"64":0,"68":1,"69":0,"72":1,"73":0,"74":0,"75":0,"77":0,"78":0,"79":0,"81":0,"82":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-api/src/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-api/src/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"IpfsAPI","line":8,"loc":{"start":{"line":8,"column":0},"end":{"line":8,"column":47}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":47}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":45}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":46}},"5":{"start":{"line":8,"column":0},"end":{"line":44,"column":1}},"6":{"start":{"line":9,"column":2},"end":{"line":9,"column":28}},"7":{"start":{"line":11,"column":2},"end":{"line":20,"column":3}},"8":{"start":{"line":12,"column":4},"end":{"line":12,"column":58}},"9":{"start":{"line":13,"column":4},"end":{"line":13,"column":31}},"10":{"start":{"line":14,"column":4},"end":{"line":14,"column":28}},"11":{"start":{"line":16,"column":4},"end":{"line":19,"column":5}},"12":{"start":{"line":17,"column":6},"end":{"line":17,"column":35}},"13":{"start":{"line":18,"column":6},"end":{"line":18,"column":73}},"14":{"start":{"line":22,"column":2},"end":{"line":22,"column":34}},"15":{"start":{"line":23,"column":2},"end":{"line":26,"column":3}},"16":{"start":{"line":24,"column":4},"end":{"line":24,"column":31}},"17":{"start":{"line":25,"column":4},"end":{"line":25,"column":19}},"18":{"start":{"line":25,"column":14},"end":{"line":25,"column":19}},"19":{"start":{"line":28,"column":2},"end":{"line":28,"column":29}},"20":{"start":{"line":31,"column":2},"end":{"line":36,"column":3}},"21":{"start":{"line":33,"column":4},"end":{"line":33,"column":47}},"22":{"start":{"line":34,"column":4},"end":{"line":34,"column":26}},"23":{"start":{"line":35,"column":4},"end":{"line":35,"column":26}},"24":{"start":{"line":38,"column":2},"end":{"line":38,"column":42}},"25":{"start":{"line":39,"column":2},"end":{"line":39,"column":39}},"26":{"start":{"line":40,"column":2},"end":{"line":40,"column":24}},"27":{"start":{"line":41,"column":2},"end":{"line":41,"column":22}},"28":{"start":{"line":43,"column":2},"end":{"line":43,"column":13}},"29":{"start":{"line":46,"column":0},"end":{"line":46,"column":34}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":16,"column":4}},{"start":{"line":16,"column":4},"end":{"line":16,"column":4}}]},"2":{"line":18,"type":"cond-expr","locations":[{"start":{"line":18,"column":55},"end":{"line":18,"column":59}},{"start":{"line":18,"column":62},"end":{"line":18,"column":73}}]},"3":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":52}}]},"4":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":9},"end":{"line":23,"column":14}},{"start":{"line":23,"column":18},"end":{"line":23,"column":33}}]},"5":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":25,"column":4}},{"start":{"line":25,"column":4},"end":{"line":25,"column":4}}]},"6":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"7":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":6},"end":{"line":31,"column":18}},{"start":{"line":32,"column":4},"end":{"line":32,"column":31}}]}},"code":["'use strict'","","const multiaddr = require('multiaddr')","const loadCommands = require('./load-commands')","const getConfig = require('./default-config')","const getRequestAPI = require('./request-api')","","function IpfsAPI (hostOrMultiaddr, port, opts) {","  const config = getConfig()","","  try {","    const maddr = multiaddr(hostOrMultiaddr).nodeAddress()","    config.host = maddr.address","    config.port = maddr.port","  } catch (e) {","    if (typeof hostOrMultiaddr === 'string') {","      config.host = hostOrMultiaddr","      config.port = port && typeof port !== 'object' ? port : config.port","    }","  }","","  let lastIndex = arguments.length","  while (!opts && lastIndex-- > 0) {","    opts = arguments[lastIndex]","    if (opts) break","  }","","  Object.assign(config, opts)","","  // autoconfigure in browser","  if (!config.host &&","    typeof self !== 'undefined') {","    const split = self.location.host.split(':')","    config.host = split[0]","    config.port = split[1]","  }","","  const requestAPI = getRequestAPI(config)","  const cmds = loadCommands(requestAPI)","  cmds.send = requestAPI","  cmds.Buffer = Buffer","","  return cmds","}","","exports = module.exports = IpfsAPI",""],"l":{"3":1,"4":1,"5":1,"6":1,"8":1,"9":0,"11":0,"12":0,"13":0,"14":0,"16":0,"17":0,"18":0,"22":0,"23":0,"24":0,"25":0,"28":0,"31":0,"33":0,"34":0,"35":0,"38":0,"39":0,"40":0,"41":0,"43":0,"46":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-api/src/load-commands.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-api/src/load-commands.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"requireCommands","line":3,"loc":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":15},"end":{"line":34,"column":31}}},"3":{"name":"(anonymous_3)","line":44,"loc":{"start":{"line":44,"column":14},"end":{"line":44,"column":30}}},"4":{"name":"loadCommands","line":56,"loc":{"start":{"line":56,"column":0},"end":{"line":56,"column":29}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":54,"column":1}},"2":{"start":{"line":4,"column":2},"end":{"line":30,"column":3}},"3":{"start":{"line":34,"column":2},"end":{"line":42,"column":3}},"4":{"start":{"line":35,"column":4},"end":{"line":35,"column":46}},"5":{"start":{"line":36,"column":4},"end":{"line":36,"column":42}},"6":{"start":{"line":37,"column":4},"end":{"line":37,"column":71}},"7":{"start":{"line":38,"column":4},"end":{"line":38,"column":42}},"8":{"start":{"line":39,"column":4},"end":{"line":39,"column":42}},"9":{"start":{"line":41,"column":4},"end":{"line":41,"column":16}},"10":{"start":{"line":44,"column":2},"end":{"line":51,"column":3}},"11":{"start":{"line":45,"column":4},"end":{"line":49,"column":5}},"12":{"start":{"line":50,"column":4},"end":{"line":50,"column":15}},"13":{"start":{"line":53,"column":2},"end":{"line":53,"column":13}},"14":{"start":{"line":56,"column":0},"end":{"line":65,"column":1}},"15":{"start":{"line":57,"column":2},"end":{"line":57,"column":33}},"16":{"start":{"line":58,"column":2},"end":{"line":58,"column":17}},"17":{"start":{"line":60,"column":2},"end":{"line":62,"column":4}},"18":{"start":{"line":61,"column":4},"end":{"line":61,"column":34}},"19":{"start":{"line":64,"column":2},"end":{"line":64,"column":13}},"20":{"start":{"line":67,"column":0},"end":{"line":67,"column":29}}},"branchMap":{},"code":["'use strict'","","function requireCommands () {","  const cmds = {","    // add and createAddStream alias","    add: require('./api/add'),","    cat: require('./api/cat'),","    createAddStream: require('./api/create-add-stream'),","    bitswap: require('./api/bitswap'),","    block: require('./api/block'),","    bootstrap: require('./api/bootstrap'),","    commands: require('./api/commands'),","    config: require('./api/config'),","    dht: require('./api/dht'),","    diag: require('./api/diag'),","    id: require('./api/id'),","    get: require('./api/get'),","    log: require('./api/log'),","    ls: require('./api/ls'),","    mount: require('./api/mount'),","    name: require('./api/name'),","    object: require('./api/object'),","    pin: require('./api/pin'),","    ping: require('./api/ping'),","    refs: require('./api/refs'),","    repo: require('./api/repo'),","    swarm: require('./api/swarm'),","    update: require('./api/update'),","    version: require('./api/version')","  }","","  // TODO: crowding the 'files' namespace temporarily for interface-ipfs-core","  // compatibility, until 'files vs mfs' naming decision is resolved.","  cmds.files = function (send) {","    const files = require('./api/files')(send)","    files.add = require('./api/add')(send)","    files.createAddStream = require('./api/create-add-stream.js')(send)","    files.get = require('./api/get')(send)","    files.cat = require('./api/cat')(send)","","    return files","  }","","  cmds.util = function (send) {","    const util = {","      addFromFs: require('./api/util/fs-add')(send),","      addFromStream: require('./api/add')(send),","      addFromURL: require('./api/util/url-add')(send)","    }","    return util","  }","","  return cmds","}","","function loadCommands (send) {","  const files = requireCommands()","  const cmds = {}","","  Object.keys(files).forEach((file) => {","    cmds[file] = files[file](send)","  })","","  return cmds","}","","module.exports = loadCommands",""],"l":{"3":1,"4":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"41":0,"44":0,"45":0,"50":0,"53":0,"56":1,"57":0,"58":0,"60":0,"61":0,"64":0,"67":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-api/src/default-config.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-api/src/default-config.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"2":{"start":{"line":5,"column":0},"end":{"line":13,"column":1}},"3":{"start":{"line":6,"column":2},"end":{"line":12,"column":3}}},"branchMap":{},"code":["'use strict'","","const pkg = require('../package.json')","","exports = module.exports = () => {","  return {","    'api-path': '/api/v0/',","    'user-agent': `/node-${pkg.name}/${pkg.version}/`,","    host: 'localhost',","    port: '5001',","    protocol: 'http'","  }","}",""],"l":{"3":1,"5":1,"6":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-api/src/request-api.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-api/src/request-api.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"parseError","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":30}}},"2":{"name":"onRes","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":28}}},"3":{"name":"requestAPI","line":62,"loc":{"start":{"line":62,"column":0},"end":{"line":62,"column":48}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":37}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":32}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":28}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":52}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":50}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":59}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":36}},"10":{"start":{"line":15,"column":0},"end":{"line":28,"column":1}},"11":{"start":{"line":16,"column":2},"end":{"line":16,"column":68}},"12":{"start":{"line":17,"column":2},"end":{"line":27,"column":4}},"13":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"14":{"start":{"line":19,"column":6},"end":{"line":19,"column":20}},"15":{"start":{"line":22,"column":4},"end":{"line":25,"column":5}},"16":{"start":{"line":23,"column":6},"end":{"line":23,"column":31}},"17":{"start":{"line":24,"column":6},"end":{"line":24,"column":59}},"18":{"start":{"line":26,"column":4},"end":{"line":26,"column":13}},"19":{"start":{"line":30,"column":0},"end":{"line":60,"column":1}},"20":{"start":{"line":31,"column":2},"end":{"line":59,"column":3}},"21":{"start":{"line":32,"column":4},"end":{"line":32,"column":58}},"22":{"start":{"line":33,"column":4},"end":{"line":33,"column":67}},"23":{"start":{"line":34,"column":4},"end":{"line":35,"column":80}},"24":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"25":{"start":{"line":38,"column":6},"end":{"line":38,"column":32}},"26":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"27":{"start":{"line":43,"column":6},"end":{"line":43,"column":26}},"28":{"start":{"line":47,"column":4},"end":{"line":50,"column":5}},"29":{"start":{"line":48,"column":6},"end":{"line":48,"column":52}},"30":{"start":{"line":49,"column":6},"end":{"line":49,"column":35}},"31":{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},"32":{"start":{"line":54,"column":6},"end":{"line":54,"column":39}},"33":{"start":{"line":58,"column":4},"end":{"line":58,"column":33}},"34":{"start":{"line":62,"column":0},"end":{"line":135,"column":1}},"35":{"start":{"line":63,"column":2},"end":{"line":63,"column":31}},"36":{"start":{"line":64,"column":2},"end":{"line":64,"column":27}},"37":{"start":{"line":66,"column":2},"end":{"line":68,"column":3}},"38":{"start":{"line":67,"column":4},"end":{"line":67,"column":31}},"39":{"start":{"line":70,"column":2},"end":{"line":72,"column":3}},"40":{"start":{"line":71,"column":4},"end":{"line":71,"column":41}},"41":{"start":{"line":73,"column":2},"end":{"line":75,"column":3}},"42":{"start":{"line":74,"column":4},"end":{"line":74,"column":33}},"43":{"start":{"line":76,"column":2},"end":{"line":78,"column":3}},"44":{"start":{"line":77,"column":4},"end":{"line":77,"column":33}},"45":{"start":{"line":79,"column":2},"end":{"line":81,"column":3}},"46":{"start":{"line":80,"column":4},"end":{"line":80,"column":35}},"47":{"start":{"line":83,"column":2},"end":{"line":87,"column":3}},"48":{"start":{"line":84,"column":4},"end":{"line":84,"column":39}},"49":{"start":{"line":86,"column":4},"end":{"line":86,"column":23}},"50":{"start":{"line":89,"column":2},"end":{"line":89,"column":38}},"51":{"start":{"line":91,"column":2},"end":{"line":91,"column":12}},"52":{"start":{"line":92,"column":2},"end":{"line":94,"column":3}},"53":{"start":{"line":93,"column":4},"end":{"line":93,"column":54}},"54":{"start":{"line":97,"column":2},"end":{"line":97,"column":34}},"55":{"start":{"line":99,"column":2},"end":{"line":99,"column":23}},"56":{"start":{"line":100,"column":2},"end":{"line":100,"column":20}},"57":{"start":{"line":102,"column":2},"end":{"line":105,"column":3}},"58":{"start":{"line":104,"column":4},"end":{"line":104,"column":48}},"59":{"start":{"line":107,"column":2},"end":{"line":113,"column":3}},"60":{"start":{"line":108,"column":4},"end":{"line":110,"column":5}},"61":{"start":{"line":109,"column":6},"end":{"line":109,"column":67}},"62":{"start":{"line":112,"column":4},"end":{"line":112,"column":80}},"63":{"start":{"line":115,"column":2},"end":{"line":115,"column":62}},"64":{"start":{"line":116,"column":2},"end":{"line":122,"column":37}},"65":{"start":{"line":124,"column":2},"end":{"line":126,"column":4}},"66":{"start":{"line":125,"column":4},"end":{"line":125,"column":17}},"67":{"start":{"line":128,"column":2},"end":{"line":132,"column":3}},"68":{"start":{"line":129,"column":4},"end":{"line":129,"column":20}},"69":{"start":{"line":131,"column":4},"end":{"line":131,"column":13}},"70":{"start":{"line":134,"column":2},"end":{"line":134,"column":12}},"71":{"start":{"line":140,"column":0},"end":{"line":172,"column":1}},"72":{"start":{"line":150,"column":2},"end":{"line":156,"column":3}},"73":{"start":{"line":151,"column":4},"end":{"line":153,"column":5}},"74":{"start":{"line":152,"column":6},"end":{"line":152,"column":58}},"75":{"start":{"line":155,"column":4},"end":{"line":155,"column":48}},"76":{"start":{"line":162,"column":2},"end":{"line":169,"column":3}},"77":{"start":{"line":163,"column":4},"end":{"line":168,"column":6}},"78":{"start":{"line":164,"column":6},"end":{"line":166,"column":7}},"79":{"start":{"line":165,"column":8},"end":{"line":165,"column":28}},"80":{"start":{"line":167,"column":6},"end":{"line":167,"column":30}},"81":{"start":{"line":171,"column":2},"end":{"line":171,"column":13}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":18,"column":4}},{"start":{"line":18,"column":4},"end":{"line":18,"column":4}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":22,"column":4}},{"start":{"line":22,"column":4},"end":{"line":22,"column":4}}]},"3":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":22},"end":{"line":24,"column":37}},{"start":{"line":24,"column":41},"end":{"line":24,"column":59}}]},"4":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":19},"end":{"line":34,"column":46}},{"start":{"line":35,"column":19},"end":{"line":35,"column":80}}]},"5":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"6":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":8},"end":{"line":37,"column":29}},{"start":{"line":37,"column":33},"end":{"line":37,"column":48}}]},"7":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]},"8":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":8},"end":{"line":42,"column":14}},{"start":{"line":42,"column":18},"end":{"line":42,"column":25}}]},"9":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":4}},{"start":{"line":47,"column":4},"end":{"line":47,"column":4}}]},"10":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":8},"end":{"line":47,"column":22}},{"start":{"line":47,"column":26},"end":{"line":47,"column":32}}]},"11":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]},"12":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":15},"end":{"line":63,"column":25}},{"start":{"line":63,"column":29},"end":{"line":63,"column":31}}]},"13":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":2},"end":{"line":66,"column":2}},{"start":{"line":66,"column":2},"end":{"line":66,"column":2}}]},"14":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":2},"end":{"line":70,"column":2}},{"start":{"line":70,"column":2},"end":{"line":70,"column":2}}]},"15":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":2},"end":{"line":73,"column":2}},{"start":{"line":73,"column":2},"end":{"line":73,"column":2}}]},"16":{"line":73,"type":"binary-expr","locations":[{"start":{"line":73,"column":6},"end":{"line":73,"column":18}},{"start":{"line":73,"column":22},"end":{"line":73,"column":50}}]},"17":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":2},"end":{"line":76,"column":2}},{"start":{"line":76,"column":2},"end":{"line":76,"column":2}}]},"18":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":2},"end":{"line":79,"column":2}},{"start":{"line":79,"column":2},"end":{"line":79,"column":2}}]},"19":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":6},"end":{"line":79,"column":19}},{"start":{"line":79,"column":23},"end":{"line":79,"column":52}}]},"20":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":2},"end":{"line":83,"column":2}},{"start":{"line":83,"column":2},"end":{"line":83,"column":2}}]},"21":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":2},"end":{"line":92,"column":2}},{"start":{"line":92,"column":2},"end":{"line":92,"column":2}}]},"22":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":2},"end":{"line":102,"column":2}},{"start":{"line":102,"column":2},"end":{"line":102,"column":2}}]},"23":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":2},"end":{"line":107,"column":2}},{"start":{"line":107,"column":2},"end":{"line":107,"column":2}}]},"24":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":4},"end":{"line":108,"column":4}},{"start":{"line":108,"column":4},"end":{"line":108,"column":4}}]},"25":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":2},"end":{"line":128,"column":2}},{"start":{"line":128,"column":2},"end":{"line":128,"column":2}}]},"26":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":4},"end":{"line":151,"column":4}},{"start":{"line":151,"column":4},"end":{"line":151,"column":4}}]},"27":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":6},"end":{"line":164,"column":6}},{"start":{"line":164,"column":6},"end":{"line":164,"column":6}}]}},"code":["'use strict'","","const Qs = require('qs')","const isNode = require('detect-node')","const ndjson = require('ndjson')","const pump = require('pump')","const once = require('once')","const getFilesStream = require('./get-files-stream')","const streamToValue = require('./stream-to-value')","const streamToJsonValue = require('./stream-to-json-value')","const request = require('./request')","","// -- Internal","","function parseError (res, cb) {","  const error = new Error(`Server responded with ${res.statusCode}`)","  streamToJsonValue(res, (err, payload) => {","    if (err) {","      return cb(err)","    }","","    if (payload) {","      error.code = payload.Code","      error.message = payload.Message || payload.toString()","    }","    cb(error)","  })","}","","function onRes (buffer, cb) {","  return (res) => {","    const stream = Boolean(res.headers['x-stream-output'])","    const chunkedObjects = Boolean(res.headers['x-chunked-output'])","    const isJson = res.headers['content-type'] &&","                   res.headers['content-type'].indexOf('application/json') === 0","","    if (res.statusCode >= 400 || !res.statusCode) {","      return parseError(res, cb)","    }","","    // Return the response stream directly","    if (stream && !buffer) {","      return cb(null, res)","    }","","    // Return a stream of JSON objects","    if (chunkedObjects && isJson) {","      const outputStream = pump(res, ndjson.parse())","      return cb(null, outputStream)","    }","","    // Return a JSON object","    if (isJson) {","      return streamToJsonValue(res, cb)","    }","","    // Return a value","    return streamToValue(res, cb)","  }","}","","function requestAPI (config, options, callback) {","  options.qs = options.qs || {}","  callback = once(callback)","","  if (Array.isArray(options.files)) {","    options.qs.recursive = true","  }","","  if (Array.isArray(options.path)) {","    options.path = options.path.join('/')","  }","  if (options.args && !Array.isArray(options.args)) {","    options.args = [options.args]","  }","  if (options.args) {","    options.qs.arg = options.args","  }","  if (options.files && !Array.isArray(options.files)) {","    options.files = [options.files]","  }","","  if (options.qs.r) {","    options.qs.recursive = options.qs.r","    // From IPFS 0.4.0, it throws an error when both r and recursive are passed","    delete options.qs.r","  }","","  options.qs['stream-channels'] = true","","  let stream","  if (options.files) {","    stream = getFilesStream(options.files, options.qs)","  }","","  // this option is only used internally, not passed to daemon","  delete options.qs.followSymlinks","","  const method = 'POST'","  const headers = {}","","  if (isNode) {","    // Browsers do not allow you to modify the user agent","    headers['User-Agent'] = config['user-agent']","  }","","  if (options.files) {","    if (!stream.boundary) {","      return callback(new Error('No boundary in multipart stream'))","    }","","    headers['Content-Type'] = `multipart/form-data; boundary=${stream.boundary}`","  }","","  const qs = Qs.stringify(options.qs, {arrayFormat: 'repeat'})","  const req = request(config.protocol)({","    hostname: config.host,","    path: `${config['api-path']}${options.path}?${qs}`,","    port: config.port,","    method: method,","    headers: headers","  }, onRes(options.buffer, callback))","","  req.on('error', (err) => {","    callback(err)","  })","","  if (options.files) {","    stream.pipe(req)","  } else {","    req.end()","  }","","  return req","}","","//","// -- Module Interface","","exports = module.exports = (config) => {","  /*","   * options: {","   *   path:   // API path (like /add or /config) - type: string","   *   args:   // Arguments to the command - type: object","   *   qs:     // Opts as query string opts to the command --something - type: object","   *   files:  // files to be sent - type: string, buffer or array of strings or buffers","   *   buffer: // buffer the request before sending it - type: bool","   * }","   */","  const send = (options, callback) => {","    if (typeof options !== 'object') {","      return callback(new Error('no options were passed'))","    }","","    return requestAPI(config, options, callback)","  }","","  // Send a HTTP request and pass via a transform function","  // to convert the response data to wanted format before","  // returning it to the callback.","  // Eg. send.andTransform({}, (e) => JSON.parse(e), (err, res) => ...)","  send.andTransform = (options, transform, callback) => {","    return send(options, (err, res) => {","      if (err) {","        return callback(err)","      }","      transform(res, callback)","    })","  }","","  return send","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"15":1,"16":0,"17":0,"18":0,"19":0,"22":0,"23":0,"24":0,"26":0,"30":1,"31":0,"32":0,"33":0,"34":0,"37":0,"38":0,"42":0,"43":0,"47":0,"48":0,"49":0,"53":0,"54":0,"58":0,"62":1,"63":0,"64":0,"66":0,"67":0,"70":0,"71":0,"73":0,"74":0,"76":0,"77":0,"79":0,"80":0,"83":0,"84":0,"86":0,"89":0,"91":0,"92":0,"93":0,"97":0,"99":0,"100":0,"102":0,"104":0,"107":0,"108":0,"109":0,"112":0,"115":0,"116":0,"124":0,"125":0,"128":0,"129":0,"131":0,"134":0,"140":1,"150":0,"151":0,"152":0,"155":0,"162":0,"163":0,"164":0,"165":0,"167":0,"171":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-api/src/get-files-stream.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-api/src/get-files-stream.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"headers","line":8,"loc":{"start":{"line":8,"column":0},"end":{"line":8,"column":24}}},"2":{"name":"strip","line":25,"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":28}}},"3":{"name":"loadPaths","line":33,"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":32}}},"4":{"name":"(anonymous_4)","line":52,"loc":{"start":{"line":52,"column":38},"end":{"line":52,"column":60}}},"5":{"name":"getFilesStream","line":99,"loc":{"start":{"line":99,"column":0},"end":{"line":99,"column":38}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":37}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":45}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":34}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":37}},"5":{"start":{"line":8,"column":0},"end":{"line":23,"column":1}},"6":{"start":{"line":9,"column":2},"end":{"line":9,"column":30}},"7":{"start":{"line":10,"column":2},"end":{"line":12,"column":3}},"8":{"start":{"line":14,"column":2},"end":{"line":20,"column":3}},"9":{"start":{"line":15,"column":4},"end":{"line":15,"column":54}},"10":{"start":{"line":16,"column":9},"end":{"line":20,"column":3}},"11":{"start":{"line":17,"column":4},"end":{"line":17,"column":50}},"12":{"start":{"line":19,"column":4},"end":{"line":19,"column":55}},"13":{"start":{"line":22,"column":2},"end":{"line":22,"column":15}},"14":{"start":{"line":25,"column":0},"end":{"line":31,"column":1}},"15":{"start":{"line":26,"column":2},"end":{"line":29,"column":24}},"16":{"start":{"line":30,"column":2},"end":{"line":30,"column":36}},"17":{"start":{"line":33,"column":0},"end":{"line":97,"column":1}},"18":{"start":{"line":34,"column":2},"end":{"line":34,"column":30}},"19":{"start":{"line":35,"column":2},"end":{"line":35,"column":26}},"20":{"start":{"line":36,"column":2},"end":{"line":36,"column":30}},"21":{"start":{"line":38,"column":2},"end":{"line":38,"column":81}},"22":{"start":{"line":40,"column":2},"end":{"line":40,"column":27}},"23":{"start":{"line":41,"column":2},"end":{"line":41,"column":33}},"24":{"start":{"line":43,"column":2},"end":{"line":45,"column":3}},"25":{"start":{"line":44,"column":4},"end":{"line":44,"column":65}},"26":{"start":{"line":47,"column":2},"end":{"line":91,"column":3}},"27":{"start":{"line":48,"column":4},"end":{"line":48,"column":73}},"28":{"start":{"line":49,"column":4},"end":{"line":55,"column":6}},"29":{"start":{"line":53,"column":8},"end":{"line":53,"column":42}},"30":{"start":{"line":57,"column":4},"end":{"line":90,"column":22}},"31":{"start":{"line":60,"column":8},"end":{"line":67,"column":9}},"32":{"start":{"line":61,"column":10},"end":{"line":66,"column":11}},"33":{"start":{"line":70,"column":8},"end":{"line":77,"column":9}},"34":{"start":{"line":71,"column":10},"end":{"line":76,"column":11}},"35":{"start":{"line":80,"column":8},"end":{"line":86,"column":9}},"36":{"start":{"line":81,"column":10},"end":{"line":85,"column":11}},"37":{"start":{"line":93,"column":2},"end":{"line":96,"column":3}},"38":{"start":{"line":99,"column":0},"end":{"line":138,"column":1}},"39":{"start":{"line":100,"column":2},"end":{"line":102,"column":3}},"40":{"start":{"line":101,"column":4},"end":{"line":101,"column":15}},"41":{"start":{"line":104,"column":2},"end":{"line":104,"column":28}},"42":{"start":{"line":106,"column":2},"end":{"line":135,"column":4}},"43":{"start":{"line":107,"column":4},"end":{"line":113,"column":5}},"44":{"start":{"line":108,"column":6},"end":{"line":110,"column":7}},"45":{"start":{"line":109,"column":8},"end":{"line":109,"column":52}},"46":{"start":{"line":112,"column":6},"end":{"line":112,"column":34}},"47":{"start":{"line":115,"column":4},"end":{"line":118,"column":5}},"48":{"start":{"line":116,"column":6},"end":{"line":116,"column":21}},"49":{"start":{"line":117,"column":6},"end":{"line":117,"column":17}},"50":{"start":{"line":120,"column":4},"end":{"line":122,"column":5}},"51":{"start":{"line":121,"column":6},"end":{"line":121,"column":17}},"52":{"start":{"line":124,"column":4},"end":{"line":129,"column":5}},"53":{"start":{"line":131,"column":4},"end":{"line":134,"column":6}},"54":{"start":{"line":137,"column":2},"end":{"line":137,"column":11}},"55":{"start":{"line":140,"column":0},"end":{"line":140,"column":41}}},"branchMap":{"1":{"line":9,"type":"binary-expr","locations":[{"start":{"line":9,"column":15},"end":{"line":9,"column":24}},{"start":{"line":9,"column":28},"end":{"line":9,"column":30}}]},"2":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":2},"end":{"line":14,"column":2}},{"start":{"line":14,"column":2},"end":{"line":14,"column":2}}]},"3":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":6},"end":{"line":14,"column":14}},{"start":{"line":14,"column":18},"end":{"line":14,"column":31}}]},"4":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":9},"end":{"line":16,"column":9}},{"start":{"line":16,"column":9},"end":{"line":16,"column":9}}]},"5":{"line":38,"type":"cond-expr","locations":[{"start":{"line":38,"column":55},"end":{"line":38,"column":74}},{"start":{"line":38,"column":77},"end":{"line":38,"column":81}}]},"6":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]},"7":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":6},"end":{"line":43,"column":25}},{"start":{"line":43,"column":29},"end":{"line":43,"column":44}}]},"8":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":2},"end":{"line":47,"column":2}},{"start":{"line":47,"column":2},"end":{"line":47,"column":2}}]},"9":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":6},"end":{"line":47,"column":25}},{"start":{"line":47,"column":29},"end":{"line":47,"column":43}}]},"10":{"line":48,"type":"cond-expr","locations":[{"start":{"line":48,"column":64},"end":{"line":48,"column":66}},{"start":{"line":48,"column":69},"end":{"line":48,"column":72}}]},"11":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":15},"end":{"line":52,"column":26}},{"start":{"line":52,"column":30},"end":{"line":52,"column":32}}]},"12":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":60,"column":8}},{"start":{"line":60,"column":8},"end":{"line":60,"column":8}}]},"13":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":8},"end":{"line":70,"column":8}},{"start":{"line":70,"column":8},"end":{"line":70,"column":8}}]},"14":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":8},"end":{"line":80,"column":8}},{"start":{"line":80,"column":8},"end":{"line":80,"column":8}}]},"15":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":12},"end":{"line":80,"column":36}},{"start":{"line":80,"column":40},"end":{"line":80,"column":71}}]},"16":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":2},"end":{"line":100,"column":2}},{"start":{"line":100,"column":2},"end":{"line":100,"column":2}}]},"17":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":4},"end":{"line":107,"column":4}},{"start":{"line":107,"column":4},"end":{"line":107,"column":4}}]},"18":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":6},"end":{"line":108,"column":6}},{"start":{"line":108,"column":6},"end":{"line":108,"column":6}}]},"19":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":4},"end":{"line":115,"column":4}},{"start":{"line":115,"column":4},"end":{"line":115,"column":4}}]},"20":{"line":115,"type":"binary-expr","locations":[{"start":{"line":115,"column":8},"end":{"line":115,"column":17}},{"start":{"line":115,"column":21},"end":{"line":115,"column":34}}]},"21":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":4},"end":{"line":120,"column":4}},{"start":{"line":120,"column":4},"end":{"line":120,"column":4}}]},"22":{"line":120,"type":"binary-expr","locations":[{"start":{"line":120,"column":8},"end":{"line":120,"column":17}},{"start":{"line":120,"column":22},"end":{"line":120,"column":34}},{"start":{"line":120,"column":38},"end":{"line":120,"column":46}}]}},"code":["'use strict'","","const isNode = require('detect-node')","const Multipart = require('multipart-stream')","const flatmap = require('flatmap')","const escape = require('glob-escape')","","function headers (file) {","  const name = file.path || ''","  const header = {","    'Content-Disposition': `file; filename=\"${name}\"`","  }","","  if (file.dir || !file.content) {","    header['Content-Type'] = 'application/x-directory'","  } else if (file.symlink) {","    header['Content-Type'] = 'application/symlink'","  } else {","    header['Content-Type'] = 'application/octet-stream'","  }","","  return header","}","","function strip (name, base) {","  const smallBase = base","        .split('/')","        .slice(0, -1)","        .join('/') + '/'","  return name.replace(smallBase, '')","}","","function loadPaths (opts, file) {","  const path = require('path')","  const fs = require('fs')","  const glob = require('glob')","","  const followSymlinks = opts.followSymlinks != null ? opts.followSymlinks : true","","  file = path.resolve(file)","  const stats = fs.statSync(file)","","  if (stats.isDirectory() && !opts.recursive) {","    throw new Error('Can only add directories using --recursive')","  }","","  if (stats.isDirectory() && opts.recursive) {","    const globEscapedDir = escape(file) + (file.endsWith('/') ? '' : '/')","    const mg = new glob.sync.GlobSync(`${globEscapedDir}` + '**/*', {","      follow: followSymlinks,","      dot: opts.hidden,","      ignore: (opts.ignore || []).map(function (ignoreGlob) {","        return globEscapedDir + ignoreGlob","      })","    })","","    return mg.found","      .map((name) => {","        // symlinks","        if (mg.symlinks[name] === true) {","          return {","            path: strip(name, file),","            symlink: true,","            dir: false,","            content: fs.readlinkSync(name)","          }","        }","","        // files","        if (mg.cache[name] === 'FILE') {","          return {","            path: strip(name, file),","            symlink: false,","            dir: false,","            content: fs.createReadStream(name)","          }","        }","","        // directories","        if (mg.cache[name] === 'DIR' || mg.cache[name] instanceof Array) {","          return {","            path: strip(name, file),","            symlink: false,","            dir: true","          }","        }","        // files inside symlinks and others","      })","      // filter out null files","      .filter(Boolean)","  }","","  return {","    path: path.basename(file),","    content: fs.createReadStream(file)","  }","}","","function getFilesStream (files, opts) {","  if (!files) {","    return null","  }","","  const mp = new Multipart()","","  flatmap(files, (file) => {","    if (typeof file === 'string') {","      if (!isNode) {","        throw new Error('Can not add paths in node')","      }","","      return loadPaths(opts, file)","    }","","    if (file.path && !file.content) {","      file.dir = true","      return file","    }","","    if (file.path && (file.content || file.dir)) {","      return file","    }","","    return {","      path: '',","      symlink: false,","      dir: false,","      content: file","    }","  }).forEach((file) => {","    mp.addPart({","      headers: headers(file),","      body: file.content","    })","  })","","  return mp","}","","exports = module.exports = getFilesStream",""],"l":{"3":1,"4":1,"5":1,"6":1,"8":1,"9":0,"10":0,"14":0,"15":0,"16":0,"17":0,"19":0,"22":0,"25":1,"26":0,"30":0,"33":1,"34":0,"35":0,"36":0,"38":0,"40":0,"41":0,"43":0,"44":0,"47":0,"48":0,"49":0,"53":0,"57":0,"60":0,"61":0,"70":0,"71":0,"80":0,"81":0,"93":0,"99":1,"100":0,"101":0,"104":0,"106":0,"107":0,"108":0,"109":0,"112":0,"115":0,"116":0,"117":0,"120":0,"121":0,"124":0,"131":0,"137":0,"140":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-api/src/stream-to-value.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-api/src/stream-to-value.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"streamToValue","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":39}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":39}},"3":{"start":{"line":9,"column":0},"end":{"line":14,"column":1}},"4":{"start":{"line":10,"column":2},"end":{"line":10,"column":45}},"5":{"start":{"line":10,"column":25},"end":{"line":10,"column":45}},"6":{"start":{"line":11,"column":2},"end":{"line":13,"column":4}},"7":{"start":{"line":12,"column":4},"end":{"line":12,"column":26}},"8":{"start":{"line":12,"column":13},"end":{"line":12,"column":26}},"9":{"start":{"line":16,"column":0},"end":{"line":16,"column":30}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":12,"column":4}},{"start":{"line":12,"column":4},"end":{"line":12,"column":4}}]}},"code":["'use strict'","","const pump = require('pump')","const concat = require('concat-stream')","","/*","  Concatenate a stream to a single value.","*/","function streamToValue (res, callback) {","  const done = (data) => callback(null, data)","  pump(res, concat(done), (err) => {","    if (err) callback(err)","  })","}","","module.exports = streamToValue",""],"l":{"3":1,"4":1,"9":1,"10":0,"11":0,"12":0,"16":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-api/src/stream-to-json-value.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-api/src/stream-to-json-value.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"streamToJsonValue","line":8,"loc":{"start":{"line":8,"column":0},"end":{"line":8,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":50}},"2":{"start":{"line":8,"column":0},"end":{"line":32,"column":1}},"3":{"start":{"line":9,"column":2},"end":{"line":31,"column":4}},"4":{"start":{"line":10,"column":4},"end":{"line":12,"column":5}},"5":{"start":{"line":11,"column":6},"end":{"line":11,"column":20}},"6":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"7":{"start":{"line":15,"column":6},"end":{"line":15,"column":17}},"8":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"9":{"start":{"line":20,"column":6},"end":{"line":20,"column":28}},"10":{"start":{"line":23,"column":4},"end":{"line":23,"column":11}},"11":{"start":{"line":24,"column":4},"end":{"line":28,"column":5}},"12":{"start":{"line":25,"column":6},"end":{"line":25,"column":28}},"13":{"start":{"line":27,"column":6},"end":{"line":27,"column":20}},"14":{"start":{"line":30,"column":4},"end":{"line":30,"column":17}},"15":{"start":{"line":34,"column":0},"end":{"line":34,"column":34}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":4}},{"start":{"line":10,"column":4},"end":{"line":10,"column":4}}]},"2":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":14,"column":4}},{"start":{"line":14,"column":4},"end":{"line":14,"column":4}}]},"3":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":8},"end":{"line":14,"column":13}},{"start":{"line":14,"column":17},"end":{"line":14,"column":34}}]},"4":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":4}},{"start":{"line":19,"column":4},"end":{"line":19,"column":4}}]}},"code":["'use strict'","","const streamToValue = require('./stream-to-value')","","/*","  Converts a stream to a single JSON value","*/","function streamToJsonValue (res, cb) {","  streamToValue(res, (err, data) => {","    if (err) {","      return cb(err)","    }","","    if (!data || data.length === 0) {","      return cb()","    }","","    // TODO: check if needed, afaik JSON.parse can parse Buffers","    if (Buffer.isBuffer(data)) {","      data = data.toString()","    }","","    let res","    try {","      res = JSON.parse(data)","    } catch (err) {","      return cb(err)","    }","","    cb(null, res)","  })","}","","module.exports = streamToJsonValue",""],"l":{"3":1,"8":1,"9":0,"10":0,"11":0,"14":0,"15":0,"19":0,"20":0,"23":0,"24":0,"25":0,"27":0,"30":0,"34":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-api/src/request.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs-api/src/request.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0},"b":{"1":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":43}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":45}},"3":{"start":{"line":6,"column":0},"end":{"line":12,"column":1}},"4":{"start":{"line":7,"column":2},"end":{"line":9,"column":3}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":23}},"6":{"start":{"line":11,"column":2},"end":{"line":11,"column":20}}},"branchMap":{"1":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":2},"end":{"line":7,"column":2}},{"start":{"line":7,"column":2},"end":{"line":7,"column":2}}]}},"code":["'use strict'","","const httpRequest = require('http').request","const httpsRequest = require('https').request","","module.exports = (protocol) => {","  if (protocol.indexOf('https') === 0) {","    return httpsRequest","  }","","  return httpRequest","}",""],"l":{"3":1,"4":1,"6":1,"7":0,"8":0,"11":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/default-repo-browser.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/default-repo-browser.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{"1":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":37}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":1}},"3":{"start":{"line":6,"column":2},"end":{"line":6,"column":32}},"4":{"start":{"line":7,"column":2},"end":{"line":7,"column":31}}},"branchMap":{"1":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":19},"end":{"line":6,"column":22}},{"start":{"line":6,"column":26},"end":{"line":6,"column":32}}]}},"code":["'use strict'","","const IPFSRepo = require('ipfs-repo')","","module.exports = (dir) => {","  const repoPath = dir || 'ipfs'","  return new IPFSRepo(repoPath)","}",""],"l":{"3":1,"5":1,"6":0,"7":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/state.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/core/state.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":33}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":39}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":32}},"5":{"start":{"line":9,"column":0},"end":{"line":65,"column":1}},"6":{"start":{"line":10,"column":2},"end":{"line":30,"column":4}},"7":{"start":{"line":33,"column":2},"end":{"line":33,"column":40}},"8":{"start":{"line":33,"column":25},"end":{"line":33,"column":39}},"9":{"start":{"line":34,"column":2},"end":{"line":34,"column":43}},"10":{"start":{"line":34,"column":21},"end":{"line":34,"column":42}},"11":{"start":{"line":38,"column":2},"end":{"line":40,"column":3}},"12":{"start":{"line":39,"column":4},"end":{"line":39,"column":13}},"13":{"start":{"line":42,"column":2},"end":{"line":44,"column":3}},"14":{"start":{"line":43,"column":4},"end":{"line":43,"column":20}},"15":{"start":{"line":46,"column":2},"end":{"line":48,"column":3}},"16":{"start":{"line":47,"column":4},"end":{"line":47,"column":13}},"17":{"start":{"line":50,"column":2},"end":{"line":52,"column":3}},"18":{"start":{"line":51,"column":4},"end":{"line":51,"column":16}},"19":{"start":{"line":54,"column":2},"end":{"line":56,"column":3}},"20":{"start":{"line":55,"column":4},"end":{"line":55,"column":14}},"21":{"start":{"line":58,"column":2},"end":{"line":60,"column":3}},"22":{"start":{"line":59,"column":4},"end":{"line":59,"column":16}},"23":{"start":{"line":62,"column":2},"end":{"line":62,"column":26}},"24":{"start":{"line":62,"column":18},"end":{"line":62,"column":26}},"25":{"start":{"line":64,"column":2},"end":{"line":64,"column":10}}},"branchMap":{},"code":["'use strict'","","const debug = require('debug')","const log = debug('jsipfs:state')","log.error = debug('jsipfs:state:error')","","const fsm = require('fsm-event')","","module.exports = (self) => {","  const s = fsm('uninitalized', {","    uninitalized: {","      init: 'initializing',","      initialized: 'stopped'","    },","    initializing: {","      initialized: 'stopped'","    },","    stopped: {","      start: 'starting'","    },","    starting: {","      started: 'running'","    },","    running: {","      stop: 'stopping'","    },","    stopping: {","      stopped: 'stopped'","    }","  })","","  // log events","  s.on('error', (err) => log.error(err))","  s.on('done', () => log('-> ' + s._state))","","  // -- Actions","","  s.init = () => {","    s('init')","  }","","  s.initialized = () => {","    s('initialized')","  }","","  s.stop = () => {","    s('stop')","  }","","  s.stopped = () => {","    s('stopped')","  }","","  s.start = () => {","    s('start')","  }","","  s.started = () => {","    s('started')","  }","","  s.state = () => s._state","","  return s","}",""],"l":{"3":1,"4":1,"5":1,"7":1,"9":1,"10":0,"33":0,"34":0,"38":0,"39":0,"42":0,"43":0,"46":0,"47":0,"50":0,"51":0,"54":0,"55":0,"58":0,"59":0,"62":0,"64":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/http-api/error-handler.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/http-api/error-handler.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"handleError","line":48,"loc":{"start":{"line":48,"column":0},"end":{"line":48,"column":43}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":5,"column":0},"end":{"line":46,"column":1}},"3":{"start":{"line":6,"column":2},"end":{"line":9,"column":4}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":37}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":20}},"6":{"start":{"line":11,"column":2},"end":{"line":45,"column":4}},"7":{"start":{"line":12,"column":4},"end":{"line":12,"column":32}},"8":{"start":{"line":13,"column":4},"end":{"line":13,"column":31}},"9":{"start":{"line":15,"column":4},"end":{"line":15,"column":24}},"10":{"start":{"line":16,"column":4},"end":{"line":16,"column":71}},"11":{"start":{"line":18,"column":4},"end":{"line":42,"column":5}},"12":{"start":{"line":19,"column":6},"end":{"line":19,"column":48}},"13":{"start":{"line":21,"column":6},"end":{"line":23,"column":7}},"14":{"start":{"line":22,"column":8},"end":{"line":22,"column":57}},"15":{"start":{"line":25,"column":6},"end":{"line":32,"column":7}},"16":{"start":{"line":34,"column":6},"end":{"line":34,"column":30}},"17":{"start":{"line":35,"column":6},"end":{"line":35,"column":32}},"18":{"start":{"line":37,"column":6},"end":{"line":40,"column":25}},"19":{"start":{"line":41,"column":6},"end":{"line":41,"column":12}},"20":{"start":{"line":44,"column":4},"end":{"line":44,"column":20}},"21":{"start":{"line":48,"column":0},"end":{"line":54,"column":1}},"22":{"start":{"line":49,"column":2},"end":{"line":51,"column":3}},"23":{"start":{"line":50,"column":4},"end":{"line":50,"column":44}},"24":{"start":{"line":53,"column":2},"end":{"line":53,"column":35}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":18,"column":4}},{"start":{"line":18,"column":4},"end":{"line":18,"column":4}}]},"2":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":6},"end":{"line":21,"column":6}},{"start":{"line":21,"column":6},"end":{"line":21,"column":6}}]},"3":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":10},"end":{"line":21,"column":21}},{"start":{"line":21,"column":25},"end":{"line":21,"column":45}}]},"4":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":2},"end":{"line":49,"column":2}},{"start":{"line":49,"column":2},"end":{"line":49,"column":2}}]}},"code":["'use strict'","","const Hoek = require('hoek')","","module.exports = (api, server) => {","  server.ext('onRequest', (request, reply) => {","    request.handleError = handleError","    reply.continue()","  })","","  server.ext('onPreResponse', (request, reply) => {","    const res = request.response","    const req = request.raw.req","","    let statusCode = 200","    let msg = 'Sorry, something went wrong, please retrace your steps.'","","    if (res.isBoom) {","      statusCode = res.output.payload.statusCode","","      if (res.message && res.isDeveloperError) {","        msg = res.message.replace('Uncaught error: ', '')","      }","","      const debug = {","        method: req.method,","        url: request.url.path,","        headers: request.raw.req.headers,","        info: request.info,","        payload: request.payload,","        response: res.output.payload","      }","","      api.log.error(res.stack)","      server.log('error', debug)","","      reply({","        Message: msg,","        Code: 1","      }).code(statusCode)","      return","    }","","    reply.continue()","  })","}","","function handleError (error, errorMessage) {","  if (errorMessage) {","    return Hoek.assert(!error, errorMessage)","  }","","  return Hoek.assert(!error, error)","}",""],"l":{"3":1,"5":1,"6":0,"7":0,"8":0,"11":0,"12":0,"13":0,"15":0,"16":0,"18":0,"19":0,"21":0,"22":0,"25":0,"34":0,"35":0,"37":0,"41":0,"44":0,"48":1,"49":0,"50":0,"53":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/bitswap.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/bitswap.js","s":{"1":1,"2":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":10},"end":{"line":8,"column":18}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":10},"end":{"line":13,"column":17}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":15,"column":1}},"2":{"start":{"line":9,"column":4},"end":{"line":10,"column":28}}},"branchMap":{},"code":["'use strict'","","module.exports = {","  command: 'bitswap',","","  description: 'A set of commands to manipulate the bitswap agent.',","","  builder (yargs) {","    return yargs","      .commandDir('bitswap')","  },","","  handler (argv) {","  }","}",""],"l":{"3":1,"9":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/block.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/block.js","s":{"1":1,"2":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":10},"end":{"line":8,"column":18}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":10},"end":{"line":13,"column":17}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":15,"column":1}},"2":{"start":{"line":9,"column":4},"end":{"line":10,"column":26}}},"branchMap":{},"code":["'use strict'","","module.exports = {","  command: 'block',","","  description: 'Manipulate raw IPFS blocks.',","","  builder (yargs) {","    return yargs","      .commandDir('block')","  },","","  handler (argv) {","  }","}",""],"l":{"3":1,"9":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/bootstrap.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/bootstrap.js","s":{"1":1,"2":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":10},"end":{"line":8,"column":18}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":10},"end":{"line":13,"column":17}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":15,"column":1}},"2":{"start":{"line":9,"column":4},"end":{"line":10,"column":30}}},"branchMap":{},"code":["'use strict'","","module.exports = {","  command: 'bootstrap',","","  description: 'Show or edit the list of bootstrap peers.',","","  builder (yargs) {","    return yargs","      .commandDir('bootstrap')","  },","","  handler (argv) {","  }","}",""],"l":{"3":1,"9":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/commands.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/commands.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":10},"end":{"line":11,"column":13}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":33}},"3":{"start":{"line":6,"column":0},"end":{"line":28,"column":1}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":50}},"5":{"start":{"line":15,"column":4},"end":{"line":15,"column":69}},"6":{"start":{"line":16,"column":4},"end":{"line":24,"column":41}},"7":{"start":{"line":17,"column":6},"end":{"line":23,"column":27}},"8":{"start":{"line":18,"column":31},"end":{"line":18,"column":47}},"9":{"start":{"line":24,"column":27},"end":{"line":24,"column":40}},"10":{"start":{"line":26,"column":4},"end":{"line":26,"column":49}}},"branchMap":{},"code":["'use strict'","","const path = require('path')","const glob = require('glob').sync","","module.exports = {","  command: 'commands',","","  describe: 'List all available commands',","","  handler () {","    const basePath = path.resolve(__dirname, '..')","","    // modeled after https://github.com/vdemedes/ronin/blob/master/lib/program.js#L78","    const files = glob(path.join(basePath, 'commands', '**', '*.js'))","    const cmds = files.map((p) => {","      return p.replace(/\\//g, path.sep)","        .replace(/^./, ($1) => $1.toUpperCase())","        .replace(path.join(basePath, 'commands'), '')","        .replace(path.sep, '')","        .split(path.sep)","        .join(' ')","        .replace('.js', '')","    }).sort().map((cmd) => `ipfs ${cmd}`)","","    console.log(['ipfs'].concat(cmds).join('\\n'))","  }","}",""],"l":{"3":1,"4":1,"6":1,"12":0,"15":0,"16":0,"17":0,"18":0,"24":0,"26":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/config.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/config.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":10},"end":{"line":8,"column":18}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":10},"end":{"line":25,"column":17}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":69,"column":1}},"2":{"start":{"line":9,"column":4},"end":{"line":22,"column":8}},"3":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"4":{"start":{"line":27,"column":6},"end":{"line":27,"column":12}},"5":{"start":{"line":29,"column":4},"end":{"line":29,"column":24}},"6":{"start":{"line":31,"column":4},"end":{"line":31,"column":26}},"7":{"start":{"line":32,"column":4},"end":{"line":32,"column":26}},"8":{"start":{"line":33,"column":4},"end":{"line":33,"column":24}},"9":{"start":{"line":34,"column":4},"end":{"line":34,"column":26}},"10":{"start":{"line":36,"column":4},"end":{"line":67,"column":5}},"11":{"start":{"line":38,"column":6},"end":{"line":48,"column":8}},"12":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"13":{"start":{"line":40,"column":10},"end":{"line":40,"column":54}},"14":{"start":{"line":43,"column":8},"end":{"line":47,"column":9}},"15":{"start":{"line":44,"column":10},"end":{"line":44,"column":53}},"16":{"start":{"line":46,"column":10},"end":{"line":46,"column":28}},"17":{"start":{"line":52,"column":6},"end":{"line":60,"column":7}},"18":{"start":{"line":53,"column":8},"end":{"line":53,"column":34}},"19":{"start":{"line":54,"column":13},"end":{"line":60,"column":7}},"20":{"start":{"line":55,"column":8},"end":{"line":59,"column":9}},"21":{"start":{"line":56,"column":10},"end":{"line":56,"column":35}},"22":{"start":{"line":58,"column":10},"end":{"line":58,"column":50}},"23":{"start":{"line":62,"column":6},"end":{"line":66,"column":8}},"24":{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},"25":{"start":{"line":64,"column":10},"end":{"line":64,"column":54}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]},"2":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":36,"column":4}},{"start":{"line":36,"column":4},"end":{"line":36,"column":4}}]},"3":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":39,"column":8}},{"start":{"line":39,"column":8},"end":{"line":39,"column":8}}]},"4":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":43,"column":8}},{"start":{"line":43,"column":8},"end":{"line":43,"column":8}}]},"5":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":6},"end":{"line":52,"column":6}},{"start":{"line":52,"column":6},"end":{"line":52,"column":6}}]},"6":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":13},"end":{"line":54,"column":13}},{"start":{"line":54,"column":13},"end":{"line":54,"column":13}}]},"7":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":8},"end":{"line":63,"column":8}},{"start":{"line":63,"column":8},"end":{"line":63,"column":8}}]}},"code":["'use strict'","","module.exports = {","  command: 'config <key> [value]',","","  description: 'Get and set IPFS config values',","","  builder (yargs) {","    return yargs","      .commandDir('config')","      .options({","        bool: {","          type: 'boolean',","          default: false,","          global: false","        },","        json: {","          type: 'boolean',","          default: false,","          global: false","        }","      })","  },","","  handler (argv) {","    if (argv._handled) {","      return","    }","    argv._handled = true","","    const bool = argv.bool","    const json = argv.json","    const key = argv.key","    let value = argv.value","","    if (!value) {","      // Get the value of a given key","      argv.ipfs.config.get(key, (err, value) => {","        if (err) {","          throw new Error('failed to read the config')","        }","","        if (typeof value === 'object') {","          console.log(JSON.stringify(value, null, 2))","        } else {","          console.log(value)","        }","      })","    } else {","      // Set the new value of a given key","","      if (bool) {","        value = (value === 'true')","      } else if (json) {","        try {","          value = JSON.parse(value)","        } catch (err) {","          throw new Error('invalid JSON provided')","        }","      }","","      argv.ipfs.config.set(key, value, (err) => {","        if (err) {","          throw new Error('failed to read the config')","        }","      })","    }","  }","}",""],"l":{"3":1,"9":0,"26":0,"27":0,"29":0,"31":0,"32":0,"33":0,"34":0,"36":0,"38":0,"39":0,"40":0,"43":0,"44":0,"46":0,"52":0,"53":0,"54":0,"55":0,"56":0,"58":0,"62":0,"63":0,"64":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/daemon.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/daemon.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":10},"end":{"line":13,"column":13}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":41}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":33}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":11}},"4":{"start":{"line":8,"column":0},"end":{"line":41,"column":1}},"5":{"start":{"line":14,"column":4},"end":{"line":14,"column":41}},"6":{"start":{"line":16,"column":4},"end":{"line":16,"column":40}},"7":{"start":{"line":17,"column":4},"end":{"line":17,"column":35}},"8":{"start":{"line":19,"column":4},"end":{"line":29,"column":6}},"9":{"start":{"line":20,"column":6},"end":{"line":24,"column":7}},"10":{"start":{"line":21,"column":8},"end":{"line":21,"column":63}},"11":{"start":{"line":22,"column":8},"end":{"line":22,"column":46}},"12":{"start":{"line":23,"column":8},"end":{"line":23,"column":23}},"13":{"start":{"line":25,"column":6},"end":{"line":27,"column":7}},"14":{"start":{"line":26,"column":8},"end":{"line":26,"column":17}},"15":{"start":{"line":28,"column":6},"end":{"line":28,"column":36}},"16":{"start":{"line":31,"column":4},"end":{"line":39,"column":6}},"17":{"start":{"line":32,"column":6},"end":{"line":32,"column":63}},"18":{"start":{"line":33,"column":6},"end":{"line":38,"column":8}},"19":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"20":{"start":{"line":35,"column":10},"end":{"line":35,"column":19}},"21":{"start":{"line":37,"column":8},"end":{"line":37,"column":23}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":6},"end":{"line":20,"column":6}},{"start":{"line":20,"column":6},"end":{"line":20,"column":6}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":10},"end":{"line":20,"column":13}},{"start":{"line":20,"column":17},"end":{"line":20,"column":38}}]},"3":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":6},"end":{"line":25,"column":6}},{"start":{"line":25,"column":6},"end":{"line":25,"column":6}}]},"4":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":34,"column":8}},{"start":{"line":34,"column":8},"end":{"line":34,"column":8}}]}},"code":["'use strict'","","const HttpAPI = require('../../http-api')","const utils = require('../utils')","","let httpAPI","","module.exports = {","  command: 'daemon',","","  describe: 'Start a long-running daemon process',","","  handler () {","    console.log('Initializing daemon...')","","    const repoPath = utils.getRepoPath()","    httpAPI = new HttpAPI(repoPath)","","    httpAPI.start((err) => {","      if (err && err.code === 'ENOENT') {","        console.log('Error: no ipfs repo found in ' + repoPath)","        console.log('please run: jsipfs init')","        process.exit(1)","      }","      if (err) {","        throw err","      }","      console.log('Daemon is ready')","    })","","    process.on('SIGINT', () => {","      console.log('Received interrupt signal, shutting down..')","      httpAPI.stop((err) => {","        if (err) {","          throw err","        }","        process.exit(0)","      })","    })","  }","}",""],"l":{"3":1,"4":1,"6":1,"8":1,"14":0,"16":0,"17":0,"19":0,"20":0,"21":0,"22":0,"23":0,"25":0,"26":0,"28":0,"31":0,"32":0,"33":0,"34":0,"35":0,"37":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/http-api/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/http-api/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"uriToMultiaddr","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":30}}},"2":{"name":"HttpApi","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":28}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":30}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":38}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":28}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":31}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":47}},"9":{"start":{"line":13,"column":0},"end":{"line":16,"column":1}},"10":{"start":{"line":14,"column":2},"end":{"line":14,"column":45}},"11":{"start":{"line":15,"column":2},"end":{"line":15,"column":45}},"12":{"start":{"line":18,"column":0},"end":{"line":137,"column":1}},"13":{"start":{"line":19,"column":2},"end":{"line":19,"column":23}},"14":{"start":{"line":20,"column":2},"end":{"line":20,"column":25}},"15":{"start":{"line":22,"column":2},"end":{"line":22,"column":37}},"16":{"start":{"line":23,"column":2},"end":{"line":23,"column":49}},"17":{"start":{"line":25,"column":2},"end":{"line":122,"column":3}},"18":{"start":{"line":26,"column":4},"end":{"line":29,"column":5}},"19":{"start":{"line":27,"column":6},"end":{"line":27,"column":21}},"20":{"start":{"line":28,"column":6},"end":{"line":28,"column":18}},"21":{"start":{"line":30,"column":4},"end":{"line":30,"column":24}},"22":{"start":{"line":32,"column":4},"end":{"line":121,"column":6}},"23":{"start":{"line":35,"column":8},"end":{"line":48,"column":9}},"24":{"start":{"line":37,"column":10},"end":{"line":45,"column":12}},"25":{"start":{"line":47,"column":10},"end":{"line":47,"column":24}},"26":{"start":{"line":50,"column":8},"end":{"line":50,"column":21}},"27":{"start":{"line":52,"column":8},"end":{"line":56,"column":10}},"28":{"start":{"line":53,"column":10},"end":{"line":53,"column":46}},"29":{"start":{"line":54,"column":10},"end":{"line":54,"column":29}},"30":{"start":{"line":55,"column":10},"end":{"line":55,"column":17}},"31":{"start":{"line":57,"column":8},"end":{"line":57,"column":35}},"32":{"start":{"line":60,"column":8},"end":{"line":60,"column":35}},"33":{"start":{"line":61,"column":8},"end":{"line":103,"column":10}},"34":{"start":{"line":62,"column":10},"end":{"line":64,"column":11}},"35":{"start":{"line":63,"column":12},"end":{"line":63,"column":32}},"36":{"start":{"line":67,"column":10},"end":{"line":69,"column":12}},"37":{"start":{"line":71,"column":10},"end":{"line":71,"column":42}},"38":{"start":{"line":72,"column":10},"end":{"line":72,"column":53}},"39":{"start":{"line":73,"column":10},"end":{"line":73,"column":61}},"40":{"start":{"line":76,"column":10},"end":{"line":80,"column":12}},"41":{"start":{"line":82,"column":10},"end":{"line":86,"column":12}},"42":{"start":{"line":89,"column":10},"end":{"line":89,"column":41}},"43":{"start":{"line":92,"column":10},"end":{"line":92,"column":42}},"44":{"start":{"line":95,"column":10},"end":{"line":97,"column":66}},"45":{"start":{"line":98,"column":10},"end":{"line":100,"column":66}},"46":{"start":{"line":102,"column":10},"end":{"line":102,"column":31}},"47":{"start":{"line":106,"column":8},"end":{"line":106,"column":45}},"48":{"start":{"line":107,"column":8},"end":{"line":107,"column":53}},"49":{"start":{"line":108,"column":8},"end":{"line":108,"column":76}},"50":{"start":{"line":109,"column":8},"end":{"line":109,"column":50}},"51":{"start":{"line":110,"column":8},"end":{"line":110,"column":58}},"52":{"start":{"line":112,"column":8},"end":{"line":112,"column":59}},"53":{"start":{"line":113,"column":8},"end":{"line":113,"column":78}},"54":{"start":{"line":116,"column":8},"end":{"line":116,"column":54}},"55":{"start":{"line":119,"column":6},"end":{"line":119,"column":27}},"56":{"start":{"line":120,"column":6},"end":{"line":120,"column":19}},"57":{"start":{"line":124,"column":2},"end":{"line":136,"column":3}},"58":{"start":{"line":125,"column":4},"end":{"line":125,"column":24}},"59":{"start":{"line":126,"column":4},"end":{"line":135,"column":6}},"60":{"start":{"line":127,"column":14},"end":{"line":127,"column":34}},"61":{"start":{"line":128,"column":14},"end":{"line":128,"column":32}},"62":{"start":{"line":130,"column":6},"end":{"line":133,"column":7}},"63":{"start":{"line":131,"column":8},"end":{"line":131,"column":27}},"64":{"start":{"line":132,"column":8},"end":{"line":132,"column":49}},"65":{"start":{"line":134,"column":6},"end":{"line":134,"column":16}},"66":{"start":{"line":139,"column":0},"end":{"line":139,"column":24}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]},"2":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":10},"end":{"line":62,"column":10}},{"start":{"line":62,"column":10},"end":{"line":62,"column":10}}]},"3":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":6},"end":{"line":130,"column":6}},{"start":{"line":130,"column":6},"end":{"line":130,"column":6}}]}},"code":["'use strict'","","const series = require('async/series')","const Hapi = require('hapi')","const debug = require('debug')","const multiaddr = require('multiaddr')","const setHeader = require('hapi-set-header')","const once = require('once')","","const IPFS = require('../core')","const errorHandler = require('./error-handler')","","function uriToMultiaddr (uri) {","  const ipPort = uri.split('/')[2].split(':')","  return `/ip4/${ipPort[0]}/tcp/${ipPort[1]}`","}","","function HttpApi (repo, config) {","  this.node = undefined","  this.server = undefined","","  this.log = debug('jsipfs:http-api')","  this.log.error = debug('jsipfs:http-api:error')","","  this.start = (init, callback) => {","    if (typeof init === 'function') {","      callback = init","      init = false","    }","    this.log('starting')","","    series([","      (cb) => {","        // try-catch so that programmer errors are not swallowed during testing","        try {","          // start the daemon","          this.node = new IPFS({","            repo: repo,","            init: init,","            start: true,","            config: config,","            EXPERIMENTAL: {","              pubsub: true","            }","          })","        } catch (err) {","          return cb(err)","        }","","        cb = once(cb)","","        this.node.once('error', (err) => {","          this.log('error starting core', err)","          err.code = 'ENOENT'","          cb(err)","        })","        this.node.once('start', cb)","      },","      (cb) => {","        this.log('fetching config')","        this.node._repo.config.get((err, config) => {","          if (err) {","            return callback(err)","          }","","          // CORS is enabled by default","          this.server = new Hapi.Server({","            connections: { routes: { cors: true } }","          })","","          this.server.app.ipfs = this.node","          const api = config.Addresses.API.split('/')","          const gateway = config.Addresses.Gateway.split('/')","","          // select which connection with server.select(<label>) to add routes","          this.server.connection({","            host: api[2],","            port: api[4],","            labels: 'API'","          })","","          this.server.connection({","            host: gateway[2],","            port: gateway[4],","            labels: 'Gateway'","          })","","          // Nicer errors","          errorHandler(this, this.server)","","          // load routes","          require('./routes')(this.server)","","          // Set default headers","          setHeader(this.server,","            'Access-Control-Allow-Headers',","            'X-Stream-Output, X-Chunked-Output, X-Content-Length')","          setHeader(this.server,","            'Access-Control-Expose-Headers',","            'X-Stream-Output, X-Chunked-Output, X-Content-Length')","","          this.server.start(cb)","        })","      },","      (cb) => {","        const api = this.server.select('API')","        const gateway = this.server.select('Gateway')","        this.apiMultiaddr = multiaddr('/ip4/127.0.0.1/tcp/' + api.info.port)","        api.info.ma = uriToMultiaddr(api.info.uri)","        gateway.info.ma = uriToMultiaddr(gateway.info.uri)","","        console.log('API is listening on: %s', api.info.ma)","        console.log('Gateway (readonly) is listening on: %s', gateway.info.ma)","","        // for the CLI to know the where abouts of the API","        this.node._repo.setApiAddress(api.info.ma, cb)","      }","    ], (err) => {","      this.log('done', err)","      callback(err)","    })","  }","","  this.stop = (callback) => {","    this.log('stopping')","    series([","      (cb) => this.server.stop(cb),","      (cb) => this.node.stop(cb)","    ], (err) => {","      if (err) {","        this.log.error(err)","        console.log('There were errors stopping')","      }","      callback()","    })","  }","}","","module.exports = HttpApi",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"10":1,"11":1,"13":1,"14":0,"15":0,"18":1,"19":0,"20":0,"22":0,"23":0,"25":0,"26":0,"27":0,"28":0,"30":0,"32":0,"35":0,"37":0,"47":0,"50":0,"52":0,"53":0,"54":0,"55":0,"57":0,"60":0,"61":0,"62":0,"63":0,"67":0,"71":0,"72":0,"73":0,"76":0,"82":0,"89":0,"92":0,"95":0,"98":0,"102":0,"106":0,"107":0,"108":0,"109":0,"110":0,"112":0,"113":0,"116":0,"119":0,"120":0,"124":0,"125":0,"126":0,"127":0,"128":0,"130":0,"131":0,"132":0,"134":0,"139":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/dag.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/dag.js","s":{"1":1,"2":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":10},"end":{"line":8,"column":18}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":10},"end":{"line":13,"column":17}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":15,"column":1}},"2":{"start":{"line":9,"column":4},"end":{"line":10,"column":24}}},"branchMap":{},"code":["'use strict'","","module.exports = {","  command: 'dag',","","  description: 'Interact with ipld dag objects.',","","  builder (yargs) {","    return yargs","      .commandDir('dag')","  },","","  handler (argv) {","  }","}",""],"l":{"3":1,"9":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/dns.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/dns.js","s":{"1":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":10},"end":{"line":8,"column":17}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":10,"column":1}}},"branchMap":{},"code":["'use strict'","","module.exports = {","  command: 'dns',","","  describe: '',","","  handler (argv) {","  }","}",""],"l":{"3":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/files.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/files.js","s":{"1":1,"2":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":10},"end":{"line":8,"column":18}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":10},"end":{"line":13,"column":17}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":14,"column":1}},"2":{"start":{"line":9,"column":4},"end":{"line":10,"column":26}}},"branchMap":{},"code":["'use strict'","","module.exports = {","  command: 'files',","","  description: 'Unixfs commands',","","  builder (yargs) {","    return yargs","      .commandDir('files')","  },","","  handler (argv) {}","}",""],"l":{"3":1,"9":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/id.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/id.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":10},"end":{"line":15,"column":17}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":25,"column":1}},"2":{"start":{"line":17,"column":4},"end":{"line":23,"column":6}},"3":{"start":{"line":18,"column":6},"end":{"line":20,"column":7}},"4":{"start":{"line":19,"column":8},"end":{"line":19,"column":17}},"5":{"start":{"line":22,"column":6},"end":{"line":22,"column":44}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":6},"end":{"line":18,"column":6}},{"start":{"line":18,"column":6},"end":{"line":18,"column":6}}]}},"code":["'use strict'","","module.exports = {","  command: 'id',","","  describe: 'Shows IPFS Node ID info',","","  builder: {","    format: {","      alias: 'f',","      type: 'string'","    }","  },","","  handler (argv) {","    // TODO: handle argv.format","    argv.ipfs.id((err, id) => {","      if (err) {","        throw err","      }","","      console.log(JSON.stringify(id, '', 2))","    })","  }","}",""],"l":{"3":1,"17":0,"18":0,"19":0,"22":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/init.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/init.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":10},"end":{"line":26,"column":17}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":33}},"4":{"start":{"line":7,"column":0},"end":{"line":52,"column":1}},"5":{"start":{"line":27,"column":4},"end":{"line":27,"column":36}},"6":{"start":{"line":29,"column":4},"end":{"line":29,"column":40}},"7":{"start":{"line":30,"column":4},"end":{"line":30,"column":44}},"8":{"start":{"line":32,"column":4},"end":{"line":36,"column":6}},"9":{"start":{"line":38,"column":4},"end":{"line":50,"column":6}},"10":{"start":{"line":43,"column":6},"end":{"line":49,"column":7}},"11":{"start":{"line":44,"column":8},"end":{"line":46,"column":9}},"12":{"start":{"line":45,"column":10},"end":{"line":45,"column":76}},"13":{"start":{"line":47,"column":8},"end":{"line":47,"column":37}},"14":{"start":{"line":48,"column":8},"end":{"line":48,"column":23}}},"branchMap":{"1":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":6},"end":{"line":43,"column":6}},{"start":{"line":43,"column":6},"end":{"line":43,"column":6}}]},"2":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":8},"end":{"line":44,"column":8}},{"start":{"line":44,"column":8},"end":{"line":44,"column":8}}]}},"code":["'use strict'","","const Repo = require('ipfs-repo')","const IPFS = require('../../core')","const utils = require('../utils')","","module.exports = {","  command: 'init',","","  describe: 'Initialize a local IPFS node',","","  builder: {","    bits: {","      type: 'number',","      alias: 'b',","      default: '2048',","      describe: 'Number of bits to use in the generated RSA private key (defaults to 2048)'","    },","    emptyRepo: {","      alias: 'e',","      type: 'boolean',","      describe: \"Don't add and pin help files to the local storage\"","    }","  },","","  handler (argv) {","    const path = utils.getRepoPath()","","    const log = utils.createLogger(true)","    log(`initializing ipfs node at ${path}`)","","    const node = new IPFS({","      repo: new Repo(path),","      init: false,","      start: false","    })","","    node.init({","      bits: argv.bits,","      emptyRepo: argv.emptyRepo,","      log: log","    }, (err) => {","      if (err) {","        if (err.code === 'EACCES') {","          err.message = `EACCES: permission denied, stat $IPFS_PATH/version`","        }","        console.error(err.toString())","        process.exit(1)","      }","    })","  }","}",""],"l":{"3":1,"4":1,"5":1,"7":1,"27":0,"29":0,"30":0,"32":0,"38":0,"43":0,"44":0,"45":0,"47":0,"48":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/ls.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/ls.js","s":{"1":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":10},"end":{"line":8,"column":17}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":10,"column":1}}},"branchMap":{},"code":["'use strict'","","module.exports = {","  command: 'ls',","","  describe: '',","","  handler (argv) {","  }","}",""],"l":{"3":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/mount.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/mount.js","s":{"1":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":10},"end":{"line":8,"column":17}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":10,"column":1}}},"branchMap":{},"code":["'use strict'","","module.exports = {","  command: 'mount',","","  describe: '',","","  handler (argv) {","  }","}",""],"l":{"3":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/object.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/object.js","s":{"1":1,"2":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":10},"end":{"line":8,"column":18}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":10},"end":{"line":13,"column":17}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":15,"column":1}},"2":{"start":{"line":9,"column":4},"end":{"line":10,"column":27}}},"branchMap":{},"code":["'use strict'","","module.exports = {","  command: 'object',","","  description: 'Interact with ipfs objects.',","","  builder (yargs) {","    return yargs","      .commandDir('object')","  },","","  handler (argv) {","  }","}",""],"l":{"3":1,"9":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/ping.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/ping.js","s":{"1":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":10},"end":{"line":8,"column":17}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":10,"column":1}}},"branchMap":{},"code":["'use strict'","","module.exports = {","  command: 'ping',","","  describe: '',","","  handler (argv) {","  }","}",""],"l":{"3":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/pubsub.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/pubsub.js","s":{"1":1,"2":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":10},"end":{"line":8,"column":18}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":10},"end":{"line":13,"column":17}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":14,"column":1}},"2":{"start":{"line":9,"column":4},"end":{"line":10,"column":27}}},"branchMap":{},"code":["'use strict'","","module.exports = {","  command: 'pubsub',","","  description: 'pubsub commands',","","  builder (yargs) {","    return yargs","      .commandDir('pubsub')","  },","","  handler (argv) {}","}",""],"l":{"3":1,"9":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/refs.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/refs.js","s":{"1":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":10},"end":{"line":8,"column":17}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":10,"column":1}}},"branchMap":{},"code":["'use strict'","","module.exports = {","  command: 'refs',","","  describe: '',","","  handler (argv) {","  }","}",""],"l":{"3":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/repo.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/repo.js","s":{"1":1,"2":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":10},"end":{"line":8,"column":18}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":10},"end":{"line":13,"column":17}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":15,"column":1}},"2":{"start":{"line":9,"column":4},"end":{"line":10,"column":25}}},"branchMap":{},"code":["'use strict'","","module.exports = {","  command: 'repo',","","  description: 'Manipulate the IPFS repo.',","","  builder (yargs) {","    return yargs","      .commandDir('repo')","  },","","  handler (argv) {","  }","}",""],"l":{"3":1,"9":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/resolve.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/resolve.js","s":{"1":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":10},"end":{"line":8,"column":17}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":10,"column":1}}},"branchMap":{},"code":["'use strict'","","module.exports = {","  command: 'resolve',","","  describe: '',","","  handler (argv) {","  }","}",""],"l":{"3":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/swarm.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/swarm.js","s":{"1":1,"2":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":10},"end":{"line":8,"column":18}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":10},"end":{"line":13,"column":17}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":15,"column":1}},"2":{"start":{"line":9,"column":4},"end":{"line":10,"column":26}}},"branchMap":{},"code":["'use strict'","","module.exports = {","  command: 'swarm',","","  description: 'Swarm inspection tool.',","","  builder (yargs) {","    return yargs","      .commandDir('swarm')","  },","","  handler (argv) {","  }","}",""],"l":{"3":1,"9":0}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/update.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/update.js","s":{"1":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":10},"end":{"line":8,"column":17}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":10,"column":1}}},"branchMap":{},"code":["'use strict'","","module.exports = {","  command: 'update',","","  describe: '',","","  handler (argv) {","  }","}",""],"l":{"3":1}},"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/version.js":{"path":"/home/travis/build/npmtest/node-npmtest-ipfs/node_modules/ipfs/src/cli/commands/version.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":24,"loc":{"start":{"line":24,"column":10},"end":{"line":24,"column":17}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":34,"column":1}},"2":{"start":{"line":26,"column":4},"end":{"line":32,"column":6}},"3":{"start":{"line":27,"column":6},"end":{"line":29,"column":7}},"4":{"start":{"line":28,"column":8},"end":{"line":28,"column":17}},"5":{"start":{"line":31,"column":6},"end":{"line":31,"column":56}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":6},"end":{"line":27,"column":6}},{"start":{"line":27,"column":6},"end":{"line":27,"column":6}}]}},"code":["'use strict'","","module.exports = {","  command: 'version',","","  describe: 'Shows IPFS version information',","","  builder: {","    number: {","      alias: 'n',","      type: 'boolean',","      default: false","    },","    commit: {","      type: 'boolean',","      default: false","    },","    repo: {","      type: 'boolean',","      default: false","    }","  },","","  handler (argv) {","    // TODO: handle argv.{repo|commit|number}","    argv.ipfs.version((err, version) => {","      if (err) {","        throw err","      }","","      console.log(`js-ipfs version: ${version.version}`)","    })","  }","}",""],"l":{"3":1,"26":0,"27":0,"28":0,"31":0}}}